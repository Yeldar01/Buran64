
AVRASM ver. 2.1.30  F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm Wed Jun 21 16:14:01 2023

F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1084): warning: Register r6 already defined by the .DEF directive
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1085): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega64A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : No
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega64A
                 	#pragma AVRPART MEMORY PROG_FLASH 65536
                 	#pragma AVRPART MEMORY EEPROM 2048
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _activePage=R6
                 	.DEF _activePage_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 05f2 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 06bb 	JMP  _timer1_compa_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0677 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 a320
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0xA3,0x0,0x0,0x0,0x0
00004a 0000
00004b 0400
00004c 0404
00004d 0404      	.DB  0x0,0x0,0x0,0x4,0x4,0x4,0x4,0x4
00004e 0400
00004f 0a0a
000050 000a
000051 0000      	.DB  0x0,0x4,0xA,0xA,0xA,0x0,0x0,0x0
000052 0a00
000053 1f0a
000054 1f0a
000055 0a0a      	.DB  0x0,0xA,0xA,0x1F,0xA,0x1F,0xA,0xA
000056 1e04
000057 0e05
000058 0f14
000059 0304      	.DB  0x4,0x1E,0x5,0xE,0x14,0xF,0x4,0x3
00005a 0813
00005b 0204
00005c 1819
00005d 0906      	.DB  0x13,0x8,0x4,0x2,0x19,0x18,0x6,0x9
00005e 0205
00005f 0915
000060 0616
000061 0204      	.DB  0x5,0x2,0x15,0x9,0x16,0x6,0x4,0x2
000062 0000
000063 0000
000064 0408
000065 0202      	.DB  0x0,0x0,0x0,0x0,0x8,0x4,0x2,0x2
000066 0402
000067 0208
000068 0804
000069 0808      	.DB  0x2,0x4,0x8,0x2,0x4,0x8,0x8,0x8
00006a 0204
00006b 0a00
00006c 1f04
00006d 0a04      	.DB  0x4,0x2,0x0,0xA,0x4,0x1F,0x4,0xA
00006e 0000
00006f 0404
000070 041f
000071 0004      	.DB  0x0,0x0,0x4,0x4,0x1F,0x4,0x4,0x0
000072 0000
000073 0000
000074 0406
000075 0002      	.DB  0x0,0x0,0x0,0x0,0x6,0x4,0x2,0x0
000076 0000
000077 001f
000078 0000
000079 0000      	.DB  0x0,0x0,0x1F,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0606
00007c 0000
00007d 0810      	.DB  0x0,0x0,0x6,0x6,0x0,0x0,0x10,0x8
00007e 0204
00007f 0001
000080 110e
000081 1519      	.DB  0x4,0x2,0x1,0x0,0xE,0x11,0x19,0x15
000082 1113
000083 040e
000084 0406
000085 0404      	.DB  0x13,0x11,0xE,0x4,0x6,0x4,0x4,0x4
000086 0e04
000087 110e
000088 0810
000089 0204      	.DB  0x4,0xE,0xE,0x11,0x10,0x8,0x4,0x2
00008a 1f1f
00008b 0408
00008c 1008
00008d 0e11      	.DB  0x1F,0x1F,0x8,0x4,0x8,0x10,0x11,0xE
00008e 0c08
00008f 090a
000090 081f
000091 1f08      	.DB  0x8,0xC,0xA,0x9,0x1F,0x8,0x8,0x1F
000092 0f01
000093 1010
000094 0e11
000095 020c      	.DB  0x1,0xF,0x10,0x10,0x11,0xE,0xC,0x2
000096 0f01
000097 1111
000098 1f0e
000099 0810      	.DB  0x1,0xF,0x11,0x11,0xE,0x1F,0x10,0x8
00009a 0204
00009b 0202
00009c 110e
00009d 0e11      	.DB  0x4,0x2,0x2,0x2,0xE,0x11,0x11,0xE
00009e 1111
00009f 0e0e
0000a0 1111
0000a1 101e      	.DB  0x11,0x11,0xE,0xE,0x11,0x11,0x1E,0x10
0000a2 0608
0000a3 0600
0000a4 0006
0000a5 0606      	.DB  0x8,0x6,0x0,0x6,0x6,0x0,0x6,0x6
0000a6 0000
0000a7 0606
0000a8 0600
0000a9 0204      	.DB  0x0,0x0,0x6,0x6,0x0,0x6,0x4,0x2
0000aa 0810
0000ab 0204
0000ac 0804
0000ad 0010      	.DB  0x10,0x8,0x4,0x2,0x4,0x8,0x10,0x0
0000ae 1f00
0000af 1f00
0000b0 0000
0000b1 0201      	.DB  0x0,0x1F,0x0,0x1F,0x0,0x0,0x1,0x2
0000b2 0804
0000b3 0204
0000b4 0e01
0000b5 1011      	.DB  0x4,0x8,0x4,0x2,0x1,0xE,0x11,0x10
0000b6 0408
0000b7 0400
0000b8 110e
0000b9 1610      	.DB  0x8,0x4,0x0,0x4,0xE,0x11,0x10,0x16
0000ba 1515
0000bb 0e0e
0000bc 1111
0000bd 1f11      	.DB  0x15,0x15,0xE,0xE,0x11,0x11,0x11,0x1F
0000be 1111
0000bf 110f
0000c0 0f11
0000c1 1111      	.DB  0x11,0x11,0xF,0x11,0x11,0xF,0x11,0x11
0000c2 0e0f
0000c3 0111
0000c4 0101
0000c5 0e11      	.DB  0xF,0xE,0x11,0x1,0x1,0x1,0x11,0xE
0000c6 0907
0000c7 1111
0000c8 0911
0000c9 1f07      	.DB  0x7,0x9,0x11,0x11,0x11,0x9,0x7,0x1F
0000ca 0101
0000cb 010f
0000cc 1f01
0000cd 011f      	.DB  0x1,0x1,0xF,0x1,0x1,0x1F,0x1F,0x1
0000ce 0701
0000cf 0101
0000d0 0e01
0000d1 0111      	.DB  0x1,0x7,0x1,0x1,0x1,0xE,0x11,0x1
0000d2 1901
0000d3 0e11
0000d4 1111
0000d5 1f11      	.DB  0x1,0x19,0x11,0xE,0x11,0x11,0x11,0x1F
0000d6 1111
0000d7 0e11
0000d8 0404
0000d9 0404      	.DB  0x11,0x11,0x11,0xE,0x4,0x4,0x4,0x4
0000da 0e04
0000db 081c
0000dc 0808
0000dd 0908      	.DB  0x4,0xE,0x1C,0x8,0x8,0x8,0x8,0x9
0000de 1106
0000df 0509
0000e0 0503
0000e1 1109      	.DB  0x6,0x11,0x9,0x5,0x3,0x5,0x9,0x11
0000e2 0101
0000e3 0101
0000e4 0101
0000e5 111f      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1F,0x11
0000e6 151b
0000e7 1111
0000e8 1111
0000e9 1111      	.DB  0x1B,0x15,0x11,0x11,0x11,0x11,0x11,0x11
0000ea 1513
0000eb 1119
0000ec 0e11
0000ed 1111      	.DB  0x13,0x15,0x19,0x11,0x11,0xE,0x11,0x11
0000ee 1111
0000ef 0e11
0000f0 110f
0000f1 0f11      	.DB  0x11,0x11,0x11,0xE,0xF,0x11,0x11,0xF
0000f2 0101
0000f3 0e01
0000f4 1111
0000f5 1511      	.DB  0x1,0x1,0x1,0xE,0x11,0x11,0x11,0x15
0000f6 1609
0000f7 110f
0000f8 0f11
0000f9 0905      	.DB  0x9,0x16,0xF,0x11,0x11,0xF,0x5,0x9
0000fa 1e11
0000fb 0101
0000fc 100e
0000fd 0f10      	.DB  0x11,0x1E,0x1,0x1,0xE,0x10,0x10,0xF
0000fe 041f
0000ff 0404
000100 0404
000101 1104      	.DB  0x1F,0x4,0x4,0x4,0x4,0x4,0x4,0x11
000102 1111
000103 1111
000104 0e11
000105 1111      	.DB  0x11,0x11,0x11,0x11,0x11,0xE,0x11,0x11
000106 1111
000107 0a11
000108 1104
000109 1111      	.DB  0x11,0x11,0x11,0xA,0x4,0x11,0x11,0x11
00010a 1515
00010b 111b
00010c 1111
00010d 040a      	.DB  0x15,0x15,0x1B,0x11,0x11,0x11,0xA,0x4
00010e 110a
00010f 1111
000110 0a11
000111 0404      	.DB  0xA,0x11,0x11,0x11,0x11,0xA,0x4,0x4
000112 0404
000113 101f
000114 0408
000115 0102      	.DB  0x4,0x4,0x1F,0x10,0x8,0x4,0x2,0x1
000116 1c1f
000117 0404
000118 0404
000119 1c04      	.DB  0x1F,0x1C,0x4,0x4,0x4,0x4,0x4,0x1C
00011a 0100
00011b 0402
00011c 1008
00011d 0700      	.DB  0x0,0x1,0x2,0x4,0x8,0x10,0x0,0x7
00011e 0404
00011f 0404
000120 0704
000121 0a04      	.DB  0x4,0x4,0x4,0x4,0x4,0x7,0x4,0xA
000122 0011
000123 0000
000124 0000
000125 0000      	.DB  0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 1f00
000128 0402
000129 0008      	.DB  0x0,0x0,0x0,0x1F,0x2,0x4,0x8,0x0
00012a 0000
00012b 0000
00012c 0e00
00012d 1e10      	.DB  0x0,0x0,0x0,0x0,0x0,0xE,0x10,0x1E
00012e 1e11
00012f 0101
000130 130d
000131 1111      	.DB  0x11,0x1E,0x1,0x1,0xD,0x13,0x11,0x11
000132 000f
000133 0e00
000134 0101
000135 0e11      	.DB  0xF,0x0,0x0,0xE,0x1,0x1,0x11,0xE
000136 1010
000137 1916
000138 1111
000139 001e      	.DB  0x10,0x10,0x16,0x19,0x11,0x11,0x1E,0x0
00013a 0e00
00013b 1f11
00013c 0e01
00013d 120c      	.DB  0x0,0xE,0x11,0x1F,0x1,0xE,0xC,0x12
00013e 0702
00013f 0202
000140 0002
000141 1e00      	.DB  0x2,0x7,0x2,0x2,0x2,0x0,0x0,0x1E
000142 1e11
000143 0c10
000144 0101
000145 130d      	.DB  0x11,0x1E,0x10,0xC,0x1,0x1,0xD,0x13
000146 1111
000147 0411
000148 0600
000149 0404      	.DB  0x11,0x11,0x11,0x4,0x0,0x6,0x4,0x4
00014a 0e04
00014b 0008
00014c 080c
00014d 0908      	.DB  0x4,0xE,0x8,0x0,0xC,0x8,0x8,0x9
00014e 0206
00014f 1202
000150 060a
000151 120a      	.DB  0x6,0x2,0x2,0x12,0xA,0x6,0xA,0x12
000152 0406
000153 0404
000154 0404
000155 000e      	.DB  0x6,0x4,0x4,0x4,0x4,0x4,0xE,0x0
000156 0b00
000157 1515
000158 1111
000159 0000      	.DB  0x0,0xB,0x15,0x15,0x11,0x11,0x0,0x0
00015a 130d
00015b 1111
00015c 0011
00015d 0e00      	.DB  0xD,0x13,0x11,0x11,0x11,0x0,0x0,0xE
00015e 1111
00015f 0e11
000160 0000
000161 110f      	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0xF,0x11
000162 010f
000163 0001
000164 1600
000165 1e19      	.DB  0xF,0x1,0x1,0x0,0x0,0x16,0x19,0x1E
000166 1010
000167 0000
000168 130d
000169 0101      	.DB  0x10,0x10,0x0,0x0,0xD,0x13,0x1,0x1
00016a 0001
00016b 0e00
00016c 0e01
00016d 0f10      	.DB  0x1,0x0,0x0,0xE,0x1,0xE,0x10,0xF
00016e 0202
00016f 0207
000170 1202
000171 000c      	.DB  0x2,0x2,0x7,0x2,0x2,0x12,0xC,0x0
000172 1100
000173 1111
000174 1619
000175 0000      	.DB  0x0,0x11,0x11,0x11,0x19,0x16,0x0,0x0
000176 1111
000177 0a11
000178 0004
000179 1100      	.DB  0x11,0x11,0x11,0xA,0x4,0x0,0x0,0x11
00017a 1511
00017b 0a15
00017c 0000
00017d 0a11      	.DB  0x11,0x15,0x15,0xA,0x0,0x0,0x11,0xA
00017e 0a04
00017f 0011
000180 1100
000181 1e11      	.DB  0x4,0xA,0x11,0x0,0x0,0x11,0x11,0x1E
000182 0e10
000183 0000
000184 081f
000185 0204      	.DB  0x10,0xE,0x0,0x0,0x1F,0x8,0x4,0x2
000186 081f
000187 0404
000188 0402
000189 0804      	.DB  0x1F,0x8,0x4,0x4,0x2,0x4,0x4,0x8
00018a 0404
00018b 0404
00018c 0404
00018d 0204      	.DB  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x2
00018e 0404
00018f 0408
000190 0204
000191 1502      	.DB  0x4,0x4,0x8,0x4,0x4,0x2,0x2,0x15
000192 0008
000193 0000
000194 1f00
000195 1111      	.DB  0x8,0x0,0x0,0x0,0x0,0x1F,0x11,0x11
000196 1111
000197 1f11
000198 0000
000199 0000      	.DB  0x11,0x11,0x11,0x1F,0x0,0x0,0x0,0x0
00019a 0000
00019b 0e00
00019c 1111
00019d 1f11      	.DB  0x0,0x0,0x0,0xE,0x11,0x11,0x11,0x1F
00019e 1111
00019f 111f
0001a0 0f01
0001a1 1111      	.DB  0x11,0x11,0x1F,0x11,0x1,0xF,0x11,0x11
0001a2 0f0f
0001a3 1111
0001a4 110f
0001a5 0f11      	.DB  0xF,0xF,0x11,0x11,0xF,0x11,0x11,0xF
0001a6 111f
0001a7 0101
0001a8 0101
0001a9 1e01      	.DB  0x1F,0x11,0x1,0x1,0x1,0x1,0x1,0x1E
0001aa 1414
0001ab 1214
0001ac 1f11
0001ad 011f      	.DB  0x14,0x14,0x14,0x12,0x11,0x1F,0x1F,0x1
0001ae 0f01
0001af 0101
0001b0 151f
0001b1 1515      	.DB  0x1,0xF,0x1,0x1,0x1F,0x15,0x15,0x15
0001b2 150e
0001b3 1515
0001b4 100f
0001b5 0e10      	.DB  0xE,0x15,0x15,0x15,0xF,0x10,0x10,0xE
0001b6 1010
0001b7 110f
0001b8 1911
0001b9 1315      	.DB  0x10,0x10,0xF,0x11,0x11,0x19,0x15,0x13
0001ba 1111
0001bb 040a
0001bc 1911
0001bd 1315      	.DB  0x11,0x11,0xA,0x4,0x11,0x19,0x15,0x13
0001be 1111
0001bf 0509
0001c0 0503
0001c1 1109      	.DB  0x11,0x11,0x9,0x5,0x3,0x5,0x9,0x11
0001c2 141e
0001c3 1414
0001c4 1514
0001c5 1112      	.DB  0x1E,0x14,0x14,0x14,0x14,0x15,0x12,0x11
0001c6 151b
0001c7 1115
0001c8 1111
0001c9 1111      	.DB  0x1B,0x15,0x15,0x11,0x11,0x11,0x11,0x11
0001ca 1f11
0001cb 1111
0001cc 0e11
0001cd 1111      	.DB  0x11,0x1F,0x11,0x11,0x11,0xE,0x11,0x11
0001ce 1111
0001cf 0e11
0001d0 111f
0001d1 1111      	.DB  0x11,0x11,0x11,0xE,0x1F,0x11,0x11,0x11
0001d2 1111
0001d3 0f11
0001d4 1111
0001d5 010f      	.DB  0x11,0x11,0x11,0xF,0x11,0x11,0xF,0x1
0001d6 0101
0001d7 110e
0001d8 0101
0001d9 1101      	.DB  0x1,0x1,0xE,0x11,0x1,0x1,0x1,0x11
0001da 1f0e
0001db 0404
0001dc 0404
0001dd 0404      	.DB  0xE,0x1F,0x4,0x4,0x4,0x4,0x4,0x4
0001de 1111
0001df 0a11
0001e0 0204
0001e1 0401      	.DB  0x11,0x11,0x11,0xA,0x4,0x2,0x1,0x4
0001e2 150e
0001e3 1515
0001e4 040e
0001e5 1111      	.DB  0xE,0x15,0x15,0x15,0xE,0x4,0x11,0x11
0001e6 040a
0001e7 110a
0001e8 1111
0001e9 1111      	.DB  0xA,0x4,0xA,0x11,0x11,0x11,0x11,0x11
0001ea 1111
0001eb 1f11
0001ec 1111
0001ed 1e11      	.DB  0x11,0x11,0x11,0x1F,0x11,0x11,0x11,0x1E
0001ee 1010
0001ef 1510
0001f0 1515
0001f1 1515      	.DB  0x10,0x10,0x10,0x15,0x15,0x15,0x15,0x15
0001f2 1f15
0001f3 1515
0001f4 1515
0001f5 1515      	.DB  0x15,0x1F,0x15,0x15,0x15,0x15,0x15,0x15
0001f6 031f
0001f7 0202
0001f8 120e
0001f9 0e12      	.DB  0x1F,0x3,0x2,0x2,0xE,0x12,0x12,0xE
0001fa 1111
0001fb 1311
0001fc 1515
0001fd 0213      	.DB  0x11,0x11,0x11,0x13,0x15,0x15,0x13,0x2
0001fe 0202
0001ff 120e
000200 0e12
000201 110e      	.DB  0x2,0x2,0xE,0x12,0x12,0xE,0xE,0x11
000202 1c10
000203 1110
000204 090e
000205 1515      	.DB  0x10,0x1C,0x10,0x11,0xE,0x9,0x15,0x15
000206 1517
000207 0915
000208 111e
000209 1e11      	.DB  0x17,0x15,0x15,0x9,0x1E,0x11,0x11,0x1E
00020a 1214
00020b 0011
00020c 0e00
00020d 1e10      	.DB  0x14,0x12,0x11,0x0,0x0,0xE,0x10,0x1E
00020e 1e11
00020f 0618
000210 0f01
000211 1111      	.DB  0x11,0x1E,0x18,0x6,0x1,0xF,0x11,0x11
000212 000e
000213 0700
000214 0709
000215 0709      	.DB  0xE,0x0,0x0,0x7,0x9,0x7,0x9,0x7
000216 0000
000217 111f
000218 0101
000219 0001      	.DB  0x0,0x0,0x1F,0x11,0x1,0x1,0x1,0x0
00021a 1e00
00021b 1214
00021c 1f11
00021d 0000      	.DB  0x0,0x1E,0x14,0x12,0x11,0x1F,0x0,0x0
00021e 110e
00021f 011f
000220 000e
000221 1500      	.DB  0xE,0x11,0x1F,0x1,0xE,0x0,0x0,0x15
000222 0e15
000223 1515
000224 0000
000225 100f      	.DB  0x15,0xE,0x15,0x15,0x0,0x0,0xF,0x10
000226 100c
000227 000f
000228 1100
000229 1519      	.DB  0xC,0x10,0xF,0x0,0x0,0x11,0x19,0x15
00022a 1113
00022b 040a
00022c 1111
00022d 1519      	.DB  0x13,0x11,0xA,0x4,0x11,0x11,0x19,0x15
00022e 0013
00022f 0900
000230 0305
000231 0905      	.DB  0x13,0x0,0x0,0x9,0x5,0x3,0x5,0x9
000232 0000
000233 141e
000234 1514
000235 0012      	.DB  0x0,0x0,0x1E,0x14,0x14,0x15,0x12,0x0
000236 1100
000237 151b
000238 1111
000239 0000      	.DB  0x0,0x11,0x1B,0x15,0x11,0x11,0x0,0x0
00023a 1111
00023b 111f
00023c 0011
00023d 0e00      	.DB  0x11,0x11,0x1F,0x11,0x11,0x0,0x0,0xE
00023e 1111
00023f 0e11
000240 0000
000241 111f      	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0x1F,0x11
000242 1111
000243 0011
000244 0f00
000245 0f11      	.DB  0x11,0x11,0x11,0x0,0x0,0xF,0x11,0xF
000246 0101
000247 0000
000248 010e
000249 1101      	.DB  0x1,0x1,0x0,0x0,0xE,0x1,0x1,0x11
00024a 000e
00024b 1f00
00024c 0404
00024d 0404      	.DB  0xE,0x0,0x0,0x1F,0x4,0x4,0x4,0x4
00024e 0000
00024f 1111
000250 101e
000251 000e      	.DB  0x0,0x0,0x11,0x11,0x1E,0x10,0xE,0x0
000252 0400
000253 150e
000254 0e15
000255 0000      	.DB  0x0,0x4,0xE,0x15,0x15,0xE,0x0,0x0
000256 0a11
000257 0a04
000258 0011
000259 1100      	.DB  0x11,0xA,0x4,0xA,0x11,0x0,0x0,0x11
00025a 1111
00025b 1f11
00025c 0000
00025d 1111      	.DB  0x11,0x11,0x11,0x1F,0x0,0x0,0x11,0x11
00025e 101e
00025f 0010
000260 1500
000261 1515      	.DB  0x1E,0x10,0x10,0x0,0x0,0x15,0x15,0x15
000262 1f15
000263 0000
000264 1515
000265 1515      	.DB  0x15,0x1F,0x0,0x0,0x15,0x15,0x15,0x15
000266 001f
000267 0300
000268 0e02
000269 0e12      	.DB  0x1F,0x0,0x0,0x3,0x2,0xE,0x12,0xE
00026a 0000
00026b 1111
00026c 1917
00026d 0017      	.DB  0x0,0x0,0x11,0x11,0x17,0x19,0x17,0x0
00026e 0100
00026f 0701
000270 0709
000271 0000      	.DB  0x0,0x1,0x1,0x7,0x9,0x7,0x0,0x0
000272 110e
000273 111c
000274 000e
000275 0900      	.DB  0xE,0x11,0x1C,0x11,0xE,0x0,0x0,0x9
000276 1715
000277 0915
000278 0000
000279 111e      	.DB  0x15,0x17,0x15,0x9,0x0,0x0,0x1E,0x11
00027a 141e
00027b 0412
00027c 0a15
00027d 0a11      	.DB  0x1E,0x14,0x12,0x4,0x15,0xA,0x11,0xA
00027e 0415
00027f 0900
000280 0016
000281 1609      	.DB  0x15,0x4,0x0,0x9,0x16,0x0,0x9,0x16
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1274): warning: .cseg .db misalignment - padding zero byte
000282 0000      	.DB  0x0
                 _flame:
000283 000f
000284 000c
000285 0038
000286 01fe      	.DB  0xF,0x0,0xC,0x0,0x38,0x0,0xFE,0x1
000287 03ff
000288 07ff
000289 0fe1
00028a 7fc0      	.DB  0xFF,0x3,0xFF,0x7,0xE1,0xF,0xC0,0x7F
00028b 3fe0
00028c 1ff1
00028d 0fff
00028e 07ff      	.DB  0xE0,0x3F,0xF1,0x1F,0xFF,0xF,0xFF,0x7
00028f 03fe
000290 0078      	.DB  0xFE,0x3,0x78,0x0
                 _burner:
000291 0015
000292 0014
000293 0000
000294 e01c      	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
000295 1fff
000296 fff8
000297 3c1f
000298 1c00      	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
000299 000e
00029a 061c
00029b 1c00
00029c 1e73      	.DB  0xE,0x0,0x1C,0x6,0x0,0x1C,0x73,0x1E
00029d 731c
00029e 1f9e
00029f 9f73
0002a0 e31f      	.DB  0x1C,0x73,0x9E,0x1F,0x73,0x9F,0x1F,0xE3
0002a1 1d81
0002a2 8f03
0002a3 f301
0002a4 019d      	.DB  0x81,0x1D,0x3,0x8F,0x1,0xF3,0x9D,0x1
0002a5 9df3
0002a6 f601
0002a7 00dc
0002a8 c006      	.DB  0xF3,0x9D,0x1,0xF6,0xDC,0x0,0x6,0xC0
0002a9 1c00
0002aa 0070
0002ab 3878
0002ac f800      	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
0002ad 003f
0002ae 3398
0002af f800
0002b0 003f      	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
0002b1 0015
0002b2 0014
0002b3 0000
0002b4 e01c      	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
0002b5 1fff
0002b6 fff8
0002b7 3c1f
0002b8 1c00      	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
0002b9 000e
0002ba c61c
0002bb 1c01
0002bc 01e3      	.DB  0xE,0x0,0x1C,0xC6,0x1,0x1C,0xE3,0x1
0002bd e31c
0002be 1f9c
0002bf bec3
0002c0 831f      	.DB  0x1C,0xE3,0x9C,0x1F,0xC3,0xBE,0x1F,0x83
0002c1 1dbf
0002c2 83fb
0002c3 fb01
0002c4 018e      	.DB  0xBF,0x1D,0xFB,0x83,0x1,0xFB,0x8E,0x1
0002c5 8e73
0002c6 0601
0002c7 00cf
0002c8 c706      	.DB  0x73,0x8E,0x1,0x6,0xCF,0x0,0x6,0xC7
0002c9 1c00
0002ca 0070
0002cb 3878
0002cc f800      	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
0002cd 003f
0002ce 3398
0002cf f800
0002d0 003f      	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
0002d1 0015
0002d2 0014
0002d3 0000
0002d4 e01c      	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
0002d5 1fff
0002d6 fff8
0002d7 3c1f
0002d8 1c00      	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
0002d9 000e
0002da 061c
0002db 1c07
0002dc 0f23      	.DB  0xE,0x0,0x1C,0x6,0x7,0x1C,0x23,0xF
0002dd 331c
0002de 1f8f
0002df 837b
0002e0 fb1f      	.DB  0x1C,0x33,0x8F,0x1F,0x7B,0x83,0x1F,0xFB
0002e1 1d9f
0002e2 bd33
0002e3 0301
0002e4 01b9      	.DB  0x9F,0x1D,0x33,0xBD,0x1,0x3,0xB9,0x1
0002e5 99e3
0002e6 e601
0002e7 00c1
0002e8 c1c6      	.DB  0xE3,0x99,0x1,0xE6,0xC1,0x0,0xC6,0xC1
0002e9 1c00
0002ea 0070
0002eb 3878
0002ec f800      	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
0002ed 003f
0002ee 3398
0002ef f800
0002f0 003f      	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
                 _circulation:
0002f1 0014
0002f2 0013
0002f3 0020
0002f4 3000      	.DB  0x14,0x0,0x13,0x0,0x20,0x0,0x0,0x30
0002f5 000f
0002f6 3ff8
0002f7 f800
0002f8 00f0      	.DB  0xF,0x0,0xF8,0x3F,0x0,0xF8,0xF0,0x0
0002f9 c030
0002fa 2001
0002fb 0180
0002fc 0003      	.DB  0x30,0xC0,0x1,0x20,0x80,0x1,0x3,0x0
0002fd 0300
0002fe 0000
0002ff 0003
000300 0303      	.DB  0x0,0x3,0x0,0x0,0x3,0x0,0x3,0x3
000301 0780
000302 c003
000303 030f
000304 0300      	.DB  0x80,0x7,0x3,0xC0,0xF,0x3,0x0,0x3
000305 0003
000306 0603
000307 0380
000308 800e      	.DB  0x3,0x0,0x3,0x6,0x80,0x3,0xE,0x80
000309 5c01
00030a 01c0
00030b f078
00030c 7000      	.DB  0x1,0x5C,0xC0,0x1,0x78,0xF0,0x0,0x70
00030d 003e
00030e 0e78
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1313): warning: .cseg .db misalignment - padding zero byte
00030f 0000      	.DB  0x3E,0x0,0x78,0xE,0x0
                 _error_icon:
000310 0015
000311 0014
000312 0e00
000313 0000      	.DB  0x15,0x0,0x14,0x0,0x0,0xE,0x0,0x0
000314 001f
000315 1b00
000316 8000
000317 0031      	.DB  0x1F,0x0,0x0,0x1B,0x0,0x80,0x31,0x0
000318 3180
000319 c000
00031a 0060
00031b eee0      	.DB  0x80,0x31,0x0,0xC0,0x60,0x0,0xE0,0xEE
00031c 6000
00031d 00ce
00031e 8e30
00031f 3001      	.DB  0x0,0x60,0xCE,0x0,0x30,0x8E,0x1,0x30
000320 018e
000321 0e18
000322 1803
000323 030e      	.DB  0x8E,0x1,0x18,0xE,0x3,0x18,0xE,0x3
000324 0e0c
000325 0c06
000326 0604
000327 0006      	.DB  0xC,0xE,0x6,0xC,0x4,0x6,0x6,0x0
000328 060c
000329 0c0e
00032a 0e03
00032b 0318      	.DB  0xC,0x6,0xE,0xC,0x3,0xE,0x18,0x3
00032c 1800
00032d ffff
00032e ff1f
00032f 1fff      	.DB  0x0,0x18,0xFF,0xFF,0x1F,0xFF,0xFF,0x1F
                 _snow:
000330 0011
000331 0014
000332 0100
000333 0000      	.DB  0x11,0x0,0x14,0x0,0x0,0x1,0x0,0x0
000334 0001
000335 0d60
000336 c800
000337 0027      	.DB  0x1,0x0,0x60,0xD,0x0,0xC8,0x27,0x0
000338 2108
000339 0b00
00033a 01a1
00033b e10e      	.DB  0x8,0x21,0x0,0xB,0xA1,0x1,0xE,0xE1
00033c 3c00
00033d 0079
00033e cd67
00033f c001      	.DB  0x0,0x3C,0x79,0x0,0x67,0xCD,0x1,0xC0
000340 0007
000341 07c0
000342 6700
000343 01cd      	.DB  0x7,0x0,0xC0,0x7,0x0,0x67,0xCD,0x1
000344 793c
000345 0e00
000346 00e1
000347 a10b      	.DB  0x3C,0x79,0x0,0xE,0xE1,0x0,0xB,0xA1
000348 8801
000349 0023
00034a 27c8
00034b 6000      	.DB  0x1,0x88,0x23,0x0,0xC8,0x27,0x0,0x60
00034c 000d
00034d 0100
00034e 0000
00034f 0001      	.DB  0xD,0x0,0x0,0x1,0x0,0x0,0x1,0x0
                 __glcd_mask:
000350 0100
000351 0703
000352 1f0f
000353 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1334): warning: .cseg .db misalignment - padding zero byte
000354 00ff      	.DB  0xFF
                 _st7920_base_y_G100:
000355 9080
000356 9888      	.DB  0x80,0x90,0x88,0x98
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000357 0000      	.DB  0x0,0x0
                 
                 _0x20004:
000358 0500
000359 0509
00035a 0512
00035b 051b      	.DB  LOW(_0x20003),HIGH(_0x20003),LOW(_0x20003+9),HIGH(_0x20003+9),LOW(_0x20003+18),HIGH(_0x20003+18),LOW(_0x20003+27),HIGH(_0x20003+27)
00035c 0524
00035d 052d      	.DB  LOW(_0x20003+36),HIGH(_0x20003+36),LOW(_0x20003+45),HIGH(_0x20003+45)
                 _0x20006:
00035e 0536
00035f 0541
000360 054c
000361 0557      	.DB  LOW(_0x20005),HIGH(_0x20005),LOW(_0x20005+11),HIGH(_0x20005+11),LOW(_0x20005+22),HIGH(_0x20005+22),LOW(_0x20005+33),HIGH(_0x20005+33)
000362 0562
000363 056d
000364 0578
000365 0583      	.DB  LOW(_0x20005+44),HIGH(_0x20005+44),LOW(_0x20005+55),HIGH(_0x20005+55),LOW(_0x20005+66),HIGH(_0x20005+66),LOW(_0x20005+77),HIGH(_0x20005+77)
000366 058e
000367 0599
000368 05a4      	.DB  LOW(_0x20005+88),HIGH(_0x20005+88),LOW(_0x20005+99),HIGH(_0x20005+99),LOW(_0x20005+110),HIGH(_0x20005+110)
                 _0x20008:
000369 05af
00036a 05b9
00036b 05c4
00036c 05cf      	.DB  LOW(_0x20007),HIGH(_0x20007),LOW(_0x20007+10),HIGH(_0x20007+10),LOW(_0x20007+21),HIGH(_0x20007+21),LOW(_0x20007+32),HIGH(_0x20007+32)
00036d 05da
00036e 05e5
00036f 05f0      	.DB  LOW(_0x20007+43),HIGH(_0x20007+43),LOW(_0x20007+54),HIGH(_0x20007+54),LOW(_0x20007+65),HIGH(_0x20007+65)
                 _0x2000A:
000370 05fb
000371 0602
000372 0609      	.DB  LOW(_0x20009),HIGH(_0x20009),LOW(_0x20009+7),HIGH(_0x20009+7),LOW(_0x20009+14),HIGH(_0x20009+14)
                 _0x2000C:
000373 0610
000374 0615
000375 0621
000376 062a      	.DB  LOW(_0x2000B),HIGH(_0x2000B),LOW(_0x2000B+5),HIGH(_0x2000B+5),LOW(_0x2000B+17),HIGH(_0x2000B+17),LOW(_0x2000B+26),HIGH(_0x2000B+26)
000377 063e
000378 0647
000379 0659
00037a 0667      	.DB  LOW(_0x2000B+46),HIGH(_0x2000B+46),LOW(_0x2000B+55),HIGH(_0x2000B+55),LOW(_0x2000B+73),HIGH(_0x2000B+73),LOW(_0x2000B+87),HIGH(_0x2000B+87)
00037b 0679
00037c 068b      	.DB  LOW(_0x2000B+105),HIGH(_0x2000B+105),LOW(_0x2000B+123),HIGH(_0x2000B+123)
                 _0x2000D:
00037d 0032
00037e 0005
00037f 000f
000380 0003      	.DB  0x32,0x0,0x5,0x0,0xF,0x0,0x3,0x0
000381 0200      	.DB  0x0,0x2
                 _0x20000:
000382 6469
000383 656c
000384 2020
000385 2020      	.DB  0x69,0x64,0x6C,0x65,0x20,0x20,0x20,0x20
000386 7300
000387 6174
000388 7472
000389 6e69      	.DB  0x0,0x73,0x74,0x61,0x72,0x74,0x69,0x6E
00038a 0067
00038b 6568
00038c 7461
00038d 6e69      	.DB  0x67,0x0,0x68,0x65,0x61,0x74,0x69,0x6E
00038e 2067
00038f 7000
000390 6572
000391 622d      	.DB  0x67,0x20,0x0,0x70,0x72,0x65,0x2D,0x62
000392 6f6c
000393 0077
000394 6c62
000395 776f      	.DB  0x6C,0x6F,0x77,0x0,0x62,0x6C,0x6F,0x77
000396 2032
000397 2020
000398 6300
000399 6f6f      	.DB  0x32,0x20,0x20,0x20,0x0,0x63,0x6F,0x6F
00039a 696c
00039b 676e
00039c 0020
00039d 6f6e      	.DB  0x6C,0x69,0x6E,0x67,0x20,0x0,0x6E,0x6F
00039e 656e
00039f 2020
0003a0 2020
0003a1 2020      	.DB  0x6E,0x65,0x20,0x20,0x20,0x20,0x20,0x20
0003a2 6200
0003a3 6f6c
0003a4 6977
0003a5 676e      	.DB  0x0,0x62,0x6C,0x6F,0x77,0x69,0x6E,0x67
0003a6 666f
0003a7 0066
0003a8 6c62
0003a9 776f      	.DB  0x6F,0x66,0x66,0x0,0x62,0x6C,0x6F,0x77
0003aa 7250
0003ab 4365
0003ac 6b68
0003ad 6200      	.DB  0x50,0x72,0x65,0x43,0x68,0x6B,0x0,0x62
0003ae 6f6c
0003af 6977
0003b0 676e
0003b1 2020      	.DB  0x6C,0x6F,0x77,0x69,0x6E,0x67,0x20,0x20
0003b2 0020
0003b3 7274
0003b4 6e61
0003b5 2073      	.DB  0x20,0x0,0x74,0x72,0x61,0x6E,0x73,0x20
0003b6 4e4f
0003b7 2020
0003b8 6300
0003b9 616c      	.DB  0x4F,0x4E,0x20,0x20,0x0,0x63,0x6C,0x61
0003ba 5470
0003bb 7473
0003bc 6843
0003bd 006b      	.DB  0x70,0x54,0x73,0x74,0x43,0x68,0x6B,0x0
0003be 6c63
0003bf 7061
0003c0 6e61
0003c1 7250      	.DB  0x63,0x6C,0x61,0x70,0x61,0x6E,0x50,0x72
0003c2 5765
0003c3 6300
0003c4 616c
0003c5 6170      	.DB  0x65,0x57,0x0,0x63,0x6C,0x61,0x70,0x61
0003c6 206e
0003c7 7277
0003c8 006b
0003c9 7274      	.DB  0x6E,0x20,0x77,0x72,0x6B,0x0,0x74,0x72
0003ca 6e61
0003cb 6673
0003cc 726f
0003cd 726d      	.DB  0x61,0x6E,0x73,0x66,0x6F,0x72,0x6D,0x72
0003ce 6900
0003cf 6e6f
0003d0 7420
0003d1 7365      	.DB  0x0,0x69,0x6F,0x6E,0x20,0x74,0x65,0x73
0003d2 2074
0003d3 0020
0003d4 6f69
0003d5 206e      	.DB  0x74,0x20,0x20,0x0,0x69,0x6F,0x6E,0x20
0003d6 6f77
0003d7 6b72
0003d8 2020
0003d9 2000      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x20,0x0,0x20
0003da 6f6e
0003db 6d20
0003dc 646f
0003dd 6c65      	.DB  0x6E,0x6F,0x20,0x6D,0x6F,0x64,0x65,0x6C
0003de 2000
0003df 5520
0003e0 204b
0003e1 3031      	.DB  0x0,0x20,0x20,0x55,0x4B,0x20,0x31,0x30
0003e2 2033
0003e3 0020
0003e4 2020
0003e5 4b55      	.DB  0x33,0x20,0x20,0x0,0x20,0x20,0x55,0x4B
0003e6 3220
0003e7 3330
0003e8 2020
0003e9 2000      	.DB  0x20,0x32,0x30,0x33,0x20,0x20,0x0,0x20
0003ea 5520
0003eb 204b
0003ec 3033
0003ed 2033      	.DB  0x20,0x55,0x4B,0x20,0x33,0x30,0x33,0x20
0003ee 0020
0003ef 414c
0003f0 204e
0003f1 616d      	.DB  0x20,0x0,0x4C,0x41,0x4E,0x20,0x6D,0x61
0003f2 7473
0003f3 7265
0003f4 4c00
0003f5 4e41      	.DB  0x73,0x74,0x65,0x72,0x0,0x4C,0x41,0x4E
0003f6 7320
0003f7 616c
0003f8 6576
0003f9 0031      	.DB  0x20,0x73,0x6C,0x61,0x76,0x65,0x31,0x0
0003fa 414c
0003fb 204e
0003fc 6c73
0003fd 7661      	.DB  0x4C,0x41,0x4E,0x20,0x73,0x6C,0x61,0x76
0003fe 3265
0003ff 4e00
000400 6e6f
000401 2065      	.DB  0x65,0x32,0x0,0x4E,0x6F,0x6E,0x65,0x20
000402 0020
000403 6957
000404 746e
000405 7265      	.DB  0x20,0x0,0x57,0x69,0x6E,0x74,0x65,0x72
000406 5300
000407 6d75
000408 656d
000409 0072      	.DB  0x0,0x53,0x75,0x6D,0x6D,0x65,0x72,0x0
00040a 6f4e
00040b 656e
00040c 5700
00040d 7461      	.DB  0x4E,0x6F,0x6E,0x65,0x0,0x57,0x61,0x74
00040e 7265
00040f 6c20
000410 7665
000411 6c65      	.DB  0x65,0x72,0x20,0x6C,0x65,0x76,0x65,0x6C
000412 4f00
000413 6576
000414 6872
000415 6165      	.DB  0x0,0x4F,0x76,0x65,0x72,0x68,0x65,0x61
000416 0074
000417 6c46
000418 6d61
000419 2065      	.DB  0x74,0x0,0x46,0x6C,0x61,0x6D,0x65,0x20
00041a 6564
00041b 6574
00041c 7463
00041d 726f      	.DB  0x64,0x65,0x74,0x65,0x63,0x74,0x6F,0x72
00041e 7420
00041f 7365
000420 0074
000421 6f4e      	.DB  0x20,0x74,0x65,0x73,0x74,0x0,0x4E,0x6F
000422 6620
000423 616c
000424 656d
000425 4900      	.DB  0x20,0x66,0x6C,0x61,0x6D,0x65,0x0,0x49
000426 6e6f
000427 6420
000428 7465
000429 6365      	.DB  0x6F,0x6E,0x20,0x64,0x65,0x74,0x65,0x63
00042a 6f74
00042b 2072
00042c 6574
00042d 7473      	.DB  0x74,0x6F,0x72,0x20,0x74,0x65,0x73,0x74
00042e 4e00
00042f 206f
000430 6f69
000431 696e      	.DB  0x0,0x4E,0x6F,0x20,0x69,0x6F,0x6E,0x69
000432 617a
000433 6974
000434 6e6f
000435 4100      	.DB  0x7A,0x61,0x74,0x69,0x6F,0x6E,0x0,0x41
000436 7269
000437 6420
000438 7465
000439 6365      	.DB  0x69,0x72,0x20,0x64,0x65,0x74,0x65,0x63
00043a 6f74
00043b 2072
00043c 6574
00043d 7473      	.DB  0x74,0x6F,0x72,0x20,0x74,0x65,0x73,0x74
00043e 4100
00043f 7269
000440 6420
000441 7465      	.DB  0x0,0x41,0x69,0x72,0x20,0x64,0x65,0x74
000442 6365
000443 6f74
000444 2072
000445 6f77      	.DB  0x65,0x63,0x74,0x6F,0x72,0x20,0x77,0x6F
000446 6b72
000447 5400
000448 6568
000449 6d72      	.DB  0x72,0x6B,0x0,0x54,0x68,0x65,0x72,0x6D
00044a 7369
00044b 6f74
00044c 2072
00044d 6166      	.DB  0x69,0x73,0x74,0x6F,0x72,0x20,0x66,0x61
00044e 6c69
00044f 7275
000450 0065      	.DB  0x69,0x6C,0x75,0x72,0x65,0x0
                 _0x40004:
000451 2424
000452 385f      	.DB  0x24,0x24,0x5F,0x38
                 _0x40005:
000453 28c3
000454 baad      	.DB  0xC3,0x28,0xAD,0xBA
                 _0x40006:
000455 5009
000456 3dd3      	.DB  0x9,0x50,0xD3,0x3D
                 _0x40007:
000457 56d6
000458 3f1c      	.DB  0xD6,0x56,0x1C,0x3F
                 _0x40008:
000459 cccd
00045a bd4c      	.DB  0xCD,0xCC,0x4C,0xBD
                 _0x40009:
00045b 41a7
00045c 383a      	.DB  0xA7,0x41,0x3A,0x38
                 _0x4000A:
00045d d511
00045e baa5      	.DB  0x11,0xD5,0xA5,0xBA
                 _0x4000B:
00045f 77d5
000460 3d7e      	.DB  0xD5,0x77,0x7E,0x3D
                 _0x4000C:
000461 e7c0
000462 3f3f      	.DB  0xC0,0xE7,0x3F,0x3F
                 _0x80015:
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1433): warning: .cseg .db misalignment - padding zero byte
000463 0001      	.DB  0x1
                 _0x80000:
000464 7325
000465 2000
000466 3325
000467 0064      	.DB  0x25,0x73,0x0,0x20,0x25,0x33,0x64,0x0
000468 3325
000469 302e
00046a 0066
00046b 003e      	.DB  0x25,0x33,0x2E,0x30,0x66,0x0,0x3E,0x0
00046c 0020      	.DB  0x20,0x0
                 _0xC0004:
00046d 10c3
00046e 0000
00046f 0000
000470 0000      	.DB  LOW(_boiler_toggle_wrap),HIGH(_boiler_toggle_wrap),0x0,0x0,0x0,0x0,0x0,0x0
000471 070d
000472 078e
000473 00ff
000474 0000      	.DB  LOW(_boiler_state_str),HIGH(_boiler_state_str),LOW(_boiler+55),HIGH(_boiler+55),0xFF,0x0,0x0,0x0
000475 0000
000476 0000
000477 0005
000478 0000      	.DB  0x0,0x0,0x0,0x0,0x5,0x0,0x0,0x0
000479 069e
00047a 0503
00047b 0000
00047c 6f00      	.DB  LOW(_0xC0003),HIGH(_0xC0003),0x3,0x5,0x0,0x0,0x0,LOW(_decrementEntry)
00047d ea0f
00047e 000e
00047f 0000
000480 8300      	.DB  HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0,0x0,LOW(_boiler+44)
000481 ff07
000482 00ff
000483 0500
000484 0000      	.DB  HIGH(_boiler+44),0xFF,0xFF,0x0,0x0,0x5,0x0,0x0
000485 6300
000486 0000
000487 a700
000488 0406      	.DB  0x0,0x63,0x0,0x0,0x0,LOW(_0xC0003+9),HIGH(_0xC0003+9),0x4
000489 0001
00048a 0000
00048b 0f6f
00048c 0eea      	.DB  0x1,0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry)
00048d 0000
00048e 073d
00048f 078d
000490 00ff      	.DB  0x0,0x0,LOW(_weather_dep_str),HIGH(_weather_dep_str),LOW(_boiler+54),HIGH(_boiler+54),0xFF,0x0
000491 0000
000492 0000
000493 0000
000494 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
000495 0000
000496 06b2
000497 0503
000498 0000      	.DB  0x0,0x0,LOW(_0xC0003+20),HIGH(_0xC0003+20),0x3,0x5,0x0,0x0
000499 6f00
00049a ea0f
00049b 000e
00049c 0000      	.DB  0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0
00049d 8100
00049e ff07
00049f 00ff
0004a0 0200      	.DB  0x0,LOW(_boiler+42),HIGH(_boiler+42),0xFF,0xFF,0x0,0x0,0x2
0004a1 0000
0004a2 0a00
0004a3 0000
0004a4 bd00      	.DB  0x0,0x0,0x0,0xA,0x0,0x0,0x0,LOW(_0xC0003+31)
0004a5 0406
0004a6 0001
0004a7 0000
0004a8 0f6f      	.DB  HIGH(_0xC0003+31),0x4,0x1,0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry)
0004a9 0eea
0004aa 0000
0004ab 0000
0004ac 0785      	.DB  LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0,0x0,LOW(_boiler+46),HIGH(_boiler+46)
0004ad ffff
0004ae 0000
0004af 0001
0004b0 0000      	.DB  0xFF,0xFF,0x0,0x0,0x1,0x0,0x0,0x0
0004b1 0063
0004b2 0000
0004b3 06c8
0004b4 0104      	.DB  0x63,0x0,0x0,0x0,LOW(_0xC0003+42),HIGH(_0xC0003+42),0x4,0x1
0004b5 0000
0004b6 6f00
0004b7 ea0f
0004b8 000e      	.DB  0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0
0004b9 0000
0004ba 8700
0004bb ff07
0004bc 00ff      	.DB  0x0,0x0,0x0,LOW(_boiler+48),HIGH(_boiler+48),0xFF,0xFF,0x0
0004bd 0100
0004be 0000
0004bf 6300
0004c0 0000      	.DB  0x0,0x1,0x0,0x0,0x0,0x63,0x0,0x0
0004c1 d600
0004c2 0406
0004c3 0001
0004c4 0000      	.DB  0x0,LOW(_0xC0003+56),HIGH(_0xC0003+56),0x4,0x1,0x0,0x0,0x0
0004c5 0f6f
0004c6 0eea
0004c7 0000
0004c8 072f      	.DB  LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,LOW(_boiler_role_str),HIGH(_boiler_role_str)
0004c9 0790
0004ca 00ff
0004cb 0000
0004cc 0000      	.DB  LOW(_boiler+57),HIGH(_boiler+57),0xFF,0x0,0x0,0x0,0x0,0x0
0004cd 0000
0004ce 0006
0004cf 0000
0004d0 06e3      	.DB  0x0,0x0,0x6,0x0,0x0,0x0,LOW(_0xC0003+69),HIGH(_0xC0003+69)
0004d1 0503      	.DB  0x3,0x5
                 _0xC0005:
0004d2 0804
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1466): warning: .cseg .db misalignment - padding zero byte
0004d3 0007      	.DB  LOW(_main_page_list),HIGH(_main_page_list),0x7
                 _0xC0000:
0004d4 ab83
0004d5 2dac
0004d6 bc83
0004d7 acab      	.DB  0x83,0xAB,0xAC,0x2D,0x83,0xBC,0xAB,0xAC
0004d8 8e00
0004d9 a4a1
0004da a6b1
0004db bdb3      	.DB  0x0,0x8E,0xA1,0xA4,0xB1,0xA6,0xB3,0xBD
0004dc a520
0004dd 00af
0004de b183
0004df ada6      	.DB  0x20,0xA5,0xAF,0x0,0x83,0xB1,0xA6,0xAD
0004e0 20c0
0004e1 afa4
0004e2 a1a5
0004e3 8400      	.DB  0xC0,0x20,0xA4,0xAF,0xA5,0xA1,0x0,0x84
0004e4 b2a9
0004e5 a6b3
0004e6 a6b1
0004e7 a9a8      	.DB  0xA9,0xB2,0xB3,0xA6,0xB1,0xA6,0xA8,0xA9
0004e8 00b2
0004e9 ab83
0004ea 20ac
0004eb a1ae      	.DB  0xB2,0x0,0x83,0xAB,0xAC,0x20,0xAE,0xA1
0004ec afb2
0004ed 20b2
0004ee b1b0
0004ef 00a9      	.DB  0xB2,0xAF,0xB2,0x20,0xB0,0xB1,0xA9,0x0
0004f0 a984
0004f1 b3b2
0004f2 202e
0004f3 a1ae      	.DB  0x84,0xA9,0xB2,0xB3,0x2E,0x20,0xAE,0xA1
0004f4 afb2
0004f5 a1b2
0004f6 8d00
0004f7 a5af      	.DB  0xB2,0xAF,0xB2,0xA1,0x0,0x8D,0xAF,0xA5
0004f8 aca6
0004f9 00bd      	.DB  0xA6,0xAC,0xBD,0x0
                 _0xE0006:
0004fa 06ea      	.DB  LOW(_0xE0005),HIGH(_0xE0005)
                 _0xE0000:
0004fb 3325
0004fc 302e
0004fd 0066
0004fe 3325      	.DB  0x25,0x33,0x2E,0x30,0x66,0x0,0x25,0x33
0004ff 302e
000500 2d66
000501 253e
000502 0064      	.DB  0x2E,0x30,0x66,0x2D,0x3E,0x25,0x64,0x0
000503 7325
000504 4600
000505 4e41
000506 4f5f      	.DB  0x25,0x73,0x0,0x46,0x41,0x4E,0x5F,0x4F
000507 204e
000508 4600
000509 4e41
00050a 4f5f      	.DB  0x4E,0x20,0x0,0x46,0x41,0x4E,0x5F,0x4F
00050b 4646
00050c 4300
00050d 314c
00050e 4f5f      	.DB  0x46,0x46,0x0,0x43,0x4C,0x31,0x5F,0x4F
00050f 204e
000510 4300
000511 314c
000512 4f5f      	.DB  0x4E,0x20,0x0,0x43,0x4C,0x31,0x5F,0x4F
000513 4646
000514 4300
000515 324c
000516 4f5f      	.DB  0x46,0x46,0x0,0x43,0x4C,0x32,0x5F,0x4F
000517 204e
000518 4300
000519 324c
00051a 4f5f      	.DB  0x4E,0x20,0x0,0x43,0x4C,0x32,0x5F,0x4F
00051b 4646
00051c 8f00
00051d a9b9
00051e aba2      	.DB  0x46,0x46,0x0,0x8F,0xB9,0xA9,0xA2,0xAB
00051f 20a1
000520 6425
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1490): warning: .cseg .db misalignment - padding zero byte
000521 0000      	.DB  0xA1,0x20,0x25,0x64,0x0
                 _0x2060000:
000522 4e2d
000523 4e41
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1492): warning: .cseg .db misalignment - padding zero byte
000524 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1494): warning: .cseg .db misalignment - padding zero byte
000525 0001      	.DB  0x1
                 _0x2080000:
000526 4e2d
000527 4e41
000528 4900
000529 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\Projects\buranBoiler\buran64\Debug\List\buran2.asm(1497): warning: .cseg .db misalignment - padding zero byte
00052a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00052b 0002      	.DW  0x02
00052c 0006      	.DW  0x06
00052d 06ae      	.DW  __REG_VARS*2
                 
00052e 0009      	.DW  0x09
00052f 0500      	.DW  _0x20003
000530 0704      	.DW  _0x20000*2
                 
000531 0009      	.DW  0x09
000532 0509      	.DW  _0x20003+9
000533 070d      	.DW  _0x20000*2+9
                 
000534 0009      	.DW  0x09
000535 0512      	.DW  _0x20003+18
000536 0716      	.DW  _0x20000*2+18
                 
000537 0009      	.DW  0x09
000538 051b      	.DW  _0x20003+27
000539 071f      	.DW  _0x20000*2+27
                 
00053a 0009      	.DW  0x09
00053b 0524      	.DW  _0x20003+36
00053c 0728      	.DW  _0x20000*2+36
                 
00053d 0009      	.DW  0x09
00053e 052d      	.DW  _0x20003+45
00053f 0731      	.DW  _0x20000*2+45
                 
000540 000c      	.DW  0x0C
000541 070d      	.DW  _boiler_state_str
000542 06b0      	.DW  _0x20004*2
                 
000543 000b      	.DW  0x0B
000544 0536      	.DW  _0x20005
000545 073a      	.DW  _0x20000*2+54
                 
000546 000b      	.DW  0x0B
000547 0541      	.DW  _0x20005+11
000548 0745      	.DW  _0x20000*2+65
                 
000549 000b      	.DW  0x0B
00054a 054c      	.DW  _0x20005+22
00054b 0750      	.DW  _0x20000*2+76
                 
00054c 000b      	.DW  0x0B
00054d 0557      	.DW  _0x20005+33
00054e 075b      	.DW  _0x20000*2+87
                 
00054f 000b      	.DW  0x0B
000550 0562      	.DW  _0x20005+44
000551 0766      	.DW  _0x20000*2+98
                 
000552 000b      	.DW  0x0B
000553 056d      	.DW  _0x20005+55
000554 0771      	.DW  _0x20000*2+109
                 
000555 000b      	.DW  0x0B
000556 0578      	.DW  _0x20005+66
000557 077c      	.DW  _0x20000*2+120
                 
000558 000b      	.DW  0x0B
000559 0583      	.DW  _0x20005+77
00055a 0787      	.DW  _0x20000*2+131
                 
00055b 000b      	.DW  0x0B
00055c 058e      	.DW  _0x20005+88
00055d 0792      	.DW  _0x20000*2+142
                 
00055e 000b      	.DW  0x0B
00055f 0599      	.DW  _0x20005+99
000560 079d      	.DW  _0x20000*2+153
                 
000561 000b      	.DW  0x0B
000562 05a4      	.DW  _0x20005+110
000563 07a8      	.DW  _0x20000*2+164
                 
000564 0016      	.DW  0x16
000565 0719      	.DW  _start_sequence_stage_str
000566 06bc      	.DW  _0x20006*2
                 
000567 000a      	.DW  0x0A
000568 05af      	.DW  _0x20007
000569 07b3      	.DW  _0x20000*2+175
                 
00056a 000b      	.DW  0x0B
00056b 05b9      	.DW  _0x20007+10
00056c 07bd      	.DW  _0x20000*2+185
                 
00056d 000b      	.DW  0x0B
00056e 05c4      	.DW  _0x20007+21
00056f 07c8      	.DW  _0x20000*2+196
                 
000570 000b      	.DW  0x0B
000571 05cf      	.DW  _0x20007+32
000572 07d3      	.DW  _0x20000*2+207
                 
000573 000b      	.DW  0x0B
000574 05da      	.DW  _0x20007+43
000575 07de      	.DW  _0x20000*2+218
                 
000576 000b      	.DW  0x0B
000577 05e5      	.DW  _0x20007+54
000578 07e9      	.DW  _0x20000*2+229
                 
000579 000b      	.DW  0x0B
00057a 05f0      	.DW  _0x20007+65
00057b 07f4      	.DW  _0x20000*2+240
                 
00057c 000e      	.DW  0x0E
00057d 072f      	.DW  _boiler_role_str
00057e 06d2      	.DW  _0x20008*2
                 
00057f 0007      	.DW  0x07
000580 05fb      	.DW  _0x20009
000581 07ff      	.DW  _0x20000*2+251
                 
000582 0007      	.DW  0x07
000583 0602      	.DW  _0x20009+7
000584 0806      	.DW  _0x20000*2+258
                 
000585 0007      	.DW  0x07
000586 0609      	.DW  _0x20009+14
000587 080d      	.DW  _0x20000*2+265
                 
000588 0006      	.DW  0x06
000589 073d      	.DW  _weather_dep_str
00058a 06e0      	.DW  _0x2000A*2
                 
00058b 0005      	.DW  0x05
00058c 0610      	.DW  _0x2000B
00058d 0814      	.DW  _0x20000*2+272
                 
00058e 000c      	.DW  0x0C
00058f 0615      	.DW  _0x2000B+5
000590 0819      	.DW  _0x20000*2+277
                 
000591 0009      	.DW  0x09
000592 0621      	.DW  _0x2000B+17
000593 0825      	.DW  _0x20000*2+289
                 
000594 0014      	.DW  0x14
000595 062a      	.DW  _0x2000B+26
000596 082e      	.DW  _0x20000*2+298
                 
000597 0009      	.DW  0x09
000598 063e      	.DW  _0x2000B+46
000599 0842      	.DW  _0x20000*2+318
                 
00059a 0012      	.DW  0x12
00059b 0647      	.DW  _0x2000B+55
00059c 084b      	.DW  _0x20000*2+327
                 
00059d 000e      	.DW  0x0E
00059e 0659      	.DW  _0x2000B+73
00059f 085d      	.DW  _0x20000*2+345
                 
0005a0 0012      	.DW  0x12
0005a1 0667      	.DW  _0x2000B+87
0005a2 086b      	.DW  _0x20000*2+359
                 
0005a3 0012      	.DW  0x12
0005a4 0679      	.DW  _0x2000B+105
0005a5 087d      	.DW  _0x20000*2+377
                 
0005a6 0013      	.DW  0x13
0005a7 068b      	.DW  _0x2000B+123
0005a8 088f      	.DW  _0x20000*2+395
                 
0005a9 0014      	.DW  0x14
0005aa 0743      	.DW  _errors_str
0005ab 06e6      	.DW  _0x2000C*2
                 
0005ac 000a      	.DW  0x0A
0005ad 07ab      	.DW  _eedefault
0005ae 06fa      	.DW  _0x2000D*2
                 
0005af 0004      	.DW  0x04
0005b0 07c7      	.DW  _air_k1
0005b1 08a2      	.DW  _0x40004*2
                 
0005b2 0004      	.DW  0x04
0005b3 07cb      	.DW  _air_b1
0005b4 08a6      	.DW  _0x40005*2
                 
0005b5 0004      	.DW  0x04
0005b6 07cf      	.DW  _air_k2
0005b7 08aa      	.DW  _0x40006*2
                 
0005b8 0004      	.DW  0x04
0005b9 07d3      	.DW  _air_b2
0005ba 08ae      	.DW  _0x40007*2
                 
0005bb 0004      	.DW  0x04
0005bc 07d7      	.DW  _air_c
0005bd 08b2      	.DW  _0x40008*2
                 
0005be 0004      	.DW  0x04
0005bf 07db      	.DW  _water_k1
0005c0 08b6      	.DW  _0x40009*2
                 
0005c1 0004      	.DW  0x04
0005c2 07df      	.DW  _water_b1
0005c3 08ba      	.DW  _0x4000A*2
                 
0005c4 0004      	.DW  0x04
0005c5 07e3      	.DW  _water_k2
0005c6 08be      	.DW  _0x4000B*2
                 
0005c7 0004      	.DW  0x04
0005c8 07e7      	.DW  _water_b2
0005c9 08c2      	.DW  _0x4000C*2
                 
0005ca 0001      	.DW  0x01
0005cb 07f1      	.DW  _prev_index_S0040003000
0005cc 08c6      	.DW  _0x80015*2
                 
0005cd 0009      	.DW  0x09
0005ce 069e      	.DW  _0xC0003
0005cf 09a8      	.DW  _0xC0000*2
                 
0005d0 000b      	.DW  0x0B
0005d1 06a7      	.DW  _0xC0003+9
0005d2 09b1      	.DW  _0xC0000*2+9
                 
0005d3 000b      	.DW  0x0B
0005d4 06b2      	.DW  _0xC0003+20
0005d5 09bc      	.DW  _0xC0000*2+20
                 
0005d6 000b      	.DW  0x0B
0005d7 06bd      	.DW  _0xC0003+31
0005d8 09c7      	.DW  _0xC0000*2+31
                 
0005d9 000e      	.DW  0x0E
0005da 06c8      	.DW  _0xC0003+42
0005db 09d2      	.DW  _0xC0000*2+42
                 
0005dc 000d      	.DW  0x0D
0005dd 06d6      	.DW  _0xC0003+56
0005de 09e0      	.DW  _0xC0000*2+56
                 
0005df 0007      	.DW  0x07
0005e0 06e3      	.DW  _0xC0003+69
0005e1 09ed      	.DW  _0xC0000*2+69
                 
0005e2 00ca      	.DW  0xCA
0005e3 0804      	.DW  _main_page_list
0005e4 08da      	.DW  _0xC0004*2
                 
0005e5 0003      	.DW  0x03
0005e6 0793      	.DW  _main_page
0005e7 09a4      	.DW  _0xC0005*2
                 
0005e8 0001      	.DW  0x01
0005e9 06ea      	.DW  _0xE0005
0005ea 09fb      	.DW  _0xE0000*2+5
                 
0005eb 0002      	.DW  0x02
0005ec 08e1      	.DW  _br_str_S0070003000
0005ed 09f4      	.DW  _0xE0006*2
                 
0005ee 0001      	.DW  0x01
0005ef 0902      	.DW  __seed_G104
0005f0 0a4a      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0005f1 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0005f2 94f8      	CLI
0005f3 27ee      	CLR  R30
0005f4 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0005f5 e0f1      	LDI  R31,1
0005f6 bff5      	OUT  MCUCR,R31
0005f7 bfe5      	OUT  MCUCR,R30
0005f8 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0005fa e08d      	LDI  R24,(14-2)+1
0005fb e0a2      	LDI  R26,2
0005fc 27bb      	CLR  R27
                 __CLEAR_REG:
0005fd 93ed      	ST   X+,R30
0005fe 958a      	DEC  R24
0005ff f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000600 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000601 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000602 e0a0      	LDI  R26,LOW(__SRAM_START)
000603 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000604 93ed      	ST   X+,R30
000605 9701      	SBIW R24,1
000606 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000607 e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000608 e0fa      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000609 9185      	LPM  R24,Z+
00060a 9195      	LPM  R25,Z+
00060b 9700      	SBIW R24,0
00060c f061      	BREQ __GLOBAL_INI_END
00060d 91a5      	LPM  R26,Z+
00060e 91b5      	LPM  R27,Z+
00060f 9005      	LPM  R0,Z+
000610 9015      	LPM  R1,Z+
000611 01bf      	MOVW R22,R30
000612 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000613 9005      	LPM  R0,Z+
000614 920d      	ST   X+,R0
000615 9701      	SBIW R24,1
000616 f7e1      	BRNE __GLOBAL_INI_LOOP
000617 01fb      	MOVW R30,R22
000618 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000619 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00061a bfed      	OUT  SPL,R30
00061b e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00061c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00061d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00061e e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00061f 940c 06dd 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;	flags -> R17
                 ;volatile uint32_t tick_ms = 0;
                 ;uint32_t time_zero = 0;
                 ;uint8_t clapan_out_monitor;
                 ;void displayInit(GLCDINIT_t glcd_init_data){
                 ; 0000 002F void displayInit(GLCDINIT_t glcd_init_data){
                 
                 	.CSEG
                 _displayInit:
                 ; .FSTART _displayInit
                 ; 0000 0030 glcd_init_data.font=font5x7;
                 ;	glcd_init_data -> Y+0
000621 e8ec      	LDI  R30,LOW(_font5x7*2)
000622 e0f0      	LDI  R31,HIGH(_font5x7*2)
000623 83e8      	ST   Y,R30
000624 83f9      	STD  Y+1,R31
                 ; 0000 0031 glcd_init_data.readxmem=NULL;
000625 e0e0      	LDI  R30,LOW(0)
000626 83ea      	STD  Y+2,R30
000627 83eb      	STD  Y+2+1,R30
                 ; 0000 0032 glcd_init_data.writexmem=NULL;
000628 83ec      	STD  Y+4,R30
000629 83ed      	STD  Y+4+1,R30
                 ; 0000 0033 glcd_init(&glcd_init_data);
00062a 01de      	MOVW R26,R28
00062b 940e 1377 	CALL _glcd_init
                 ; 0000 0034 }
00062d c14c      	RJMP _0x2140020
                 ; .FEND
                 ;void PORT_INIT(){
                 ; 0000 0036 void PORT_INIT(){
                 _PORT_INIT:
                 ; .FSTART _PORT_INIT
                 ; 0000 0037 DDRA = 0xff;
00062e efef      	LDI  R30,LOW(255)
00062f bbea      	OUT  0x1A,R30
                 ; 0000 0038 PORTA = 0x00;
000630 e0e0      	LDI  R30,LOW(0)
000631 bbeb      	OUT  0x1B,R30
                 ; 0000 0039 DDRC = 0xdf;
000632 edef      	LDI  R30,LOW(223)
000633 bbe4      	OUT  0x14,R30
                 ; 0000 003A PORTC |= 0x11;
000634 b3e5      	IN   R30,0x15
000635 61e1      	ORI  R30,LOW(0x11)
000636 bbe5      	OUT  0x15,R30
                 ; 0000 003B 
                 ; 0000 003C DDRE = 0x00;
000637 e0e0      	LDI  R30,LOW(0)
000638 b9e2      	OUT  0x2,R30
                 ; 0000 003D PORTE = 0;
000639 b9e3      	OUT  0x3,R30
                 ; 0000 003E 
                 ; 0000 003F DDRD = 0xff;
00063a efef      	LDI  R30,LOW(255)
00063b bbe1      	OUT  0x11,R30
                 ; 0000 0040 PORTD = 0x00;
00063c e0e0      	LDI  R30,LOW(0)
00063d bbe2      	OUT  0x12,R30
                 ; 0000 0041 
                 ; 0000 0042 DDRF = 0x00;
00063e 93e0 0061 	STS  97,R30
                 ; 0000 0043 PORTF = 0;//0b11011001;
000640 93e0 0062 	STS  98,R30
                 ; 0000 0044 
                 ; 0000 0045 DDRB = 0b00000000;
000642 bbe7      	OUT  0x17,R30
                 ; 0000 0046 PORTB = 0b10000000;
000643 e8e0      	LDI  R30,LOW(128)
000644 bbe8      	OUT  0x18,R30
                 ; 0000 0047 
                 ; 0000 0048 DDRG = 0b000000;
000645 e0e0      	LDI  R30,LOW(0)
000646 93e0 0064 	STS  100,R30
                 ; 0000 0049 PORTG = 0b00011000;
000648 e1e8      	LDI  R30,LOW(24)
000649 93e0 0065 	STS  101,R30
                 ; 0000 004A }
00064b 9508      	RET
                 ; .FEND
                 ;void timerInit(){
                 ; 0000 004C void timerInit(){
                 _timerInit:
                 ; .FSTART _timerInit
                 ; 0000 004D //adc  trig
                 ; 0000 004E TCCR1B |= (1<<WGM21);
00064c b5ee      	IN   R30,0x2E
00064d 60e8      	ORI  R30,8
00064e bdee      	OUT  0x2E,R30
                 ; 0000 004F TIMSK |= (1<<OCIE1A);
00064f b7e7      	IN   R30,0x37
000650 61e0      	ORI  R30,0x10
000651 bfe7      	OUT  0x37,R30
                 ; 0000 0050 OCR1A = 32768;
000652 e0e0      	LDI  R30,LOW(32768)
000653 e8f0      	LDI  R31,HIGH(32768)
000654 bdfb      	OUT  0x2A+1,R31
000655 bdea      	OUT  0x2A,R30
                 ; 0000 0051 TCCR1B |= (1<<CS12);
000656 b5ee      	IN   R30,0x2E
000657 60e4      	ORI  R30,4
000658 bdee      	OUT  0x2E,R30
                 ; 0000 0052 
                 ; 0000 0053 //systick 1ms
                 ; 0000 0054 ASSR=0<<AS0;
000659 e0e0      	LDI  R30,LOW(0)
00065a bfe0      	OUT  0x30,R30
                 ; 0000 0055 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01)  ...
00065b e0e3      	LDI  R30,LOW(3)
00065c bfe3      	OUT  0x33,R30
                 ; 0000 0056 TCNT0=0x06;
00065d e0e6      	LDI  R30,LOW(6)
00065e bfe2      	OUT  0x32,R30
                 ; 0000 0057 OCR0=0x00;
00065f e0e0      	LDI  R30,LOW(0)
000660 bfe1      	OUT  0x31,R30
                 ; 0000 0058 TIMSK |= (1<<TOIE0);
000661 b7e7      	IN   R30,0x37
000662 60e1      	ORI  R30,1
000663 bfe7      	OUT  0x37,R30
                 ; 0000 0059 }
000664 9508      	RET
                 ; .FEND
                 ;void uartInit(){
                 ; 0000 005C void uartInit(){
                 _uartInit:
                 ; .FSTART _uartInit
                 ; 0000 005D // USART0 initialization
                 ; 0000 005E // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 005F // USART0 Receiver: On
                 ; 0000 0060 // USART0 Transmitter: On
                 ; 0000 0061 // USART0 Mode: Asynchronous
                 ; 0000 0062 // USART0 Baud Rate: 9600
                 ; 0000 0063 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | ( ...
000665 e0e0      	LDI  R30,LOW(0)
000666 b9eb      	OUT  0xB,R30
                 ; 0000 0064 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<U ...
000667 e1e8      	LDI  R30,LOW(24)
000668 b9ea      	OUT  0xA,R30
                 ; 0000 0065 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UC ...
000669 e0e6      	LDI  R30,LOW(6)
00066a 93e0 0095 	STS  149,R30
                 ; 0000 0066 UBRR0H=0x00;
00066c e0e0      	LDI  R30,LOW(0)
00066d 93e0 0090 	STS  144,R30
                 ; 0000 0067 
                 ; 0000 0068 //9600
                 ; 0000 0069 UBRR0L=0x33;
00066f e3e3      	LDI  R30,LOW(51)
000670 b9e9      	OUT  0x9,R30
                 ; 0000 006A //56000
                 ; 0000 006B UBRR0L=0x08;
000671 e0e8      	LDI  R30,LOW(8)
000672 b9e9      	OUT  0x9,R30
                 ; 0000 006C }
000673 9508      	RET
                 ; .FEND
                 ;uint32_t GetTick_ms(void){
                 ; 0000 006E uint32_t GetTick_ms(void){
                 _GetTick_ms:
                 ; .FSTART _GetTick_ms
                 ; 0000 006F return tick_ms;
000674 940e 2254 	CALL SUBOPT_0x0
000676 9508      	RET
                 ; 0000 0070 }
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0073 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000677 936a      	ST   -Y,R22
000678 937a      	ST   -Y,R23
000679 938a      	ST   -Y,R24
00067a 939a      	ST   -Y,R25
00067b 93aa      	ST   -Y,R26
00067c 93ba      	ST   -Y,R27
00067d 93ea      	ST   -Y,R30
00067e 93fa      	ST   -Y,R31
00067f b7ef      	IN   R30,SREG
000680 93ea      	ST   -Y,R30
                 ; 0000 0074 // Reinitialize Timer 0 value
                 ; 0000 0075 TCNT0=0x06;
000681 e0e6      	LDI  R30,LOW(6)
000682 bfe2      	OUT  0x32,R30
                 ; 0000 0076 tick_ms++;
000683 eaa1      	LDI  R26,LOW(_tick_ms)
000684 e0b7      	LDI  R27,HIGH(_tick_ms)
000685 940e 225d 	CALL SUBOPT_0x1
                 ; 0000 0077 
                 ; 0000 0078 //PRINT("\r\nTIMER 1 ms\r\n");
                 ; 0000 0079 // Place your code here
                 ; 0000 007A if(CLAPAN_OUT_PIN & CLAPAN_OUT_Pin){
000687 9b06      	SBIS 0x0,6
000688 c00c      	RJMP _0x4
                 ; 0000 007B time_zero = tick_ms;
000689 940e 2254 	CALL SUBOPT_0x0
00068b 93e0 0708 	STS  _time_zero,R30
00068d 93f0 0709 	STS  _time_zero+1,R31
00068f 9360 070a 	STS  _time_zero+2,R22
000691 9370 070b 	STS  _time_zero+3,R23
                 ; 0000 007C clapan_out_monitor = 1;
000693 e0e1      	LDI  R30,LOW(1)
000694 c019      	RJMP _0xC
                 ; 0000 007D }
                 ; 0000 007E else{
                 _0x4:
                 ; 0000 007F if(clapan_out_monitor){
000695 91e0 070c 	LDS  R30,_clapan_out_monitor
000697 30e0      	CPI  R30,0
000698 f0b9      	BREQ _0x6
                 ; 0000 0080 if(tick_ms - time_zero > CLAPAN_MONITOR_TIMEOUT){
000699 91a0 0708 	LDS  R26,_time_zero
00069b 91b0 0709 	LDS  R27,_time_zero+1
00069d 9180 070a 	LDS  R24,_time_zero+2
00069f 9190 070b 	LDS  R25,_time_zero+3
0006a1 940e 2254 	CALL SUBOPT_0x0
0006a3 940e 279a 	CALL __SUBD12
                +
0006a5 36e5     +CPI R30 , LOW ( 0x65 )
0006a6 e0a0     +LDI R26 , HIGH ( 0x65 )
0006a7 07fa     +CPC R31 , R26
0006a8 e0a0     +LDI R26 , BYTE3 ( 0x65 )
0006a9 076a     +CPC R22 , R26
0006aa e0a0     +LDI R26 , BYTE4 ( 0x65 )
0006ab 077a     +CPC R23 , R26
                 	__CPD1N 0x65
0006ac f018      	BRLO _0x7
                 ; 0000 0081 clapan_out_monitor = 0;
0006ad e0e0      	LDI  R30,LOW(0)
                 _0xC:
0006ae 93e0 070c 	STS  _clapan_out_monitor,R30
                 ; 0000 0082 }
                 ; 0000 0083 }
                 _0x7:
                 ; 0000 0084 }
                 _0x6:
                 ; 0000 0085 }
0006b0 91e9      	LD   R30,Y+
0006b1 bfef      	OUT  SREG,R30
0006b2 91f9      	LD   R31,Y+
0006b3 91e9      	LD   R30,Y+
0006b4 91b9      	LD   R27,Y+
0006b5 91a9      	LD   R26,Y+
0006b6 9199      	LD   R25,Y+
0006b7 9189      	LD   R24,Y+
0006b8 9179      	LD   R23,Y+
0006b9 9169      	LD   R22,Y+
0006ba 9518      	RETI
                 ; .FEND
                 ;interrupt[TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 0088 {
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
0006bb 920a      	ST   -Y,R0
0006bc 921a      	ST   -Y,R1
0006bd 92fa      	ST   -Y,R15
0006be 936a      	ST   -Y,R22
0006bf 937a      	ST   -Y,R23
0006c0 938a      	ST   -Y,R24
0006c1 939a      	ST   -Y,R25
0006c2 93aa      	ST   -Y,R26
0006c3 93ba      	ST   -Y,R27
0006c4 93ea      	ST   -Y,R30
0006c5 93fa      	ST   -Y,R31
0006c6 b7ef      	IN   R30,SREG
0006c7 93ea      	ST   -Y,R30
                 ; 0000 0089 GetRef();
0006c8 940e 0a81 	CALL _GetRef
                 ; 0000 008A SendAirTemp();
0006ca 940e 0ada 	CALL _SendAirTemp
                 ; 0000 008B SendWaterTemp();
0006cc 940e 0b55 	CALL _SendWaterTemp
                 ; 0000 008C //GetDirect();
                 ; 0000 008D }
0006ce 91e9      	LD   R30,Y+
0006cf bfef      	OUT  SREG,R30
0006d0 91f9      	LD   R31,Y+
0006d1 91e9      	LD   R30,Y+
0006d2 91b9      	LD   R27,Y+
0006d3 91a9      	LD   R26,Y+
0006d4 9199      	LD   R25,Y+
0006d5 9189      	LD   R24,Y+
0006d6 9179      	LD   R23,Y+
0006d7 9169      	LD   R22,Y+
0006d8 90f9      	LD   R15,Y+
0006d9 9019      	LD   R1,Y+
0006da 9009      	LD   R0,Y+
0006db 9518      	RETI
                 ; .FEND
                 ;void printBoilerInfo(void){
                 ; 0000 008F void printBoilerInfo(void){
                 _printBoilerInfo:
                 ; .FSTART _printBoilerInfo
                 ; 0000 0090 //PRINT("===========================\r\n");
                 ; 0000 0091 //PRINT("INFO: ");
                 ; 0000 0092 /*
                 ; 0000 0093 PRINT("role=%s ", boiler_role_str[boiler.role]);
                 ; 0000 0094 PRINT("vdd=%.1f ", boiler.vdd);
                 ; 0000 0095 PRINT("air_temp=%.2f ", boiler.air_temp);
                 ; 0000 0096 PRINT("air_temp_adc=%d ", boiler.air_temp_adc);
                 ; 0000 0097 PRINT("water_temp=%.2f ", boiler.water_temp);
                 ; 0000 0098 PRINT("water_adc=%d ", boiler.water_temp_adc);
                 ; 0000 0099 PRINT("gisteresis=%d ", boiler.gisteresis);
                 ; 0000 009A PRINT("\r\n");
                 ; 0000 009B PRINT("water_goal_temp=%d ", boiler.water_goal_temp);
                 ; 0000 009C */
                 ; 0000 009D PRINT("timeLastStage=%d ", boiler.time_of_last_stage);
                 ; 0000 009E PRINT("timSinceLastStage=%d ", tick_ms - boiler.time_of_last_stage);
                 ; 0000 009F //PRINT("weather=%s ", weather_dep_str[boiler.weather]);
                 ; 0000 00A0 PRINT("state=%s ", boiler_state_str[boiler.state]);
                 ; 0000 00A1 PRINT("start=%s ", start_sequence_stage_str[boiler.start_stage]);
                 ; 0000 00A2 PRINT("cmd=%s ", boiler_state_str[boiler.command]);
                 ; 0000 00A3 PRINT("err=%s ", errors_str[boiler.error]);
                 ; 0000 00A4 PRINT("weather=%s ", weather_dep_str[boiler.weather]);
                 ; 0000 00A5 //PRINT("\r\n");
                 ; 0000 00A6 PRINT("URVN=%d ", Uroven_out);
                 ; 0000 00A7 PRINT("Ion=%d ", Ion_out);
                 ; 0000 00A8 PRINT("t_max=%d ", t_max_out);
                 ; 0000 00A9 PRINT("plamya=%d ", plamya_out);
                 ; 0000 00AA PRINT("clapan=%d ", clapan_out());
                 ; 0000 00AB PRINT("TransRozg=%d ", isTransRozgiga_ON);
                 ; 0000 00AC PRINT("Ventilaytor=%d ", isVentilaytor_ON);
                 ; 0000 00AD PRINT("ToplNasos=%d ", isTopl_Nasos_ON);
                 ; 0000 00AE PRINT("SetNasos=%d ", isSetevoi_nasos_ON);
                 ; 0000 00AF PRINT("K-n1=%d ", isKlapan1_ON);
                 ; 0000 00B0 PRINT("K-n2=%d ", isKlapan2_ON);
                 ; 0000 00B1 PRINT("TClap=%d ", tick_ms - time_zero);
                 ; 0000 00B2 
                 ; 0000 00B3 PRINT("\r\n");
                 ; 0000 00B4 }
0006dc 9508      	RET
                 ; .FEND
                 ;extern float DirectVolt;
                 ;extern uint16_t DirectADC;
                 ;void main(void){
                 ; 0000 00B9 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00BA GLCDINIT_t glcd_init_data;
                 ; 0000 00BB 
                 ; 0000 00BC PORT_INIT();
0006dd 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
0006de df4f      	RCALL _PORT_INIT
                 ; 0000 00BD #if 0
                 ; 0000 00BE /*
                 ; 0000 00BF TransRozgiga_ON;
                 ; 0000 00C0 Ventilaytor_ON;
                 ; 0000 00C1 Topl_Nasos_ON;
                 ; 0000 00C2 Setevoi_nasos_ON;
                 ; 0000 00C3 Klapan1_ON;
                 ; 0000 00C4 */
                 ; 0000 00C5 while(1){
                 ; 0000 00C6 Klapan1_ON;
                 ; 0000 00C7 Klapan2_ON;
                 ; 0000 00C8 delay_ms(1000);
                 ; 0000 00C9 Klapan1_OFF;
                 ; 0000 00CA Klapan2_OFF;
                 ; 0000 00CB delay_ms(1000);}
                 ; 0000 00CC while(1);
                 ; 0000 00CD #endif
                 ; 0000 00CE 
                 ; 0000 00CF uartInit();
0006df df85      	RCALL _uartInit
                 ; 0000 00D0 //PRINT("uart ok\r\n");
                 ; 0000 00D1 #asm("sei")
0006e0 9478      	SEI
                 ; 0000 00D2 //PRINT("sei\r\n");
                 ; 0000 00D3 ADC_Init();
0006e1 940e 0a7d 	CALL _ADC_Init
                 ; 0000 00D4 //PRINT("adc init()\r\n") ;
                 ; 0000 00D5 timerInit();
0006e3 df68      	RCALL _timerInit
                 ; 0000 00D6 
                 ; 0000 00D7 delay_ms(200);
0006e4 eca8      	LDI  R26,LOW(200)
0006e5 e0b0      	LDI  R27,0
0006e6 940e 2aae 	CALL _delay_ms
                 ; 0000 00D8 displayInit(glcd_init_data);
0006e8 01fe      	MOVW R30,R28
0006e9 e0a6      	LDI  R26,6
0006ea 940e 28b0 	CALL __PUTPARL
0006ec df34      	RCALL _displayInit
                 ; 0000 00D9 delay_ms(200);
0006ed eca8      	LDI  R26,LOW(200)
0006ee e0b0      	LDI  R27,0
0006ef 940e 2aae 	CALL _delay_ms
                 ; 0000 00DA glcd_clear();
0006f1 940e 1374 	CALL _glcd_clear
                 ; 0000 00DB 
                 ; 0000 00DC //uartInit();
                 ; 0000 00DD 
                 ; 0000 00DE boiler_init();
0006f3 d016      	RCALL _boiler_init
                 ; 0000 00DF menu_buttons_init();
0006f4 940e 10d8 	CALL _menu_buttons_init
                 ; 0000 00E0 
                 ; 0000 00E1 
                 ; 0000 00E2 
                 ; 0000 00E3 #if (0)
                 ; 0000 00E4 
                 ; 0000 00E5 ADC_Init();
                 ; 0000 00E6 printf("\r\n\r\n\r\n");
                 ; 0000 00E7 sei();
                 ; 0000 00E8 printf("vdd\t");
                 ; 0000 00E9 printf("water_volt\t");
                 ; 0000 00EA printf("water_adc\t");
                 ; 0000 00EB printf("waterTemp\t");
                 ; 0000 00EC printf("water_R\t");
                 ; 0000 00ED printf("DirectADC\t");
                 ; 0000 00EE printf("DirectVolt\t");
                 ; 0000 00EF printf("\r\n");
                 ; 0000 00F0 while (1){
                 ; 0000 00F1 printf("%.2f\t", boiler.vdd);
                 ; 0000 00F2 printf("%.2f\t", boiler.water_voltage);
                 ; 0000 00F3 printf("%d\t",   boiler.water_temp_adc);
                 ; 0000 00F4 printf("%.2f\t", boiler.water_temp);
                 ; 0000 00F5 printf("%.2f\t", boiler.water_resistance);
                 ; 0000 00F6 printf("%d\t",   DirectADC);
                 ; 0000 00F7 printf("%.2f\t", DirectVolt);
                 ; 0000 00F8 printf("\r\n");
                 ; 0000 00F9 delay_ms(20);
                 ; 0000 00FA }
                 ; 0000 00FB 
                 ; 0000 00FC #endif
                 ; 0000 00FD 
                 ; 0000 00FE 
                 ; 0000 00FF while (1){
                 _0x8:
                 ; 0000 0100 //PRINT(">>>ITERATION BEGIN\r\n");
                 ; 0000 0101 printBoilerInfo();
0006f6 dfe5      	RCALL _printBoilerInfo
                 ; 0000 0102 menu_buttons_update();
0006f7 940e 1100 	CALL _menu_buttons_update
                 ; 0000 0103 boiler_update();
0006f9 d142      	RCALL _boiler_update
                 ; 0000 0104 boiler_update_pump();
0006fa d329      	RCALL _boiler_update_pump
                 ; 0000 0105 boiler_update_nvm();
0006fb d2e1      	RCALL _boiler_update_nvm
                 ; 0000 0106 widgetsUpdate();
0006fc 940e 12c9 	CALL _widgetsUpdate
                 ; 0000 0107 
                 ; 0000 0108 //printBoilerInfo();
                 ; 0000 0109 //delay_ms(100);
                 ; 0000 010A // PRINT("<<<ITERATION END\r\n\r\n\r\n");   */
                 ; 0000 010B }
0006fe cff7      	RJMP _0x8
                 ; 0000 010C }
                 _0xB:
0006ff cfff      	RJMP _0xB
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;char* boiler_state_str[] = {
                 ;"idle    ",
                 ;"starting",
                 ;"heating ",
                 ;"pre-blow",
                 ;"blow2   ",
                 ;"cooling ",
                 ;};
                 
                 	.DSEG
                 _0x20003:
000500           	.BYTE 0x36
                 ;char* start_sequence_stage_str[] = {
                 ;"none      ",      //"none      ",
                 ;"blowingoff",      //"blowing   ",
                 ;"blowPreChk",      //"fire test ",
                 ;"blowing   ",      //"fire work ",
                 ;"trans ON  ",      //"clapan tst",
                 ;"clapTstChk",      //"clapTstChk"
                 ;"clapanPreW",      //"clapanPreW"
                 ;"clapan wrk",      //"clapan wrk",
                 ;"transformr",      //"transformr"
                 ;"ion test  ",      //"ion test  ",
                 ;"ion work  ",      //"ion work  ",
                 ;};
                 _0x20005:
000536           	.BYTE 0x79
                 ;char*  boiler_role_str[] = {
                 ;" no model",
                 ;"  UK 103  ",
                 ;"  UK 203  ",
                 ;"  UK 303  ",
                 ;"LAN master",
                 ;"LAN slave1",
                 ;"LAN slave2",
                 ;};
                 _0x20007:
0005af           	.BYTE 0x4C
                 ;char* weather_dep_str[] = {
                 ;"None  ",  //   "\x8E\xA1\xA4\xB1\xA6\xA3",  //
                 ;"Winter",  //   "  \x88\xA9\xAD\xA1",        //
                 ;"Summer"   //   "  \x8C\xA6\xB3\xAF"         //
                 ;};
                 _0x20009:
0005fb           	.BYTE 0x15
                 ;char* errors_str[] = {
                 ;"None",                 // "\x8E\xA6\xB3",                                       ...
                 ;"Water level",          // "\x94\xB1\xAF\xA3\xA6\xAE\xBD \xA3\xAF\xA5\xBC",      ...
                 ;"Overheat",             // "\x90\xA6\xB1\xA6\xA4\xB1\xA6\xA3",                   ...
                 ;"Flame detector test",  // "\x8C\xAF\xA7\xAE\xAF\xA6 \xB0\xAC\xA1\xAD\xC0",      ...
                 ;"No flame",             // "\x8E\xA6\xB3 \xB0\xAC\xA1\xAD\xA6\xAE\xA9",          ...
                 ;"Ion detector test",    // "\x93\xA6\xB2\xB3 \xA9\xAF\xAE\xA9\xA8\xA1\xB7\xA9\xA ...
                 ;"No ionization",        // "\x8E\xA6\xB3 \xA9\xAF\xAE\xA9\xA8\xA1\xB7\xA9\xA9",  ...
                 ;"Air detector test",    // "\x93\xA6\xB2\xB3 \xA5\xA1\xB3\xB8\xA9\xAB\xA1 \xA3\x ...
                 ;"Air detector work",    // "\x91\xA1\xA2\xAF\xB3\xA1 \xA5\xA1\xB3\xB8\xA9\xAB\xA ...
                 ;"Thermistor failure",   // "\x8F\xB9\xA9\xA2\xAB\xA1 \xB3\xA6\xB1\xAD\xA9\xB2\xB ...
                 ;};
                 _0x2000B:
000610           	.BYTE 0x8E
                 ;typedef struct{
                 ;int16_t        water_goal_temp;
                 ;int16_t        gisteresis;
                 ;int16_t        pump_on_temp;
                 ;int16_t        pump_gist_temp;
                 ;weather_dep_e  weather;
                 ;boiler_role    role;
                 ;boiler_state_e command;
                 ;uint8_t        not_programmed;
                 ;}nvm_data_t;
                 ;eeprom  nvm_data_t eeinit_data;
                 ;nvm_data_t eedefault = {
                 ;.water_goal_temp = 50,
                 ;.gisteresis      = 5,
                 ;.pump_on_temp    = 15,
                 ;.pump_gist_temp  = 3,
                 ;.weather         = weather_none,
                 ;.role            = role_UK_203,
                 ;.command         = boiler_idle,
                 ;.not_programmed  = 0,
                 ;};
                 ;nvm_data_t nvm_cache;
                 ;boiler_t boiler;
                 ;void turnAllOff(void){
                 ; 0001 0060 void turnAllOff(void){
                 
                 	.CSEG
                 _turnAllOff:
                 ; .FSTART _turnAllOff
                 ; 0001 0061 TransRozgiga_OFF;
000700 9892      	CBI  0x12,2
                 ; 0001 0062 Ventilaytor_OFF;
000701 9893      	CBI  0x12,3
                 ; 0001 0063 Topl_Nasos_OFF;
000702 9894      	CBI  0x12,4
                 ; 0001 0064 //Setevoi_nasos_OFF;
                 ; 0001 0065 Klapan1_OFF;
000703 9896      	CBI  0x12,6
                 ; 0001 0066 Klapan2_OFF;
000704 9897      	CBI  0x12,7
                 ; 0001 0067 boiler.time_of_last_stage = 0;
000705 940e 2266 	CALL SUBOPT_0x2
000707 940e 226b 	CALL SUBOPT_0x3
                 ; 0001 0068 }
000709 9508      	RET
                 ; .FEND
                 ;void boiler_init(void){
                 ; 0001 006A void boiler_init(void){
                 _boiler_init:
                 ; .FSTART _boiler_init
                 ; 0001 006B PRINT(">>boiler_init()\r\n");
                 ; 0001 006C eeprom_read_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
00070a 940e 2274 	CALL SUBOPT_0x4
                 ; 0001 006D if(nvm_cache.not_programmed){
                +
00070c 91e0 07c2+LDS R30 , _nvm_cache + ( 11 )
                 	__GETB1MN _nvm_cache,11
00070e 30e0      	CPI  R30,0
00070f f031      	BREQ _0x2000E
                 ; 0001 006E eeprom_write_block(&eedefault, &eeinit_data, sizeof(nvm_data_t));
000710 eaeb      	LDI  R30,LOW(_eedefault)
000711 e0f7      	LDI  R31,HIGH(_eedefault)
000712 940e 2280 	CALL SUBOPT_0x5
                 ; 0001 006F eeprom_read_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
000714 940e 2274 	CALL SUBOPT_0x4
                 ; 0001 0070 }
                 ; 0001 0071 
                 ; 0001 0072 boiler.command         = nvm_cache.command;
                 _0x2000E:
                +
000716 91e0 07c1+LDS R30 , _nvm_cache + ( 10 )
                 	__GETB1MN _nvm_cache,10
                +
000718 93e0 078f+STS _boiler + ( 56 ) , R30
                 	__PUTB1MN _boiler,56
                 ; 0001 0073 boiler.water_goal_temp = nvm_cache.water_goal_temp;
00071a 91e0 07b7 	LDS  R30,_nvm_cache
00071c 91f0 07b8 	LDS  R31,_nvm_cache+1
                +
00071e 93e0 0783+STS _boiler + ( 44 ) , R30
000720 93f0 0784+STS _boiler + ( 44 ) + 1 , R31
                 	__PUTW1MN _boiler,44
                 ; 0001 0074 boiler.water_pump_on_temp = nvm_cache.pump_on_temp;
                +
000722 91e0 07bb+LDS R30 , _nvm_cache + ( 4 )
000724 91f0 07bc+LDS R31 , _nvm_cache + ( 4 ) + 1
                 	__GETW1MN _nvm_cache,4
                +
000726 93e0 0785+STS _boiler + ( 46 ) , R30
000728 93f0 0786+STS _boiler + ( 46 ) + 1 , R31
                 	__PUTW1MN _boiler,46
                 ; 0001 0075 boiler.water_pump_gist_temp = nvm_cache.pump_gist_temp;
                +
00072a 91e0 07bd+LDS R30 , _nvm_cache + ( 6 )
00072c 91f0 07be+LDS R31 , _nvm_cache + ( 6 ) + 1
                 	__GETW1MN _nvm_cache,6
                +
00072e 93e0 0787+STS _boiler + ( 48 ) , R30
000730 93f0 0788+STS _boiler + ( 48 ) + 1 , R31
                 	__PUTW1MN _boiler,48
                 ; 0001 0076 boiler.gisteresis      = nvm_cache.gisteresis;
                +
000732 91e0 07b9+LDS R30 , _nvm_cache + ( 2 )
000734 91f0 07ba+LDS R31 , _nvm_cache + ( 2 ) + 1
                 	__GETW1MN _nvm_cache,2
                +
000736 93e0 0781+STS _boiler + ( 42 ) , R30
000738 93f0 0782+STS _boiler + ( 42 ) + 1 , R31
                 	__PUTW1MN _boiler,42
                 ; 0001 0077 boiler.weather         = nvm_cache.weather;
                +
00073a 91e0 07bf+LDS R30 , _nvm_cache + ( 8 )
                 	__GETB1MN _nvm_cache,8
                +
00073c 93e0 078d+STS _boiler + ( 54 ) , R30
                 	__PUTB1MN _boiler,54
                 ; 0001 0078 boiler.role            = nvm_cache.role;
                +
00073e 91e0 07c0+LDS R30 , _nvm_cache + ( 9 )
                 	__GETB1MN _nvm_cache,9
                +
000740 93e0 0790+STS _boiler + ( 57 ) , R30
                 	__PUTB1MN _boiler,57
                 ; 0001 0079 //TODO: CRC or checksum
                 ; 0001 007A 
                 ; 0001 007B boiler.vdd = 5.0;
                +
000742 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000743 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000744 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
000745 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
000746 940e 228a 	CALL SUBOPT_0x6
                 ; 0001 007C boiler.vref = 2.050;
                +
000748 e3e3     +LDI R30 , LOW ( 0x40033333 )
000749 e3f3     +LDI R31 , HIGH ( 0x40033333 )
00074a e063     +LDI R22 , BYTE3 ( 0x40033333 )
00074b e470     +LDI R23 , BYTE4 ( 0x40033333 )
                 	__GETD1N 0x40033333
                +
00074c 93e0 075d+STS _boiler + ( 6 ) , R30
00074e 93f0 075e+STS _boiler + ( 6 ) + 1 , R31
000750 9360 075f+STS _boiler + ( 6 ) + 2 , R22
000752 9370 0760+STS _boiler + ( 6 ) + 3 , R23
                 	__PUTD1MN _boiler,6
                 ; 0001 007D boiler.K_adc =  boiler.vref / 1023;
                +
000754 91a0 075d+LDS R26 , _boiler + ( 6 )
000756 91b0 075e+LDS R27 , _boiler + ( 6 ) + 1
000758 9180 075f+LDS R24 , _boiler + ( 6 ) + 2
00075a 9190 0760+LDS R25 , _boiler + ( 6 ) + 3
                 	__GETD2MN _boiler,6
                +
00075c e0e0     +LDI R30 , LOW ( 0x447FC000 )
00075d ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00075e e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00075f e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
000760 940e 2293 	CALL SUBOPT_0x7
                 ; 0001 007E 
                 ; 0001 007F PRINT("<<boiler_init()\r\n");
                 ; 0001 0080 }
000762 9508      	RET
                 ; .FEND
                 ;char check_reset_error(errors_e err, uint32_t err_condition){
                 ; 0001 0082 char check_reset_error(errors_e err, uint32_t err_condition){
                 _check_reset_error:
                 ; .FSTART _check_reset_error
                 ; 0001 0083 if(boiler.error == err){
000763 940e 28ab 	CALL __PUTPARD2
000765 931a      	ST   -Y,R17
000766 811d      	LDD  R17,Y+5
                 ;	err -> R17
                 ;	err_condition -> Y+1
                +
000767 91a0 0792+LDS R26 , _boiler + ( 59 )
                 	__GETB2MN _boiler,59
000769 171a      	CP   R17,R26
00076a f431      	BRNE _0x2000F
                 ; 0001 0084 if(!err_condition){
00076b 940e 229e 	CALL SUBOPT_0x8
00076d f419      	BRNE _0x20010
                 ; 0001 0085 boiler.error = error_None;
00076e e0e0      	LDI  R30,LOW(0)
                +
00076f 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 0086 }
                 ; 0001 0087 }
                 _0x20010:
                 ; 0001 0088 if(err_condition){
                 _0x2000F:
000771 940e 229e 	CALL SUBOPT_0x8
000773 f021      	BREQ _0x20011
                 ; 0001 0089 boiler.error = err;
                +
000774 9310 0792+STS _boiler + ( 59 ) , R17
                 	__PUTBMRN _boiler,59,17
                 ; 0001 008A return 1;
000776 e0e1      	LDI  R30,LOW(1)
000777 c001      	RJMP _0x214001F
                 ; 0001 008B }
                 ; 0001 008C return 0;
                 _0x20011:
000778 e0e0      	LDI  R30,LOW(0)
                 _0x214001F:
000779 8118      	LDD  R17,Y+0
                 _0x2140020:
00077a 9626      	ADIW R28,6
00077b 9508      	RET
                 ; 0001 008D }
                 ; .FEND
                 ;void check_errors(void){
                 ; 0001 0090 void check_errors(void){
                 _check_errors:
                 ; .FSTART _check_errors
                 ; 0001 0091 PRINT(">>>check_errors\r\n");
                 ; 0001 0092 if(check_reset_error(error_WaterLevel, !Uroven_out)){
00077c e0e1      	LDI  R30,LOW(1)
00077d 93ea      	ST   -Y,R30
00077e b1e0      	IN   R30,0x0
00077f 70e8      	ANDI R30,LOW(0x8)
000780 940e 27d9 	CALL __LNEGB1
000782 940e 22a5 	CALL SUBOPT_0x9
000784 f009      	BREQ _0x20012
                 ; 0001 0093 return;
000785 9508      	RET
                 ; 0001 0094 }
                 ; 0001 0095 if(check_reset_error(error_Overheat, t_max_out)){
                 _0x20012:
000786 e0e2      	LDI  R30,LOW(2)
000787 93ea      	ST   -Y,R30
000788 b1e0      	IN   R30,0x0
000789 72e0      	ANDI R30,LOW(0x20)
00078a 940e 22a5 	CALL SUBOPT_0x9
00078c f009      	BREQ _0x20013
                 ; 0001 0096 return;
00078d 9508      	RET
                 ; 0001 0097 }
                 ; 0001 0098 if(check_reset_error(error_WaterTempError, (boiler.water_temp < WATER_TEMP_MIN)  ...
                 _0x20013:
00078e e0e9      	LDI  R30,LOW(9)
00078f 93ea      	ST   -Y,R30
000790 940e 22b0 	CALL SUBOPT_0xA
                +
000792 e0e0     +LDI R30 , LOW ( 0x41880000 )
000793 e0f0     +LDI R31 , HIGH ( 0x41880000 )
000794 e868     +LDI R22 , BYTE3 ( 0x41880000 )
000795 e471     +LDI R23 , BYTE4 ( 0x41880000 )
                 	__GETD1N 0x41880000
000796 940e 2a8e 	CALL __CMPF12
000798 f068      	BRLO _0x20015
000799 940e 22b0 	CALL SUBOPT_0xA
                +
00079b e0e0     +LDI R30 , LOW ( 0x42BE0000 )
00079c e0f0     +LDI R31 , HIGH ( 0x42BE0000 )
00079d eb6e     +LDI R22 , BYTE3 ( 0x42BE0000 )
00079e e472     +LDI R23 , BYTE4 ( 0x42BE0000 )
                 	__GETD1N 0x42BE0000
00079f 940e 2a8e 	CALL __CMPF12
0007a1 f011      	BREQ PC+3
0007a2 f008      	BRCS PC+2
0007a3 c002      	RJMP _0x20015
0007a4 e0e0      	LDI  R30,0
0007a5 c001      	RJMP _0x20016
                 _0x20015:
0007a6 e0e1      	LDI  R30,1
                 _0x20016:
0007a7 27ff      	CLR  R31
0007a8 2766      	CLR  R22
0007a9 2777      	CLR  R23
0007aa 01df      	MOVW R26,R30
0007ab 01cb      	MOVW R24,R22
0007ac dfb6      	RCALL _check_reset_error
0007ad 30e0      	CPI  R30,0
0007ae f009      	BREQ _0x20014
                 ; 0001 0099 return;
0007af 9508      	RET
                 ; 0001 009A }
                 ; 0001 009B 
                 ; 0001 009C PRINT("switch state = %s\r\n", boiler_state_str[boiler.state]);
                 _0x20014:
                 ; 0001 009D PRINT("switch start = %s\r\n", start_sequence_stage_str[boiler.start_stage]);
                 ; 0001 009E PRINT("switch role = %s\r\n", boiler_role_str[boiler.role]);
                 ; 0001 009F switch (boiler.state){
                +
0007b0 91e0 078e+LDS R30 , _boiler + ( 55 )
                 	__GETB1MN _boiler,55
0007b2 e0f0      	LDI  R31,0
                 ; 0001 00A0 case boiler_idle:
0007b3 9730      	SBIW R30,0
0007b4 f409      	BRNE _0x2001A
                 ; 0001 00A1 PRINT("boiler idle...\r\n");
                 ; 0001 00A2 break;
0007b5 c085      	RJMP _0x20019
                 ; 0001 00A3 case boiler_start_sequence:
                 _0x2001A:
0007b6 30e1      	CPI  R30,LOW(0x1)
0007b7 e0a0      	LDI  R26,HIGH(0x1)
0007b8 07fa      	CPC  R31,R26
0007b9 f009      	BREQ PC+2
0007ba c03f      	RJMP _0x2001B
                 ; 0001 00A4 PRINT("boiler boiler_start_sequence...\r\n");
                 ; 0001 00A5 switch(boiler.role){
0007bb 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 00A6 case role_not_selected:
0007bd f1d9      	BREQ _0x2001E
                 ; 0001 00A7 PRINT("role_not_selected...\r\n");
                 ; 0001 00A8 break;
                 ; 0001 00A9 case role_UK_103:
0007be 30e1      	CPI  R30,LOW(0x1)
0007bf e0a0      	LDI  R26,HIGH(0x1)
0007c0 07fa      	CPC  R31,R26
0007c1 f469      	BRNE _0x20020
                 ; 0001 00AA PRINT("role_UK_103...\r\n");
                 ; 0001 00AB switch (boiler.start_stage){
0007c2 940e 22be 	CALL SUBOPT_0xC
                 ; 0001 00AC case stage_none:
0007c4 f021      	BREQ _0x20025
                 ; 0001 00AD case stage_blowing:
0007c5 30e3      	CPI  R30,LOW(0x3)
0007c6 e0a0      	LDI  R26,HIGH(0x3)
0007c7 07fa      	CPC  R31,R26
0007c8 f429      	BRNE _0x20026
                 _0x20025:
                 ; 0001 00AE PRINT("stage_none or stage_blowing...\r\n");
                 ; 0001 00AF if(plamya_out){
0007c9 9b07      	SBIS 0x0,7
0007ca c003      	RJMP _0x20027
                 ; 0001 00B0 boiler.error = error_FlameTest;
0007cb e0e3      	LDI  R30,LOW(3)
                +
0007cc 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 00B1 }
                 ; 0001 00B2 break;
                 _0x20027:
                 ; 0001 00B3 case stage_transformer_on:
                 _0x20026:
                 ; 0001 00B4 break;
                 ; 0001 00B5 default:
                 ; 0001 00B6 
                 ; 0001 00B7 break;
                 ; 0001 00B8 }
                 ; 0001 00B9 break;
0007ce c02a      	RJMP _0x2001E
                 ; 0001 00BA case role_UK_203:
                 _0x20020:
0007cf 30e2      	CPI  R30,LOW(0x2)
0007d0 e0a0      	LDI  R26,HIGH(0x2)
0007d1 07fa      	CPC  R31,R26
0007d2 f531      	BRNE _0x2002A
                 ; 0001 00BB PRINT("UK_203...\r\n");
                 ; 0001 00BC switch (boiler.start_stage){
0007d3 940e 22be 	CALL SUBOPT_0xC
                 ; 0001 00BD case stage_none:
0007d5 f021      	BREQ _0x2002F
                 ; 0001 00BE case stage_blowing_test_off_check:
0007d6 30e1      	CPI  R30,LOW(0x1)
0007d7 e0a0      	LDI  R26,HIGH(0x1)
0007d8 07fa      	CPC  R31,R26
0007d9 f451      	BRNE _0x20030
                 _0x2002F:
                 ; 0001 00BF PRINT("stge none blowing test...\r\n");
                 ; 0001 00C0 if(clapan_out()){
0007da 9b06      	SBIS 0x0,6
0007db c002      	RJMP _0x20031
                 ; 0001 00C1 PRINT("errror air test...\r\n");
                 ; 0001 00C2 boiler.error = error_AirDetectorTest;
0007dc e0e7      	LDI  R30,LOW(7)
0007dd c055      	RJMP _0x214001E
                 ; 0001 00C3 return;
                 ; 0001 00C4 }
                 ; 0001 00C5 if(Ion_out){
                 _0x20031:
0007de 9904      	SBIC 0x0,4
0007df c003      	RJMP _0x20032
                 ; 0001 00C6 PRINT("ion test...\r\n");
                 ; 0001 00C7 boiler.error = error_IonTest;
0007e0 e0e5      	LDI  R30,LOW(5)
                +
0007e1 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 00C8 }
                 ; 0001 00C9 break;
                 _0x20032:
0007e3 c015      	RJMP _0x2002D
                 ; 0001 00CA case stage_blowing_test_on_pre_check:
                 _0x20030:
0007e4 30e2      	CPI  R30,LOW(0x2)
0007e5 e0a0      	LDI  R26,HIGH(0x2)
0007e6 07fa      	CPC  R31,R26
0007e7 f431      	BRNE _0x20033
                 ; 0001 00CB PRINT("test on pre check...\r\n");
                 ; 0001 00CC if(Ion_out){
0007e8 9904      	SBIC 0x0,4
0007e9 c003      	RJMP _0x20034
                 ; 0001 00CD PRINT("ion test...\r\n");
                 ; 0001 00CE boiler.error = error_IonTest;
0007ea e0e5      	LDI  R30,LOW(5)
                +
0007eb 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 00CF }
                 ; 0001 00D0 break;
                 _0x20034:
0007ed c00b      	RJMP _0x2002D
                 ; 0001 00D1 
                 ; 0001 00D2 case stage_blowing:
                 _0x20033:
0007ee 30e3      	CPI  R30,LOW(0x3)
0007ef e0a0      	LDI  R26,HIGH(0x3)
0007f0 07fa      	CPC  R31,R26
0007f1 f439      	BRNE _0x20038
                 ; 0001 00D3 PRINT("blowing...\r\n");
                 ; 0001 00D4 if(!clapan_out()){
0007f2 9b06      	SBIS 0x0,6
                 ; 0001 00D5 boiler.error = error_AirDetectorWork;
0007f3 c03e      	RJMP _0x214001D
                 ; 0001 00D6 return;
                 ; 0001 00D7 }
                 ; 0001 00D8 if(Ion_out){
0007f4 9904      	SBIC 0x0,4
0007f5 c003      	RJMP _0x20037
                 ; 0001 00D9 boiler.error = error_IonTest;
0007f6 e0e5      	LDI  R30,LOW(5)
                +
0007f7 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 00DA }
                 ; 0001 00DB break;
                 _0x20037:
                 ; 0001 00DC default:
                 _0x20038:
                 ; 0001 00DD 
                 ; 0001 00DE break;
                 ; 0001 00DF 
                 ; 0001 00E0 }
                 _0x2002D:
                 ; 0001 00E1 break;
                 ; 0001 00E2 case role_UK_303:
                 _0x2002A:
                 ; 0001 00E3 
                 ; 0001 00E4 break;
                 ; 0001 00E5 case role_LAN_master:
                 ; 0001 00E6 
                 ; 0001 00E7 break;
                 ; 0001 00E8 case role_LAN_slave1:
                 ; 0001 00E9 
                 ; 0001 00EA break;
                 ; 0001 00EB case role_LAN_slave2:
                 ; 0001 00EC 
                 ; 0001 00ED break;
                 ; 0001 00EE 
                 ; 0001 00EF }
                 _0x2001E:
                 ; 0001 00F0 break;
0007f9 c041      	RJMP _0x20019
                 ; 0001 00F1 case boiler_work_heating:
                 _0x2001B:
0007fa 30e2      	CPI  R30,LOW(0x2)
0007fb e0a0      	LDI  R26,HIGH(0x2)
0007fc 07fa      	CPC  R31,R26
0007fd f4c9      	BRNE _0x2003D
                 ; 0001 00F2 PRINT("boiler_work_heating...\r\n");
                 ; 0001 00F3 switch(boiler.role){
0007fe 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 00F4 case role_not_selected:
000800 f0a9      	BREQ _0x20040
                 ; 0001 00F5 break;
                 ; 0001 00F6 case role_UK_103:
000801 30e1      	CPI  R30,LOW(0x1)
000802 e0a0      	LDI  R26,HIGH(0x1)
000803 07fa      	CPC  R31,R26
000804 f431      	BRNE _0x20042
                 ; 0001 00F7 if(!plamya_out){
000805 9907      	SBIC 0x0,7
000806 c003      	RJMP _0x20043
                 ; 0001 00F8 PRINT("error_FlameWork...\r\n");
                 ; 0001 00F9 boiler.error = error_FlameWork;
000807 e0e4      	LDI  R30,LOW(4)
                +
000808 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 00FA }
                 ; 0001 00FB break;
                 _0x20043:
00080a c00b      	RJMP _0x20040
                 ; 0001 00FC case role_UK_203:
                 _0x20042:
00080b 30e2      	CPI  R30,LOW(0x2)
00080c e0a0      	LDI  R26,HIGH(0x2)
00080d 07fa      	CPC  R31,R26
00080e f439      	BRNE _0x20044
                 ; 0001 00FD if(!clapan_out()){
00080f 9b06      	SBIS 0x0,6
                 ; 0001 00FE boiler.error = error_AirDetectorWork;
000810 c021      	RJMP _0x214001D
                 ; 0001 00FF return;
                 ; 0001 0100 }
                 ; 0001 0101 if(!Ion_out){
000811 9b04      	SBIS 0x0,4
000812 c003      	RJMP _0x20046
                 ; 0001 0102 boiler.error = error_IonWork;
000813 e0e6      	LDI  R30,LOW(6)
                +
000814 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 0103 }
                 ; 0001 0104 break;
                 _0x20046:
                 ; 0001 0105 case role_UK_303:
                 _0x20044:
                 ; 0001 0106 
                 ; 0001 0107 break;
                 ; 0001 0108 case role_LAN_master:
                 ; 0001 0109 
                 ; 0001 010A break;
                 ; 0001 010B case role_LAN_slave1:
                 ; 0001 010C 
                 ; 0001 010D break;
                 ; 0001 010E case role_LAN_slave2:
                 ; 0001 010F 
                 ; 0001 0110 break;
                 ; 0001 0111 
                 ; 0001 0112 }
                 _0x20040:
                 ; 0001 0113 break;
000816 c024      	RJMP _0x20019
                 ; 0001 0114 
                 ; 0001 0115 case bolier_work_blowing_precheck:
                 _0x2003D:
000817 30e3      	CPI  R30,LOW(0x3)
000818 e0a0      	LDI  R26,HIGH(0x3)
000819 07fa      	CPC  R31,R26
00081a f101      	BREQ _0x20019
                 ; 0001 0116 
                 ; 0001 0117 break;
                 ; 0001 0118 
                 ; 0001 0119 case boiler_work_blowing_after_heating:
00081b 30e4      	CPI  R30,LOW(0x4)
00081c e0a0      	LDI  R26,HIGH(0x4)
00081d 07fa      	CPC  R31,R26
00081e f4e1      	BRNE _0x2004C
                 ; 0001 011A PRINT("boiler_work_blowing_after_heating...\r\n");
                 ; 0001 011B switch(boiler.role){
00081f 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 011C case role_not_selected:
000821 f0c9      	BREQ _0x2004F
                 ; 0001 011D break;
                 ; 0001 011E case role_UK_103:
000822 30e1      	CPI  R30,LOW(0x1)
000823 e0a0      	LDI  R26,HIGH(0x1)
000824 07fa      	CPC  R31,R26
000825 f431      	BRNE _0x20051
                 ; 0001 011F PRINT("error_FlameWork...\r\n");
                 ; 0001 0120 if(plamya_out){
000826 9b07      	SBIS 0x0,7
000827 c003      	RJMP _0x20052
                 ; 0001 0121 boiler.error = error_FlameWork;
000828 e0e4      	LDI  R30,LOW(4)
                +
000829 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 0122 }
                 ; 0001 0123 break;
                 _0x20052:
00082b c00f      	RJMP _0x2004F
                 ; 0001 0124 case role_UK_203:
                 _0x20051:
00082c 30e2      	CPI  R30,LOW(0x2)
00082d e0a0      	LDI  R26,HIGH(0x2)
00082e 07fa      	CPC  R31,R26
00082f f459      	BRNE _0x20053
                 ; 0001 0125 if(!clapan_out()){
000830 9906      	SBIC 0x0,6
000831 c004      	RJMP _0x20054
                 ; 0001 0126 boiler.error = error_AirDetectorWork;
                 _0x214001D:
000832 e0e8      	LDI  R30,LOW(8)
                 _0x214001E:
                +
000833 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 0127 return;
000835 9508      	RET
                 ; 0001 0128 }
                 ; 0001 0129 if(Ion_out){
                 _0x20054:
000836 9904      	SBIC 0x0,4
000837 c003      	RJMP _0x20055
                 ; 0001 012A boiler.error = error_IonWork;
000838 e0e6      	LDI  R30,LOW(6)
                +
000839 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 012B }
                 ; 0001 012C break;
                 _0x20055:
                 ; 0001 012D case role_UK_303:
                 _0x20053:
                 ; 0001 012E 
                 ; 0001 012F break;
                 ; 0001 0130 case role_LAN_master:
                 ; 0001 0131 
                 ; 0001 0132 break;
                 ; 0001 0133 case role_LAN_slave1:
                 ; 0001 0134 
                 ; 0001 0135 break;
                 ; 0001 0136 case role_LAN_slave2:
                 ; 0001 0137 
                 ; 0001 0138 break;
                 ; 0001 0139 }
                 _0x2004F:
                 ; 0001 013A break;
                 ; 0001 013B 
                 ; 0001 013C case boiler_work_cooling:
                 _0x2004C:
                 ; 0001 013D 
                 ; 0001 013E break;
                 ; 0001 013F }
                 _0x20019:
                 ; 0001 0140 PRINT("<<<check_errors\r\n");
                 ; 0001 0141 }
00083b 9508      	RET
                 ; .FEND
                 ;void boiler_update(){
                 ; 0001 0143 void boiler_update(){
                 _boiler_update:
                 ; .FSTART _boiler_update
                 ; 0001 0144 PRINT(">>>boiler_update()\r\n");
                 ; 0001 0145 PRINT("hadling %s\r\n", boiler_role_str[boiler.role]);
                 ; 0001 0146 #if ERRORS_ACTIVE
                 ; 0001 0147 check_errors();
00083c df3f      	RCALL _check_errors
                 ; 0001 0148 PRINT("error = %s\r\n", errors_str[boiler.error]);
                 ; 0001 0149 #endif
                 ; 0001 014A 
                 ; 0001 014B 
                 ; 0001 014C static uint32_t oneminute_counter = 0;
                 ; 0001 014D 
                 ; 0001 014E if(boiler.error == error_None){
                +
00083d 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
00083f 30e0      	CPI  R30,0
000840 f089      	BREQ _0x2005C
                 ; 0001 014F }
                 ; 0001 0150 else{
                 ; 0001 0151 if( (boiler.error == error_WaterLevel) ||
                 ; 0001 0152 (boiler.error == error_Overheat)  ||
                 ; 0001 0153 (boiler.error == error_WaterTempError)){
                +
000841 91a0 0792+LDS R26 , _boiler + ( 59 )
                 	__GETB2MN _boiler,59
000843 30a1      	CPI  R26,LOW(0x1)
000844 f021      	BREQ _0x2005E
000845 30a2      	CPI  R26,LOW(0x2)
000846 f011      	BREQ _0x2005E
000847 30a9      	CPI  R26,LOW(0x9)
000848 f409      	BRNE _0x2005D
                 _0x2005E:
                 ; 0001 0154 }
                 ; 0001 0155 else{//more serious errors
000849 c003      	RJMP _0x20060
                 _0x2005D:
                 ; 0001 0156 boiler.command = boiler_idle;
00084a e0e0      	LDI  R30,LOW(0)
                +
00084b 93e0 078f+STS _boiler + ( 56 ) , R30
                 	__PUTB1MN _boiler,56
                 ; 0001 0157 }
                 _0x20060:
                 ; 0001 0158 boiler.state = boiler_idle;
00084d e0e0      	LDI  R30,LOW(0)
                +
00084e 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0159 boiler.start_stage = stage_none;
                +
000850 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
                 ; 0001 015A }
                 _0x2005C:
                 ; 0001 015B 
                 ; 0001 015C switch (boiler.state){
                +
000852 91e0 078e+LDS R30 , _boiler + ( 55 )
                 	__GETB1MN _boiler,55
000854 e0f0      	LDI  R31,0
                 ; 0001 015D case boiler_idle:
000855 9730      	SBIW R30,0
000856 f4b9      	BRNE _0x20064
                 ; 0001 015E //turn all off
                 ; 0001 015F PRINT("boiler_idle...\r\n");
                 ; 0001 0160 turnAllOff();
000857 dea8      	RCALL _turnAllOff
                 ; 0001 0161 if(boiler.command == boiler_work_heating){
                +
000858 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
00085a 30a2      	CPI  R26,LOW(0x2)
00085b f489      	BRNE _0x20065
                 ; 0001 0162 if(boiler.water_temp < boiler.water_goal_temp - boiler.gisteresis){
00085c 940e 22c3 	CALL SUBOPT_0xD
00085e 940e 22c8 	CALL SUBOPT_0xE
000860 940e 22cf 	CALL SUBOPT_0xF
000862 f438      	BRSH _0x20066
                 ; 0001 0163 boiler.state = boiler_start_sequence;
000863 e0e1      	LDI  R30,LOW(1)
                +
000864 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0164 boiler.start_stage = stage_none;
000866 e0e0      	LDI  R30,LOW(0)
                +
000867 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
                 ; 0001 0165 }
                 ; 0001 0166 else{
000869 c003      	RJMP _0x20067
                 _0x20066:
                 ; 0001 0167 boiler.state = boiler_work_cooling;
00086a e0e5      	LDI  R30,LOW(5)
                +
00086b 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0168 }
                 _0x20067:
                 ; 0001 0169 }
                 ; 0001 016A else{
                 _0x20065:
                 ; 0001 016B //keep evething off
                 ; 0001 016C }
                 ; 0001 016D break;
00086d c159      	RJMP _0x20063
                 ; 0001 016E 
                 ; 0001 016F case boiler_start_sequence:
                 _0x20064:
00086e 30e1      	CPI  R30,LOW(0x1)
00086f e0a0      	LDI  R26,HIGH(0x1)
000870 07fa      	CPC  R31,R26
000871 f009      	BREQ PC+2
000872 c0b1      	RJMP _0x20069
                 ; 0001 0170 PRINT("boiler_start_sequence...\r\n");
                 ; 0001 0171 if(boiler.command == boiler_work_heating){
                +
000873 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
000875 30a2      	CPI  R26,LOW(0x2)
000876 f009      	BREQ PC+2
000877 c0a8      	RJMP _0x2006A
                 ; 0001 0172 if(boiler.water_temp < boiler.water_goal_temp){
000878 940e 22b0 	CALL SUBOPT_0xA
00087a 940e 22c3 	CALL SUBOPT_0xD
00087c 940e 22cf 	CALL SUBOPT_0xF
00087e f008      	BRLO PC+2
00087f c09c      	RJMP _0x2006B
                 ; 0001 0173 PRINT("water temp < goal...\r\n");
                 ; 0001 0174 //ignition sequence
                 ; 0001 0175 switch(boiler.role){
000880 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 0176 case role_not_selected:
000882 f421      	BRNE _0x2006F
                 ; 0001 0177 PRINT("role_not_selected...\r\n");
                 ; 0001 0178 boiler.state = boiler_work_heating;
000883 e0e2      	LDI  R30,LOW(2)
                +
000884 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0179 break;
000886 c094      	RJMP _0x2006E
                 ; 0001 017A case role_UK_103:
                 _0x2006F:
000887 30e1      	CPI  R30,LOW(0x1)
000888 e0a0      	LDI  R26,HIGH(0x1)
000889 07fa      	CPC  R31,R26
00088a f559      	BRNE _0x20070
                 ; 0001 017B PRINT("role_UK_103...\r\n");
                 ; 0001 017C switch(boiler.start_stage){
00088b 940e 22be 	CALL SUBOPT_0xC
                 ; 0001 017D case stage_none:
00088d f439      	BRNE _0x20074
                 ; 0001 017E PRINT("stage_none...\r\n");
                 ; 0001 017F boiler.time_of_last_stage = GetTick_ms();
00088e 940e 22d6 	CALL SUBOPT_0x10
                 ; 0001 0180 boiler.start_stage = stage_blowing;
000890 e0e3      	LDI  R30,LOW(3)
                +
000891 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
                 ; 0001 0181 Ventilaytor_ON;
000893 9a93      	SBI  0x12,3
                 ; 0001 0182 break;
000894 c020      	RJMP _0x20073
                 ; 0001 0183 case stage_blowing:
                 _0x20074:
000895 30e3      	CPI  R30,LOW(0x3)
000896 e0a0      	LDI  R26,HIGH(0x3)
000897 07fa      	CPC  R31,R26
000898 f459      	BRNE _0x20075
                 ; 0001 0184 PRINT("stage_blowing...\r\n");
                 ; 0001 0185 if(GetTick_ms() - boiler.time_of_last_stage > 20000){
000899 940e 22d9 	CALL SUBOPT_0x11
00089b 940e 22e8 	CALL SUBOPT_0x12
00089d f028      	BRLO _0x20076
                 ; 0001 0186 TransRozgiga_ON;
00089e 9a92      	SBI  0x12,2
                 ; 0001 0187 Topl_Nasos_ON;
00089f 9a94      	SBI  0x12,4
                 ; 0001 0188 boiler.start_stage = stage_transformer_on;
0008a0 e0e4      	LDI  R30,LOW(4)
0008a1 940e 22f0 	CALL SUBOPT_0x13
                 ; 0001 0189 boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 018A }
                 ; 0001 018B break;
                 _0x20076:
0008a3 c011      	RJMP _0x20073
                 ; 0001 018C case stage_transformer_on:
                 _0x20075:
0008a4 30e4      	CPI  R30,LOW(0x4)
0008a5 e0a0      	LDI  R26,HIGH(0x4)
0008a6 07fa      	CPC  R31,R26
0008a7 f469      	BRNE _0x20073
                 ; 0001 018D PRINT("stage_transformer_on...\r\n");
                 ; 0001 018E if(GetTick_ms() - boiler.time_of_last_stage < 3000){
0008a8 940e 22d9 	CALL SUBOPT_0x11
0008aa 940e 22f3 	CALL SUBOPT_0x14
0008ac f428      	BRSH _0x20078
                 ; 0001 018F #if ERRORS_ACTIVE
                 ; 0001 0190 if(plamya_out){
0008ad 9b07      	SBIS 0x0,7
0008ae c002      	RJMP _0x20079
                 ; 0001 0191 #endif
                 ; 0001 0192 TransRozgiga_OFF;
0008af 940e 22fb 	CALL SUBOPT_0x15
                 ; 0001 0193 boiler.start_stage = stage_none;
                 ; 0001 0194 boiler.state = boiler_work_heating;
                 ; 0001 0195 boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 0196 #if ERRORS_ACTIVE
                 ; 0001 0197 }
                 ; 0001 0198 #endif
                 ; 0001 0199 }
                 _0x20079:
                 ; 0001 019A else{
0008b1 c003      	RJMP _0x2007A
                 _0x20078:
                 ; 0001 019B PRINT("error_FlameWork...\r\n");
                 ; 0001 019C boiler.error = error_FlameWork;
0008b2 e0e4      	LDI  R30,LOW(4)
                +
0008b3 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 019D }
                 _0x2007A:
                 ; 0001 019E break;
                 ; 0001 019F }
                 _0x20073:
                 ; 0001 01A0 break;
0008b5 c065      	RJMP _0x2006E
                 ; 0001 01A1 
                 ; 0001 01A2 case role_UK_203:
                 _0x20070:
0008b6 30e2      	CPI  R30,LOW(0x2)
0008b7 e0a0      	LDI  R26,HIGH(0x2)
0008b8 07fa      	CPC  R31,R26
0008b9 f009      	BREQ PC+2
0008ba c056      	RJMP _0x2007B
                 ; 0001 01A3 switch(boiler.start_stage){
0008bb 940e 22be 	CALL SUBOPT_0xC
                 ; 0001 01A4 case stage_none:
0008bd f431      	BRNE _0x2007F
                 ; 0001 01A5 boiler.time_of_last_stage = GetTick_ms();
0008be 940e 22d6 	CALL SUBOPT_0x10
                 ; 0001 01A6 boiler.start_stage = stage_blowing_test_off_check;
0008c0 e0e1      	LDI  R30,LOW(1)
                +
0008c1 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
                 ; 0001 01A7 break;
0008c3 c04c      	RJMP _0x2007E
                 ; 0001 01A8 
                 ; 0001 01A9 case stage_blowing_test_off_check:
                 _0x2007F:
0008c4 30e1      	CPI  R30,LOW(0x1)
0008c5 e0a0      	LDI  R26,HIGH(0x1)
0008c6 07fa      	CPC  R31,R26
0008c7 f489      	BRNE _0x20080
                 ; 0001 01AA if(GetTick_ms() - boiler.time_of_last_stage > 300){
0008c8 940e 22d9 	CALL SUBOPT_0x11
                +
0008ca 32ad     +CPI R26 , LOW ( 0x12D )
0008cb e0e1     +LDI R30 , HIGH ( 0x12D )
0008cc 07be     +CPC R27 , R30
0008cd e0e0     +LDI R30 , BYTE3 ( 0x12D )
0008ce 078e     +CPC R24 , R30
0008cf e0e0     +LDI R30 , BYTE4 ( 0x12D )
0008d0 079e     +CPC R25 , R30
                 	__CPD2N 0x12D
0008d1 f030      	BRLO _0x20081
                 ; 0001 01AB boiler.start_stage = stage_blowing_test_on_pre_check;
0008d2 e0e2      	LDI  R30,LOW(2)
                +
0008d3 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
                 ; 0001 01AC Ventilaytor_ON;
0008d5 9a93      	SBI  0x12,3
                 ; 0001 01AD boiler.time_of_last_stage = GetTick_ms();
0008d6 940e 22d6 	CALL SUBOPT_0x10
                 ; 0001 01AE }
                 ; 0001 01AF break;
                 _0x20081:
0008d8 c037      	RJMP _0x2007E
                 ; 0001 01B0 case stage_blowing_test_on_pre_check:
                 _0x20080:
0008d9 30e2      	CPI  R30,LOW(0x2)
0008da e0a0      	LDI  R26,HIGH(0x2)
0008db 07fa      	CPC  R31,R26
0008dc f471      	BRNE _0x20082
                 ; 0001 01B1 if(GetTick_ms() - boiler.time_of_last_stage > 5000){
0008dd 940e 22d9 	CALL SUBOPT_0x11
                +
0008df 38a9     +CPI R26 , LOW ( 0x1389 )
0008e0 e1e3     +LDI R30 , HIGH ( 0x1389 )
0008e1 07be     +CPC R27 , R30
0008e2 e0e0     +LDI R30 , BYTE3 ( 0x1389 )
0008e3 078e     +CPC R24 , R30
0008e4 e0e0     +LDI R30 , BYTE4 ( 0x1389 )
0008e5 079e     +CPC R25 , R30
                 	__CPD2N 0x1389
0008e6 f018      	BRLO _0x20083
                 ; 0001 01B2 boiler.start_stage = stage_blowing;
0008e7 e0e3      	LDI  R30,LOW(3)
0008e8 940e 22f0 	CALL SUBOPT_0x13
                 ; 0001 01B3 boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 01B4 }
                 ; 0001 01B5 break;
                 _0x20083:
0008ea c025      	RJMP _0x2007E
                 ; 0001 01B6 case stage_blowing:
                 _0x20082:
0008eb 30e3      	CPI  R30,LOW(0x3)
0008ec e0a0      	LDI  R26,HIGH(0x3)
0008ed 07fa      	CPC  R31,R26
0008ee f459      	BRNE _0x20084
                 ; 0001 01B7 if(GetTick_ms() - boiler.time_of_last_stage > 20000){
0008ef 940e 22d9 	CALL SUBOPT_0x11
0008f1 940e 22e8 	CALL SUBOPT_0x12
0008f3 f028      	BRLO _0x20085
                 ; 0001 01B8 TransRozgiga_ON;
0008f4 9a92      	SBI  0x12,2
                 ; 0001 01B9 Klapan1_ON;
0008f5 9a96      	SBI  0x12,6
                 ; 0001 01BA boiler.start_stage = stage_transformer_on;
0008f6 e0e4      	LDI  R30,LOW(4)
0008f7 940e 22f0 	CALL SUBOPT_0x13
                 ; 0001 01BB boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 01BC }
                 ; 0001 01BD break;
                 _0x20085:
0008f9 c016      	RJMP _0x2007E
                 ; 0001 01BE case stage_transformer_on:
                 _0x20084:
0008fa 30e4      	CPI  R30,LOW(0x4)
0008fb e0a0      	LDI  R26,HIGH(0x4)
0008fc 07fa      	CPC  R31,R26
0008fd f491      	BRNE _0x2007E
                 ; 0001 01BF if(GetTick_ms() - boiler.time_of_last_stage < 3000){
0008fe 940e 22d9 	CALL SUBOPT_0x11
000900 940e 22f3 	CALL SUBOPT_0x14
000902 f450      	BRSH _0x20087
                 ; 0001 01C0 #if ERRORS_ACTIVE
                 ; 0001 01C1 if(!clapan_out()){
000903 9906      	SBIC 0x0,6
000904 c003      	RJMP _0x20088
                 ; 0001 01C2 boiler.error = error_AirDetectorWork;
000905 e0e8      	LDI  R30,LOW(8)
                +
000906 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 01C3 }
                 ; 0001 01C4 if(Ion_out){
                 _0x20088:
000908 9904      	SBIC 0x0,4
000909 c002      	RJMP _0x20089
                 ; 0001 01C5 #endif
                 ; 0001 01C6 TransRozgiga_OFF;
00090a 940e 22fb 	CALL SUBOPT_0x15
                 ; 0001 01C7 boiler.start_stage = stage_none;
                 ; 0001 01C8 boiler.state = boiler_work_heating;
                 ; 0001 01C9 boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 01CA #if ERRORS_ACTIVE
                 ; 0001 01CB }
                 ; 0001 01CC #endif
                 ; 0001 01CD }
                 _0x20089:
                 ; 0001 01CE else{
00090c c003      	RJMP _0x2008A
                 _0x20087:
                 ; 0001 01CF boiler.error = error_IonWork;
00090d e0e6      	LDI  R30,LOW(6)
                +
00090e 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 01D0 }
                 _0x2008A:
                 ; 0001 01D1 break;
                 ; 0001 01D2 }
                 _0x2007E:
                 ; 0001 01D3 break;
000910 c00a      	RJMP _0x2006E
                 ; 0001 01D4 
                 ; 0001 01D5 case role_UK_303:
                 _0x2007B:
000911 30e3      	CPI  R30,LOW(0x3)
000912 e0a0      	LDI  R26,HIGH(0x3)
000913 07fa      	CPC  R31,R26
000914 f431      	BRNE _0x2008B
                 ; 0001 01D6 Klapan2_ON;
000915 9a97      	SBI  0x12,7
                 ; 0001 01D7 boiler.time_of_last_stage = GetTick_ms();
000916 940e 22d6 	CALL SUBOPT_0x10
                 ; 0001 01D8 boiler.state = boiler_work_heating;
000918 e0e2      	LDI  R30,LOW(2)
                +
000919 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 01D9 break;
                 ; 0001 01DA 
                 ; 0001 01DB case role_LAN_master:
                 _0x2008B:
                 ; 0001 01DC 
                 ; 0001 01DD break;
                 ; 0001 01DE 
                 ; 0001 01DF case role_LAN_slave1:
                 ; 0001 01E0 
                 ; 0001 01E1 break;
                 ; 0001 01E2 
                 ; 0001 01E3 case role_LAN_slave2:
                 ; 0001 01E4 
                 ; 0001 01E5 break;
                 ; 0001 01E6 }
                 _0x2006E:
                 ; 0001 01E7 
                 ; 0001 01E8 
                 ; 0001 01E9 }
                 ; 0001 01EA else{
00091b c003      	RJMP _0x2008F
                 _0x2006B:
                 ; 0001 01EB boiler.state = boiler_work_cooling;
00091c e0e5      	LDI  R30,LOW(5)
                +
00091d 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 01EC }
                 _0x2008F:
                 ; 0001 01ED 
                 ; 0001 01EE }
                 ; 0001 01EF else{
00091f c003      	RJMP _0x20090
                 _0x2006A:
                 ; 0001 01F0 //all off
                 ; 0001 01F1 boiler.state = boiler_idle;
000920 e0e0      	LDI  R30,LOW(0)
                +
000921 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 01F2 }
                 _0x20090:
                 ; 0001 01F3 break;
000923 c0a3      	RJMP _0x20063
                 ; 0001 01F4 
                 ; 0001 01F5 case boiler_work_heating:
                 _0x20069:
000924 30e2      	CPI  R30,LOW(0x2)
000925 e0a0      	LDI  R26,HIGH(0x2)
000926 07fa      	CPC  R31,R26
000927 f009      	BREQ PC+2
000928 c049      	RJMP _0x20091
                 ; 0001 01F6 PRINT("boiler_work_heating...\r\n");
                 ; 0001 01F7 switch (boiler.role){
000929 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 01F8 case role_not_selected:
00092b f021      	BREQ _0x20096
                 ; 0001 01F9 case role_UK_103:
00092c 30e1      	CPI  R30,LOW(0x1)
00092d e0a0      	LDI  R26,HIGH(0x1)
00092e 07fa      	CPC  R31,R26
00092f f409      	BRNE _0x20097
                 _0x20096:
                 ; 0001 01FA case role_UK_203:
000930 c004      	RJMP _0x20098
                 _0x20097:
000931 30e2      	CPI  R30,LOW(0x2)
000932 e0a0      	LDI  R26,HIGH(0x2)
000933 07fa      	CPC  R31,R26
000934 f409      	BRNE _0x20099
                 _0x20098:
                 ; 0001 01FB case role_LAN_master:
000935 c004      	RJMP _0x2009A
                 _0x20099:
000936 30e4      	CPI  R30,LOW(0x4)
000937 e0a0      	LDI  R26,HIGH(0x4)
000938 07fa      	CPC  R31,R26
000939 f409      	BRNE _0x2009B
                 _0x2009A:
                 ; 0001 01FC case role_LAN_slave1:
00093a c004      	RJMP _0x2009C
                 _0x2009B:
00093b 30e5      	CPI  R30,LOW(0x5)
00093c e0a0      	LDI  R26,HIGH(0x5)
00093d 07fa      	CPC  R31,R26
00093e f409      	BRNE _0x2009D
                 _0x2009C:
                 ; 0001 01FD case role_LAN_slave2:
00093f c004      	RJMP _0x2009E
                 _0x2009D:
000940 30e6      	CPI  R30,LOW(0x6)
000941 e0a0      	LDI  R26,HIGH(0x6)
000942 07fa      	CPC  R31,R26
000943 f4b9      	BRNE _0x2009F
                 _0x2009E:
                 ; 0001 01FE if(boiler.command == boiler_work_heating){
                +
000944 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
000946 30a2      	CPI  R26,LOW(0x2)
000947 f469      	BRNE _0x200A0
                 ; 0001 01FF if(boiler.water_temp < boiler.water_goal_temp){
000948 940e 22b0 	CALL SUBOPT_0xA
00094a 940e 22c3 	CALL SUBOPT_0xD
00094c 940e 22cf 	CALL SUBOPT_0xF
00094e f028      	BRLO _0x200A2
                 ; 0001 0200 }
                 ; 0001 0201 else{
                 ; 0001 0202 boiler.state = bolier_work_blowing_precheck;
00094f e0e3      	LDI  R30,LOW(3)
000950 940e 2303 	CALL SUBOPT_0x16
                 ; 0001 0203 boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 0204 oneminute_counter = 0;
000952 940e 2306 	CALL SUBOPT_0x17
                 ; 0001 0205 }
                 _0x200A2:
                 ; 0001 0206 }
                 ; 0001 0207 else{
000954 c005      	RJMP _0x200A3
                 _0x200A0:
                 ; 0001 0208 //all off
                 ; 0001 0209 boiler.state = bolier_work_blowing_precheck;
000955 e0e3      	LDI  R30,LOW(3)
000956 940e 2303 	CALL SUBOPT_0x16
                 ; 0001 020A boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 020B oneminute_counter = 0;
000958 940e 2306 	CALL SUBOPT_0x17
                 ; 0001 020C }
                 _0x200A3:
                 ; 0001 020D 
                 ; 0001 020E break;
00095a c016      	RJMP _0x20094
                 ; 0001 020F case role_UK_303:
                 _0x2009F:
00095b 30e3      	CPI  R30,LOW(0x3)
00095c e0a0      	LDI  R26,HIGH(0x3)
00095d 07fa      	CPC  R31,R26
00095e f491      	BRNE _0x20094
                 ; 0001 0210 if(boiler.command == boiler_work_heating){
                +
00095f 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
000961 30a2      	CPI  R26,LOW(0x2)
000962 f459      	BRNE _0x200A5
                 ; 0001 0211 if(boiler.water_temp < boiler.water_goal_temp){
000963 940e 22b0 	CALL SUBOPT_0xA
000965 940e 22c3 	CALL SUBOPT_0xD
000967 940e 22cf 	CALL SUBOPT_0xF
000969 f018      	BRLO _0x200A7
                 ; 0001 0212 }
                 ; 0001 0213 else{
                 ; 0001 0214 boiler.state = boiler_work_cooling;
00096a e0e5      	LDI  R30,LOW(5)
                +
00096b 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0215 }
                 _0x200A7:
                 ; 0001 0216 }
                 ; 0001 0217 else{
00096d c003      	RJMP _0x200A8
                 _0x200A5:
                 ; 0001 0218 //all off
                 ; 0001 0219 boiler.state = boiler_idle;
00096e e0e0      	LDI  R30,LOW(0)
                +
00096f 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 021A }
                 _0x200A8:
                 ; 0001 021B break;
                 ; 0001 021C }
                 _0x20094:
                 ; 0001 021D break;
000971 c055      	RJMP _0x20063
                 ; 0001 021E 
                 ; 0001 021F case bolier_work_blowing_precheck:
                 _0x20091:
000972 30e3      	CPI  R30,LOW(0x3)
000973 e0a0      	LDI  R26,HIGH(0x3)
000974 07fa      	CPC  R31,R26
000975 f531      	BRNE _0x200A9
                 ; 0001 0220 switch (boiler.role){
000976 940e 22b9 	CALL SUBOPT_0xB
                 ; 0001 0221 case role_not_selected:
000978 f021      	BREQ _0x200AE
                 ; 0001 0222 case role_UK_103:
000979 30e1      	CPI  R30,LOW(0x1)
00097a e0a0      	LDI  R26,HIGH(0x1)
00097b 07fa      	CPC  R31,R26
00097c f409      	BRNE _0x200AF
                 _0x200AE:
                 ; 0001 0223 case role_UK_203:
00097d c004      	RJMP _0x200B0
                 _0x200AF:
00097e 30e2      	CPI  R30,LOW(0x2)
00097f e0a0      	LDI  R26,HIGH(0x2)
000980 07fa      	CPC  R31,R26
000981 f409      	BRNE _0x200B1
                 _0x200B0:
                 ; 0001 0224 case role_LAN_master:
000982 c004      	RJMP _0x200B2
                 _0x200B1:
000983 30e4      	CPI  R30,LOW(0x4)
000984 e0a0      	LDI  R26,HIGH(0x4)
000985 07fa      	CPC  R31,R26
000986 f409      	BRNE _0x200B3
                 _0x200B2:
                 ; 0001 0225 case role_LAN_slave1:
000987 c004      	RJMP _0x200B4
                 _0x200B3:
000988 30e5      	CPI  R30,LOW(0x5)
000989 e0a0      	LDI  R26,HIGH(0x5)
00098a 07fa      	CPC  R31,R26
00098b f409      	BRNE _0x200B5
                 _0x200B4:
                 ; 0001 0226 case role_LAN_slave2:
00098c c004      	RJMP _0x200B6
                 _0x200B5:
00098d 30e6      	CPI  R30,LOW(0x6)
00098e e0a0      	LDI  R26,HIGH(0x6)
00098f 07fa      	CPC  R31,R26
000990 f451      	BRNE _0x200B7
                 _0x200B6:
                 ; 0001 0227 TransRozgiga_OFF;
000991 940e 2310 	CALL SUBOPT_0x18
                 ; 0001 0228 Topl_Nasos_OFF;
                 ; 0001 0229 Klapan1_OFF;
                 ; 0001 022A Klapan2_OFF;
                 ; 0001 022B if(GetTick_ms() - boiler.time_of_last_stage > 3000){
000993 940e 2315 	CALL SUBOPT_0x19
000995 f028      	BRLO _0x200B8
                 ; 0001 022C boiler.state = boiler_work_blowing_after_heating;
000996 e0e4      	LDI  R30,LOW(4)
000997 940e 2303 	CALL SUBOPT_0x16
                 ; 0001 022D boiler.time_of_last_stage = GetTick_ms();
                 ; 0001 022E oneminute_counter = 0;
000999 940e 2306 	CALL SUBOPT_0x17
                 ; 0001 022F }
                 ; 0001 0230 break;
                 _0x200B8:
                 ; 0001 0231 case role_UK_303:
                 _0x200B7:
                 ; 0001 0232 break;
                 ; 0001 0233 }
                 ; 0001 0234 break;
00099b c02b      	RJMP _0x20063
                 ; 0001 0235 break;
                 ; 0001 0236 
                 ; 0001 0237 case boiler_work_blowing_after_heating:
                 _0x200A9:
00099c 30e4      	CPI  R30,LOW(0x4)
00099d e0a0      	LDI  R26,HIGH(0x4)
00099e 07fa      	CPC  R31,R26
00099f f481      	BRNE _0x200BA
                 ; 0001 0238 
                 ; 0001 0239 //this stage does not react to command, leaving the rest to boiler_work_cooling  ...
                 ; 0001 023A TransRozgiga_OFF;
0009a0 940e 2310 	CALL SUBOPT_0x18
                 ; 0001 023B Topl_Nasos_OFF;
                 ; 0001 023C Klapan1_OFF;
                 ; 0001 023D Klapan2_OFF;
                 ; 0001 023E if(GetTick_ms() - boiler.time_of_last_stage > 60000){//limitations of 16bit max
                +
0009a2 36a1     +CPI R26 , LOW ( 0xEA61 )
0009a3 eeea     +LDI R30 , HIGH ( 0xEA61 )
0009a4 07be     +CPC R27 , R30
0009a5 e0e0     +LDI R30 , BYTE3 ( 0xEA61 )
0009a6 078e     +CPC R24 , R30
0009a7 e0e0     +LDI R30 , BYTE4 ( 0xEA61 )
0009a8 079e     +CPC R25 , R30
                 	__CPD2N 0xEA61
0009a9 f028      	BRLO _0x200BB
                 ; 0001 023F boiler.time_of_last_stage = GetTick_ms();
0009aa 940e 22d6 	CALL SUBOPT_0x10
                 ; 0001 0240 //oneminute_counter++;
                 ; 0001 0241 //if(oneminute_counter == 3){//3*20000ms=60 sec
                 ; 0001 0242 boiler.state = boiler_work_cooling;//will turn off completely on the next round
0009ac e0e5      	LDI  R30,LOW(5)
                +
0009ad 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0243 //    oneminute_counter = 0;
                 ; 0001 0244 //}
                 ; 0001 0245 }
                 ; 0001 0246 break;
                 _0x200BB:
0009af c017      	RJMP _0x20063
                 ; 0001 0247 
                 ; 0001 0248 case boiler_work_cooling:
                 _0x200BA:
0009b0 30e5      	CPI  R30,LOW(0x5)
0009b1 e0a0      	LDI  R26,HIGH(0x5)
0009b2 07fa      	CPC  R31,R26
0009b3 f499      	BRNE _0x20063
                 ; 0001 0249 turnAllOff();
0009b4 dd4b      	RCALL _turnAllOff
                 ; 0001 024A if(boiler.command == boiler_work_heating){
                +
0009b5 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
0009b7 30a2      	CPI  R26,LOW(0x2)
0009b8 f459      	BRNE _0x200BD
                 ; 0001 024B if(boiler.water_temp < boiler.water_goal_temp - boiler.gisteresis){
0009b9 940e 22c3 	CALL SUBOPT_0xD
0009bb 940e 22c8 	CALL SUBOPT_0xE
0009bd 940e 22cf 	CALL SUBOPT_0xF
0009bf f418      	BRSH _0x200BE
                 ; 0001 024C boiler.state = boiler_start_sequence;
0009c0 e0e1      	LDI  R30,LOW(1)
                +
0009c1 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 024D }
                 ; 0001 024E else{
                 _0x200BE:
                 ; 0001 024F //all off
                 ; 0001 0250 }
                 ; 0001 0251 }
                 ; 0001 0252 else{
0009c3 c003      	RJMP _0x200C0
                 _0x200BD:
                 ; 0001 0253 //all off
                 ; 0001 0254 boiler.state = boiler_idle;
0009c4 e0e0      	LDI  R30,LOW(0)
                +
0009c5 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
                 ; 0001 0255 }
                 _0x200C0:
                 ; 0001 0256 break;
                 ; 0001 0257 }
                 _0x20063:
                 ; 0001 0258 PRINT("error = %s\r\n", errors_str[boiler.error]);
                 ; 0001 0259 PRINT("<<<boiler_update()\r\n");
                 ; 0001 025A }
0009c7 9508      	RET
                 ; .FEND
                 ;void boiler_start(void){
                 ; 0001 025C void boiler_start(void){
                 _boiler_start:
                 ; .FSTART _boiler_start
                 ; 0001 025D if(boiler.state == boiler_idle){
                +
0009c8 91e0 078e+LDS R30 , _boiler + ( 55 )
                 	__GETB1MN _boiler,55
0009ca 30e0      	CPI  R30,0
0009cb f419      	BRNE _0x200C1
                 ; 0001 025E boiler.error =  error_None;
0009cc e0e0      	LDI  R30,LOW(0)
                +
0009cd 93e0 0792+STS _boiler + ( 59 ) , R30
                 	__PUTB1MN _boiler,59
                 ; 0001 025F }
                 ; 0001 0260 boiler.command = boiler_work_heating;
                 _0x200C1:
0009cf e0e2      	LDI  R30,LOW(2)
0009d0 c001      	RJMP _0x214001C
                 ; 0001 0261 }
                 ; .FEND
                 ;void boiler_stop(void){
                 ; 0001 0263 void boiler_stop(void){
                 _boiler_stop:
                 ; .FSTART _boiler_stop
                 ; 0001 0264 boiler.command = boiler_idle;
0009d1 e0e0      	LDI  R30,LOW(0)
                 _0x214001C:
                +
0009d2 93e0 078f+STS _boiler + ( 56 ) , R30
                 	__PUTB1MN _boiler,56
                 ; 0001 0265 }
0009d4 9508      	RET
                 ; .FEND
                 ;void boiler_toggle(void){
                 ; 0001 0267 void boiler_toggle(void){
                 _boiler_toggle:
                 ; .FSTART _boiler_toggle
                 ; 0001 0268 if(boiler.command == boiler_idle){
                +
0009d5 91e0 078f+LDS R30 , _boiler + ( 56 )
                 	__GETB1MN _boiler,56
0009d7 30e0      	CPI  R30,0
0009d8 f411      	BRNE _0x200C2
                 ; 0001 0269 boiler_start();
0009d9 dfee      	RCALL _boiler_start
                 ; 0001 026A }
                 ; 0001 026B else{
0009da c001      	RJMP _0x200C3
                 _0x200C2:
                 ; 0001 026C boiler_stop();
0009db dff5      	RCALL _boiler_stop
                 ; 0001 026D }
                 _0x200C3:
                 ; 0001 026E }
0009dc 9508      	RET
                 ; .FEND
                 ;void boiler_update_nvm(void){
                 ; 0001 0270 void boiler_update_nvm(void){
                 _boiler_update_nvm:
                 ; .FSTART _boiler_update_nvm
                 ; 0001 0271 //PRINT("===>>>boiler_update_nvm\r\n");
                 ; 0001 0272 if( (boiler.command         != nvm_cache.command         )||
                 ; 0001 0273 (boiler.water_goal_temp != nvm_cache.water_goal_temp )||
                 ; 0001 0274 (boiler.gisteresis      != nvm_cache.gisteresis      )||
                 ; 0001 0275 (boiler.weather         != nvm_cache.weather         )||
                 ; 0001 0276 (boiler.role            != nvm_cache.role            )){
                +
0009dd 91a0 078f+LDS R26 , _boiler + ( 56 )
                 	__GETB2MN _boiler,56
                +
0009df 91e0 07c1+LDS R30 , _nvm_cache + ( 10 )
                 	__GETB1MN _nvm_cache,10
0009e1 17ea      	CP   R30,R26
0009e2 f511      	BRNE _0x200C5
                +
0009e3 91a0 0783+LDS R26 , _boiler + ( 44 )
0009e5 91b0 0784+LDS R27 , _boiler + ( 44 ) + 1
                 	__GETW2MN _boiler,44
0009e7 91e0 07b7 	LDS  R30,_nvm_cache
0009e9 91f0 07b8 	LDS  R31,_nvm_cache+1
0009eb 17ea      	CP   R30,R26
0009ec 07fb      	CPC  R31,R27
0009ed f4b9      	BRNE _0x200C5
                +
0009ee 91a0 0781+LDS R26 , _boiler + ( 42 )
0009f0 91b0 0782+LDS R27 , _boiler + ( 42 ) + 1
                 	__GETW2MN _boiler,42
                +
0009f2 91e0 07b9+LDS R30 , _nvm_cache + ( 2 )
0009f4 91f0 07ba+LDS R31 , _nvm_cache + ( 2 ) + 1
                 	__GETW1MN _nvm_cache,2
0009f6 17ea      	CP   R30,R26
0009f7 07fb      	CPC  R31,R27
0009f8 f461      	BRNE _0x200C5
                +
0009f9 91a0 078d+LDS R26 , _boiler + ( 54 )
                 	__GETB2MN _boiler,54
                +
0009fb 91e0 07bf+LDS R30 , _nvm_cache + ( 8 )
                 	__GETB1MN _nvm_cache,8
0009fd 17ea      	CP   R30,R26
0009fe f431      	BRNE _0x200C5
                +
0009ff 91a0 0790+LDS R26 , _boiler + ( 57 )
                 	__GETB2MN _boiler,57
                +
000a01 91e0 07c0+LDS R30 , _nvm_cache + ( 9 )
                 	__GETB1MN _nvm_cache,9
000a03 17ea      	CP   R30,R26
000a04 f0f1      	BREQ _0x200C4
                 _0x200C5:
                 ; 0001 0277 //PRINT("=======WRITING EEPROM!!!=========\r\n");
                 ; 0001 0278 nvm_cache.command         = boiler.command         ;
                +
000a05 91e0 078f+LDS R30 , _boiler + ( 56 )
                 	__GETB1MN _boiler,56
                +
000a07 93e0 07c1+STS _nvm_cache + ( 10 ) , R30
                 	__PUTB1MN _nvm_cache,10
                 ; 0001 0279 nvm_cache.water_goal_temp = boiler.water_goal_temp ;
000a09 940e 22c3 	CALL SUBOPT_0xD
000a0b 93e0 07b7 	STS  _nvm_cache,R30
000a0d 93f0 07b8 	STS  _nvm_cache+1,R31
                 ; 0001 027A nvm_cache.gisteresis      = boiler.gisteresis      ;
                +
000a0f 91e0 0781+LDS R30 , _boiler + ( 42 )
000a11 91f0 0782+LDS R31 , _boiler + ( 42 ) + 1
                 	__GETW1MN _boiler,42
                +
000a13 93e0 07b9+STS _nvm_cache + ( 2 ) , R30
000a15 93f0 07ba+STS _nvm_cache + ( 2 ) + 1 , R31
                 	__PUTW1MN _nvm_cache,2
                 ; 0001 027B nvm_cache.weather         = boiler.weather         ;
                +
000a17 91e0 078d+LDS R30 , _boiler + ( 54 )
                 	__GETB1MN _boiler,54
                +
000a19 93e0 07bf+STS _nvm_cache + ( 8 ) , R30
                 	__PUTB1MN _nvm_cache,8
                 ; 0001 027C nvm_cache.role            = boiler.role            ;
                +
000a1b 91e0 0790+LDS R30 , _boiler + ( 57 )
                 	__GETB1MN _boiler,57
                +
000a1d 93e0 07c0+STS _nvm_cache + ( 9 ) , R30
                 	__PUTB1MN _nvm_cache,9
                 ; 0001 027D eeprom_write_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
000a1f ebe7      	LDI  R30,LOW(_nvm_cache)
000a20 e0f7      	LDI  R31,HIGH(_nvm_cache)
000a21 940e 2280 	CALL SUBOPT_0x5
                 ; 0001 027E //delay_ms(1000);
                 ; 0001 027F }
                 ; 0001 0280 //PRINT("===<<<boiler_update_nvm\r\n");
                 ; 0001 0281 }
                 _0x200C4:
000a23 9508      	RET
                 ; .FEND
                 ;void boiler_update_pump(void){//circulyacionny nasos
                 ; 0001 0283 void boiler_update_pump(void){
                 _boiler_update_pump:
                 ; .FSTART _boiler_update_pump
                 ; 0001 0284 switch (boiler.weather){
                +
000a24 91e0 078d+LDS R30 , _boiler + ( 54 )
                 	__GETB1MN _boiler,54
000a26 e0f0      	LDI  R31,0
                 ; 0001 0285 case weather_none:
000a27 9730      	SBIW R30,0
000a28 f021      	BREQ _0x200CB
                 ; 0001 0286 case weather_summer:
000a29 30e2      	CPI  R30,LOW(0x2)
000a2a e0a0      	LDI  R26,HIGH(0x2)
000a2b 07fa      	CPC  R31,R26
000a2c f469      	BRNE _0x200CC
                 _0x200CB:
                 ; 0001 0287 if(boiler.error && (boiler.error != error_WaterLevel)){
                +
000a2d 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
000a2f 30e0      	CPI  R30,0
000a30 f021      	BREQ _0x200CE
                +
000a31 91a0 0792+LDS R26 , _boiler + ( 59 )
                 	__GETB2MN _boiler,59
000a33 30a1      	CPI  R26,LOW(0x1)
000a34 f409      	BRNE _0x200CF
                 _0x200CE:
000a35 c002      	RJMP _0x200CD
                 _0x200CF:
                 ; 0001 0288 Setevoi_nasos_ON;
000a36 9a95      	SBI  0x12,5
                 ; 0001 0289 }
                 ; 0001 028A else{
000a37 c001      	RJMP _0x200D0
                 _0x200CD:
                 ; 0001 028B Setevoi_nasos_OFF;
000a38 9895      	CBI  0x12,5
                 ; 0001 028C }
                 _0x200D0:
                 ; 0001 028D break;
000a39 c042      	RJMP _0x200C9
                 ; 0001 028E case weather_winter:
                 _0x200CC:
000a3a 30e1      	CPI  R30,LOW(0x1)
000a3b e0a0      	LDI  R26,HIGH(0x1)
000a3c 07fa      	CPC  R31,R26
000a3d f5f1      	BRNE _0x200C9
                 ; 0001 028F if(boiler.error){
                +
000a3e 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
000a40 30e0      	CPI  R30,0
000a41 f011      	BREQ _0x200D2
                 ; 0001 0290 Setevoi_nasos_ON;
000a42 9a95      	SBI  0x12,5
                 ; 0001 0291 }
                 ; 0001 0292 else{//handle temperature, gisteresis
000a43 c038      	RJMP _0x200D3
                 _0x200D2:
                 ; 0001 0293 int16_t pump_on_diff = (boiler.gisteresis > boiler.water_pump_on_temp) ? \
                 ; 0001 0294 boiler.gisteresis : boiler.water_pump_on_temp;
                 ; 0001 0295 if(boiler.water_temp > (boiler.water_goal_temp - \
                 ; 0001 0296 pump_on_diff)){
000a44 9722      	SBIW R28,2
                 ;	pump_on_diff -> Y+0
                +
000a45 91a0 0781+LDS R26 , _boiler + ( 42 )
000a47 91b0 0782+LDS R27 , _boiler + ( 42 ) + 1
                 	__GETW2MN _boiler,42
                +
000a49 91e0 0785+LDS R30 , _boiler + ( 46 )
000a4b 91f0 0786+LDS R31 , _boiler + ( 46 ) + 1
                 	__GETW1MN _boiler,46
000a4d 17ea      	CP   R30,R26
000a4e 07fb      	CPC  R31,R27
000a4f f42c      	BRGE _0x200D4
                +
000a50 91e0 0781+LDS R30 , _boiler + ( 42 )
000a52 91f0 0782+LDS R31 , _boiler + ( 42 ) + 1
                 	__GETW1MN _boiler,42
000a54 c004      	RJMP _0x200D5
                 _0x200D4:
                +
000a55 91e0 0785+LDS R30 , _boiler + ( 46 )
000a57 91f0 0786+LDS R31 , _boiler + ( 46 ) + 1
                 	__GETW1MN _boiler,46
                 _0x200D5:
000a59 83e8      	ST   Y,R30
000a5a 83f9      	STD  Y+1,R31
000a5b 940e 22c3 	CALL SUBOPT_0xD
000a5d 81a8      	LD   R26,Y
000a5e 81b9      	LDD  R27,Y+1
000a5f 1bea      	SUB  R30,R26
000a60 0bfb      	SBC  R31,R27
000a61 940e 22b0 	CALL SUBOPT_0xA
000a63 940e 22cf 	CALL SUBOPT_0xF
000a65 f009      	BREQ PC+2
000a66 f408      	BRCC PC+2
000a67 c001      	RJMP _0x200D7
                 ; 0001 0297 Setevoi_nasos_ON;
000a68 9a95      	SBI  0x12,5
                 ; 0001 0298 }
                 ; 0001 0299 if(boiler.water_temp < (boiler.water_goal_temp - \
                 ; 0001 029A pump_on_diff - \
                 ; 0001 029B boiler.water_pump_gist_temp)){
                 _0x200D7:
000a69 940e 22c3 	CALL SUBOPT_0xD
000a6b 81a8      	LD   R26,Y
000a6c 81b9      	LDD  R27,Y+1
000a6d 1bea      	SUB  R30,R26
000a6e 0bfb      	SBC  R31,R27
                +
000a6f 91a0 0787+LDS R26 , _boiler + ( 48 )
000a71 91b0 0788+LDS R27 , _boiler + ( 48 ) + 1
                 	__GETW2MN _boiler,48
000a73 1bea      	SUB  R30,R26
000a74 0bfb      	SBC  R31,R27
000a75 940e 22b0 	CALL SUBOPT_0xA
000a77 940e 22cf 	CALL SUBOPT_0xF
000a79 f408      	BRSH _0x200D8
                 ; 0001 029C Setevoi_nasos_OFF;
000a7a 9895      	CBI  0x12,5
                 ; 0001 029D }
                 ; 0001 029E }
                 _0x200D8:
000a7b 9622      	ADIW R28,2
                 _0x200D3:
                 ; 0001 029F break;
                 ; 0001 02A0 }
                 _0x200C9:
                 ; 0001 02A1 }
000a7c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;	flags -> R17
                 
                 	.DSEG
                 ; 0002 0046 {
                 
                 	.CSEG
                 ; 0002 0047 return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
                 ;	x -> Y+16
                 ;	in_min -> Y+12
                 ;	in_max -> Y+8
                 ;	out_min -> Y+4
                 ;	out_max -> Y+0
                 ; 0002 0048 }
                 ; 0002 004D {
                 _ADC_Init:
                 ; .FSTART _ADC_Init
                 ; 0002 004E ADCSRA |= (1<<ADEN)
                 ; 0002 004F |(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
000a7d b1e6      	IN   R30,0x6
000a7e 68e7      	ORI  R30,LOW(0x87)
000a7f b9e6      	OUT  0x6,R30
                 ; 0002 0050 }
000a80 9508      	RET
                 ; .FEND
                 ; 0002 0057 void GetDirect(void){
                 ; 0002 0058 ADMUX = 1;
                 ; 0002 0059 ADCSRA |= (1<<ADSC);
                 ; 0002 005A while((ADCSRA & (1<<ADSC)));
                 ; 0002 005B DirectADC = ADCW;
                 ; 0002 005C DirectVolt = boiler.K_adc * DirectADC;
                 ; 0002 005D // ADMUX &=~(1);
                 ; 0002 005E ADCSRA &=~(1<<ADSC);
                 ; 0002 005F }
                 ; 0002 0062 void GetRef(void){
                 _GetRef:
                 ; .FSTART _GetRef
                 ; 0002 0063 ADMUX = 0;
000a81 e0e0      	LDI  R30,LOW(0)
000a82 b9e7      	OUT  0x7,R30
                 ; 0002 0064 ADCSRA |= (1<<ADSC);
000a83 9a36      	SBI  0x6,6
                 ; 0002 0065 while((ADCSRA & (1<<ADSC)));
                 _0x40010:
000a84 9936      	SBIC 0x6,6
000a85 cffe      	RJMP _0x40010
                 ; 0002 0066 boiler.vref_adc = ADCW;
000a86 b1e4      	IN   R30,0x4
000a87 b1f5      	IN   R31,0x4+1
000a88 93e0 0757 	STS  _boiler,R30
000a8a 93f0 0758 	STS  _boiler+1,R31
                 ; 0002 0067 boiler.K_adc = 2.050 / boiler.vref_adc;
000a8c 940e 231d 	CALL SUBOPT_0x1A
                +
000a8e e3a3     +LDI R26 , LOW ( 0x40033333 )
000a8f e3b3     +LDI R27 , HIGH ( 0x40033333 )
000a90 e083     +LDI R24 , BYTE3 ( 0x40033333 )
000a91 e490     +LDI R25 , BYTE4 ( 0x40033333 )
                 	__GETD2N 0x40033333
000a92 940e 2293 	CALL SUBOPT_0x7
                 ; 0002 0068 boiler.vdd = boiler.K_adc *1023.0;
                +
000a94 91a0 077d+LDS R26 , _boiler + ( 38 )
000a96 91b0 077e+LDS R27 , _boiler + ( 38 ) + 1
000a98 9180 077f+LDS R24 , _boiler + ( 38 ) + 2
000a9a 9190 0780+LDS R25 , _boiler + ( 38 ) + 3
                 	__GETD2MN _boiler,38
                +
000a9c e0e0     +LDI R30 , LOW ( 0x447FC000 )
000a9d ecf0     +LDI R31 , HIGH ( 0x447FC000 )
000a9e e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
000a9f e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
000aa0 940e 29fc 	CALL __MULF12
000aa2 940e 228a 	CALL SUBOPT_0x6
                 ; 0002 0069 ADCSRA &=~(1<<ADSC);
000aa4 9836      	CBI  0x6,6
                 ; 0002 006A }
000aa5 9508      	RET
                 ; .FEND
                 ; 0002 006D float adc2voltageApprox(float vdd, uint16_t adc, float k1, float k2, float b1, float b2, float c){
                 _adc2voltageApprox:
                 ; .FSTART _adc2voltageApprox
                 ; 0002 006E return  vdd*(vdd*(k1*adc+k2)+b1*adc+b2) + c;
000aa6 940e 28ab 	CALL __PUTPARD2
000aa8 931a      	ST   -Y,R17
000aa9 930a      	ST   -Y,R16
                +
000aaa 890e     +LDD R16 , Y + 22
000aab 891f     +LDD R17 , Y + 22 + 1
                 	__GETWRS 16,17,22
                 ;	vdd -> Y+24
                 ;	adc -> R16,R17
                 ;	k1 -> Y+18
                 ;	k2 -> Y+14
                 ;	b1 -> Y+10
                 ;	b2 -> Y+6
                 ;	c -> Y+2
000aac 01f8      	MOVW R30,R16
                +
000aad 89aa     +LDD R26 , Y + 18
000aae 89bb     +LDD R27 , Y + 18 + 1
000aaf 898c     +LDD R24 , Y + 18 + 2
000ab0 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
000ab1 940e 231d 	CALL SUBOPT_0x1A
000ab3 940e 29fc 	CALL __MULF12
                +
000ab5 85ae     +LDD R26 , Y + 14
000ab6 85bf     +LDD R27 , Y + 14 + 1
000ab7 8988     +LDD R24 , Y + 14 + 2
000ab8 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
000ab9 940e 2322 	CALL SUBOPT_0x1B
000abb 937f      	PUSH R23
000abc 936f      	PUSH R22
000abd 93ff      	PUSH R31
000abe 93ef      	PUSH R30
000abf 01f8      	MOVW R30,R16
000ac0 940e 232b 	CALL SUBOPT_0x1C
000ac2 940e 231d 	CALL SUBOPT_0x1A
000ac4 940e 29fc 	CALL __MULF12
000ac6 91af      	POP  R26
000ac7 91bf      	POP  R27
000ac8 918f      	POP  R24
000ac9 919f      	POP  R25
000aca 940e 29ad 	CALL __ADDF12
000acc 940e 2330 	CALL SUBOPT_0x1D
000ace 940e 2322 	CALL SUBOPT_0x1B
                +
000ad0 81aa     +LDD R26 , Y + 2
000ad1 81bb     +LDD R27 , Y + 2 + 1
000ad2 818c     +LDD R24 , Y + 2 + 2
000ad3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ad4 940e 29ad 	CALL __ADDF12
000ad6 8119      	LDD  R17,Y+1
000ad7 8108      	LDD  R16,Y+0
000ad8 940c 0e43 	JMP  _0x214001A
                 ; 0002 006F }
                 ; .FEND
                 ; 0002 0072 {
                 _SendAirTemp:
                 ; .FSTART _SendAirTemp
                 ; 0002 0073 float logR;
                 ; 0002 0074 ADMUX = 1;
000ada 9724      	SBIW R28,4
                 ;	logR -> Y+0
000adb e0e1      	LDI  R30,LOW(1)
000adc b9e7      	OUT  0x7,R30
                 ; 0002 0075 ADCSRA |= (1<<ADSC);
000add 9a36      	SBI  0x6,6
                 ; 0002 0076 while((ADCSRA & (1<<ADSC)));
                 _0x40013:
000ade 9936      	SBIC 0x6,6
000adf cffe      	RJMP _0x40013
                 ; 0002 0077 boiler.air_temp_adc = ADCW;
000ae0 b1e4      	IN   R30,0x4
000ae1 b1f5      	IN   R31,0x4+1
                +
000ae2 93e0 0759+STS _boiler + ( 2 ) , R30
000ae4 93f0 075a+STS _boiler + ( 2 ) + 1 , R31
                 	__PUTW1MN _boiler,2
                 ; 0002 0078 boiler.air_voltage =adc2voltageApprox(boiler.vdd, boiler.air_temp_adc, air_k1, a ...
000ae6 940e 2335 	CALL SUBOPT_0x1E
                +
000ae8 91e0 0759+LDS R30 , _boiler + ( 2 )
000aea 91f0 075a+LDS R31 , _boiler + ( 2 ) + 1
                 	__GETW1MN _boiler,2
000aec 93fa      	ST   -Y,R31
000aed 93ea      	ST   -Y,R30
000aee 91e0 07c7 	LDS  R30,_air_k1
000af0 91f0 07c8 	LDS  R31,_air_k1+1
000af2 9160 07c9 	LDS  R22,_air_k1+2
000af4 9170 07ca 	LDS  R23,_air_k1+3
000af6 940e 28a6 	CALL __PUTPARD1
000af8 91e0 07cf 	LDS  R30,_air_k2
000afa 91f0 07d0 	LDS  R31,_air_k2+1
000afc 9160 07d1 	LDS  R22,_air_k2+2
000afe 9170 07d2 	LDS  R23,_air_k2+3
000b00 940e 28a6 	CALL __PUTPARD1
000b02 91e0 07cb 	LDS  R30,_air_b1
000b04 91f0 07cc 	LDS  R31,_air_b1+1
000b06 9160 07cd 	LDS  R22,_air_b1+2
000b08 9170 07ce 	LDS  R23,_air_b1+3
000b0a 940e 28a6 	CALL __PUTPARD1
000b0c 91e0 07d3 	LDS  R30,_air_b2
000b0e 91f0 07d4 	LDS  R31,_air_b2+1
000b10 9160 07d5 	LDS  R22,_air_b2+2
000b12 9170 07d6 	LDS  R23,_air_b2+3
000b14 940e 28a6 	CALL __PUTPARD1
000b16 91a0 07d7 	LDS  R26,_air_c
000b18 91b0 07d8 	LDS  R27,_air_c+1
000b1a 9180 07d9 	LDS  R24,_air_c+2
000b1c 9190 07da 	LDS  R25,_air_c+3
000b1e df87      	RCALL _adc2voltageApprox
                +
000b1f 93e0 0775+STS _boiler + ( 30 ) , R30
000b21 93f0 0776+STS _boiler + ( 30 ) + 1 , R31
000b23 9360 0777+STS _boiler + ( 30 ) + 2 , R22
000b25 9370 0778+STS _boiler + ( 30 ) + 3 , R23
                 	__PUTD1MN _boiler,30
                 ; 0002 0079 boiler.air_resistance = (R_S_air + R_GND_air)*( boiler.vdd / boiler.air_voltage  ...
000b27 940e 2340 	CALL SUBOPT_0x1F
                +
000b29 91e0 0775+LDS R30 , _boiler + ( 30 )
000b2b 91f0 0776+LDS R31 , _boiler + ( 30 ) + 1
000b2d 9160 0777+LDS R22 , _boiler + ( 30 ) + 2
000b2f 9170 0778+LDS R23 , _boiler + ( 30 ) + 3
                 	__GETD1MN _boiler,30
000b31 940e 2349 	CALL SUBOPT_0x20
                +
000b33 e8a0     +LDI R26 , LOW ( 0x49421780 )
000b34 e1b7     +LDI R27 , HIGH ( 0x49421780 )
000b35 e482     +LDI R24 , BYTE3 ( 0x49421780 )
000b36 e499     +LDI R25 , BYTE4 ( 0x49421780 )
                 	__GETD2N 0x49421780
000b37 940e 29fc 	CALL __MULF12
                +
000b39 93e0 076d+STS _boiler + ( 22 ) , R30
000b3b 93f0 076e+STS _boiler + ( 22 ) + 1 , R31
000b3d 9360 076f+STS _boiler + ( 22 ) + 2 , R22
000b3f 9370 0770+STS _boiler + ( 22 ) + 3 , R23
                 	__PUTD1MN _boiler,22
                 ; 0002 007A logR = log(boiler.air_resistance);
                +
000b41 91a0 076d+LDS R26 , _boiler + ( 22 )
000b43 91b0 076e+LDS R27 , _boiler + ( 22 ) + 1
000b45 9180 076f+LDS R24 , _boiler + ( 22 ) + 2
000b47 9190 0770+LDS R25 , _boiler + ( 22 ) + 3
                 	__GETD2MN _boiler,22
000b49 940e 2356 	CALL SUBOPT_0x21
                 ; 0002 007B boiler.air_temp = 1/(A_coef + logR*(B_coef+C_coef*logR*logR))+t_correction + T0K ...
                +
000b4b 93e0 0765+STS _boiler + ( 14 ) , R30
000b4d 93f0 0766+STS _boiler + ( 14 ) + 1 , R31
000b4f 9360 0767+STS _boiler + ( 14 ) + 2 , R22
000b51 9370 0768+STS _boiler + ( 14 ) + 3 , R23
                 	__PUTD1MN _boiler,14
                 ; 0002 007C ADCSRA &=~(1<<ADSC);
000b53 9836      	CBI  0x6,6
                 ; 0002 007D }
000b54 c103      	RJMP _0x214001B
                 ; .FEND
                 ; 0002 0083 {
                 _SendWaterTemp:
                 ; .FSTART _SendWaterTemp
                 ; 0002 0084 float logR;
                 ; 0002 0085 ADMUX = 2;
000b55 9724      	SBIW R28,4
                 ;	logR -> Y+0
000b56 e0e2      	LDI  R30,LOW(2)
000b57 b9e7      	OUT  0x7,R30
                 ; 0002 0086 ADCSRA |= (1<<ADSC);
000b58 9a36      	SBI  0x6,6
                 ; 0002 0087 while((ADCSRA & (1<<ADSC)));
                 _0x40016:
000b59 9936      	SBIC 0x6,6
000b5a cffe      	RJMP _0x40016
                 ; 0002 0088 boiler.water_temp_adc = ADCW;
000b5b b1e4      	IN   R30,0x4
000b5c b1f5      	IN   R31,0x4+1
                +
000b5d 93e0 075b+STS _boiler + ( 4 ) , R30
000b5f 93f0 075c+STS _boiler + ( 4 ) + 1 , R31
                 	__PUTW1MN _boiler,4
                 ; 0002 0089 boiler.water_voltage =adc2voltageApprox(boiler.vdd, boiler.water_temp_adc, water ...
000b61 940e 2335 	CALL SUBOPT_0x1E
                +
000b63 91e0 075b+LDS R30 , _boiler + ( 4 )
000b65 91f0 075c+LDS R31 , _boiler + ( 4 ) + 1
                 	__GETW1MN _boiler,4
000b67 93fa      	ST   -Y,R31
000b68 93ea      	ST   -Y,R30
000b69 91e0 07db 	LDS  R30,_water_k1
000b6b 91f0 07dc 	LDS  R31,_water_k1+1
000b6d 9160 07dd 	LDS  R22,_water_k1+2
000b6f 9170 07de 	LDS  R23,_water_k1+3
000b71 940e 28a6 	CALL __PUTPARD1
000b73 91e0 07e3 	LDS  R30,_water_k2
000b75 91f0 07e4 	LDS  R31,_water_k2+1
000b77 9160 07e5 	LDS  R22,_water_k2+2
000b79 9170 07e6 	LDS  R23,_water_k2+3
000b7b 940e 28a6 	CALL __PUTPARD1
000b7d 91e0 07df 	LDS  R30,_water_b1
000b7f 91f0 07e0 	LDS  R31,_water_b1+1
000b81 9160 07e1 	LDS  R22,_water_b1+2
000b83 9170 07e2 	LDS  R23,_water_b1+3
000b85 940e 28a6 	CALL __PUTPARD1
000b87 91e0 07e7 	LDS  R30,_water_b2
000b89 91f0 07e8 	LDS  R31,_water_b2+1
000b8b 9160 07e9 	LDS  R22,_water_b2+2
000b8d 9170 07ea 	LDS  R23,_water_b2+3
000b8f 940e 28a6 	CALL __PUTPARD1
000b91 91a0 07eb 	LDS  R26,_water_c
000b93 91b0 07ec 	LDS  R27,_water_c+1
000b95 9180 07ed 	LDS  R24,_water_c+2
000b97 9190 07ee 	LDS  R25,_water_c+3
000b99 df0c      	RCALL _adc2voltageApprox
                +
000b9a 93e0 0779+STS _boiler + ( 34 ) , R30
000b9c 93f0 077a+STS _boiler + ( 34 ) + 1 , R31
000b9e 9360 077b+STS _boiler + ( 34 ) + 2 , R22
000ba0 9370 077c+STS _boiler + ( 34 ) + 3 , R23
                 	__PUTD1MN _boiler,34
                 ; 0002 008A boiler.water_resistance = (R_S_water + R_GND_water)*( boiler.vdd / boiler.water_ ...
000ba2 940e 2340 	CALL SUBOPT_0x1F
                +
000ba4 91e0 0779+LDS R30 , _boiler + ( 34 )
000ba6 91f0 077a+LDS R31 , _boiler + ( 34 ) + 1
000ba8 9160 077b+LDS R22 , _boiler + ( 34 ) + 2
000baa 9170 077c+LDS R23 , _boiler + ( 34 ) + 3
                 	__GETD1MN _boiler,34
000bac 940e 2349 	CALL SUBOPT_0x20
                +
000bae e9a0     +LDI R26 , LOW ( 0x46C2A090 )
000baf eab0     +LDI R27 , HIGH ( 0x46C2A090 )
000bb0 ec82     +LDI R24 , BYTE3 ( 0x46C2A090 )
000bb1 e496     +LDI R25 , BYTE4 ( 0x46C2A090 )
                 	__GETD2N 0x46C2A090
000bb2 940e 29fc 	CALL __MULF12
                +
000bb4 93e0 0771+STS _boiler + ( 26 ) , R30
000bb6 93f0 0772+STS _boiler + ( 26 ) + 1 , R31
000bb8 9360 0773+STS _boiler + ( 26 ) + 2 , R22
000bba 9370 0774+STS _boiler + ( 26 ) + 3 , R23
                 	__PUTD1MN _boiler,26
                 ; 0002 008B logR = log(boiler.water_resistance);
                +
000bbc 91a0 0771+LDS R26 , _boiler + ( 26 )
000bbe 91b0 0772+LDS R27 , _boiler + ( 26 ) + 1
000bc0 9180 0773+LDS R24 , _boiler + ( 26 ) + 2
000bc2 9190 0774+LDS R25 , _boiler + ( 26 ) + 3
                 	__GETD2MN _boiler,26
000bc4 940e 2356 	CALL SUBOPT_0x21
                 ; 0002 008C boiler.water_temp = 1/(A_coef + logR*(B_coef+C_coef*logR*logR))+t_correction + T ...
                +
000bc6 93e0 0769+STS _boiler + ( 18 ) , R30
000bc8 93f0 076a+STS _boiler + ( 18 ) + 1 , R31
000bca 9360 076b+STS _boiler + ( 18 ) + 2 , R22
000bcc 9370 076c+STS _boiler + ( 18 ) + 3 , R23
                 	__PUTD1MN _boiler,18
                 ; 0002 008D ADCSRA &=~(1<<ADSC);
000bce 9836      	CBI  0x6,6
                 ; 0002 008E }
000bcf c088      	RJMP _0x214001B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ; 0004 000F void setActivePage(void* data, type_tip none){
                 
                 	.CSEG
                 _setActivePage:
                 ; .FSTART _setActivePage
                 ; 0004 0010 (void)none;
000bd0 940e 2387 	CALL SUBOPT_0x22
                 ;	*data -> R18,R19
                 ;	none -> R17
                 ; 0004 0011 activePage = (menuPage_t*)data;
000bd2 0139      	MOVW R6,R18
                 ; 0004 0012 activePage->selectedIndex = activePage->activeIndex;
000bd3 01d3      	MOVW R26,R6
000bd4 961a      	ADIW R26,10
000bd5 940e 287c 	CALL __GETD1P_INC
                +
000bd7 01d3     +MOVW R26 , R6
000bd8 9616     +ADIW R26 , 6
000bd9 940e 2881+CALL __PUTDP1
                 	__PUTD1RNS 6,6
                 ; 0004 0013 }
000bdb 940e 2788 	CALL __LOADLOCR4
000bdd 9626      	ADIW R28,6
000bde 9508      	RET
                 ; .FEND
                 ; 0004 0015 int str_length(char str[]) {
                 _str_length:
                 ; .FSTART _str_length
                 ; 0004 0016 int count;
                 ; 0004 0017 for (count = 0; str[count] != '\0'; ++count);
000bdf 940e 2781 	CALL __SAVELOCR4
000be1 019d      	MOVW R18,R26
                 ;	str -> R18,R19
                 ;	count -> R16,R17
                +
000be2 e000     +LDI R16 , LOW ( 0 )
000be3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x80004:
000be4 01f8      	MOVW R30,R16
000be5 0fe2      	ADD  R30,R18
000be6 1ff3      	ADC  R31,R19
000be7 81e0      	LD   R30,Z
000be8 30e0      	CPI  R30,0
000be9 f019      	BREQ _0x80005
                +
000bea 5f0f     +SUBI R16 , LOW ( - 1 )
000beb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bec cff7      	RJMP _0x80004
                 _0x80005:
                 ; 0004 0018 return count*6;
000bed 01f8      	MOVW R30,R16
000bee e0a6      	LDI  R26,LOW(6)
000bef e0b0      	LDI  R27,HIGH(6)
000bf0 940e 280c 	CALL __MULW12
000bf2 940e 2788 	CALL __LOADLOCR4
000bf4 c063      	RJMP _0x214001B
                 ; 0004 0019 }
                 ; .FEND
                 ; 0004 001B void dataAssign(entry_t *entry){
                 _dataAssign:
                 ; .FSTART _dataAssign
                 ; 0004 001C void* data = entry->data.v;
                 ; 0004 001D switch (entry->type){
000bf5 93ba      	ST   -Y,R27
000bf6 93aa      	ST   -Y,R26
000bf7 931a      	ST   -Y,R17
000bf8 930a      	ST   -Y,R16
                 ;	*entry -> Y+2
                 ;	*data -> R16,R17
000bf9 81aa      	LDD  R26,Y+2
000bfa 81bb      	LDD  R27,Y+2+1
000bfb 961a      	ADIW R26,10
000bfc 940e 2872 	CALL __GETW1P
000bfe 018f      	MOVW R16,R30
000bff 81ea      	LDD  R30,Y+2
000c00 81fb      	LDD  R31,Y+2+1
000c01 8de2      	LDD  R30,Z+26
000c02 e0f0      	LDI  R31,0
                 ; 0004 001E case void_e:
000c03 9730      	SBIW R30,0
000c04 f409      	BRNE _0x80009
                 ; 0004 001F break;
000c05 c050      	RJMP _0x80008
                 ; 0004 0020 case char_e:
                 _0x80009:
000c06 30e1      	CPI  R30,LOW(0x1)
000c07 e0a0      	LDI  R26,HIGH(0x1)
000c08 07fa      	CPC  R31,R26
000c09 f419      	BRNE _0x8000A
                 ; 0004 0021 entry->prev_data.ch = *((char*)data);
000c0a 940e 238d 	CALL SUBOPT_0x23
                 ; 0004 0022 break;
000c0c c049      	RJMP _0x80008
                 ; 0004 0023 case int8_t_e:
                 _0x8000A:
000c0d 30e2      	CPI  R30,LOW(0x2)
000c0e e0a0      	LDI  R26,HIGH(0x2)
000c0f 07fa      	CPC  R31,R26
000c10 f419      	BRNE _0x8000B
                 ; 0004 0024 entry->prev_data.i8 = *((int8_t*)data);
000c11 940e 238d 	CALL SUBOPT_0x23
                 ; 0004 0025 //glcd_printf(" %3d", *((int8_t*)data));
                 ; 0004 0026 break;
000c13 c042      	RJMP _0x80008
                 ; 0004 0027 case int16_t_e:
                 _0x8000B:
000c14 30e4      	CPI  R30,LOW(0x4)
000c15 e0a0      	LDI  R26,HIGH(0x4)
000c16 07fa      	CPC  R31,R26
000c17 f411      	BRNE _0x8000C
                 ; 0004 0028 entry->prev_data.i16 = *((int16_t*)data);
000c18 01d8      	MOVW R26,R16
000c19 c035      	RJMP _0x80095
                 ; 0004 0029 //glcd_printf(" %3d", *((int16_t*)data));
                 ; 0004 002A break;
                 ; 0004 002B case int32_t_e:
                 _0x8000C:
000c1a 30e6      	CPI  R30,LOW(0x6)
000c1b e0a0      	LDI  R26,HIGH(0x6)
000c1c 07fa      	CPC  R31,R26
000c1d f419      	BRNE _0x8000D
                 ; 0004 002C entry->prev_data.i32 = *((int32_t*)data);
000c1e 940e 2394 	CALL SUBOPT_0x24
                 ; 0004 002D //glcd_printf(" %3d", *((int32_t*)data));
                 ; 0004 002E break;
000c20 c035      	RJMP _0x80008
                 ; 0004 002F case uint8_t_e:
                 _0x8000D:
000c21 30e3      	CPI  R30,LOW(0x3)
000c22 e0a0      	LDI  R26,HIGH(0x3)
000c23 07fa      	CPC  R31,R26
000c24 f479      	BRNE _0x8000E
                 ; 0004 0030 if(entry->useStrStorage){
000c25 81ea      	LDD  R30,Y+2
000c26 81fb      	LDD  R31,Y+2+1
000c27 940e 239d 	CALL SUBOPT_0x25
000c29 f449      	BRNE _0x80010
                 ; 0004 0031 PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
                 ; 0004 0032 PRINT("pointer = %d\r\n", *(entry->data.u8));
                 ; 0004 0033 //entry->str_storage = entry->str_storage[*entry->data.u8];
                 ; 0004 0034 //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
                 ; 0004 0035 }
                 ; 0004 0036 else{
                 ; 0004 0037 entry->prev_data.u8 = *entry->data.u8;
000c2a 81ea      	LDD  R30,Y+2
000c2b 81fb      	LDD  R31,Y+2+1
000c2c 85a2      	LDD  R26,Z+10
000c2d 85b3      	LDD  R27,Z+11
000c2e 91ec      	LD   R30,X
                +
000c2f 81aa     +LDD R26 , Y + 2
000c30 81bb     +LDD R27 , Y + 2 + 1
000c31 961c     +ADIW R26 , 12
000c32 93ec     +ST X , R30
                 	__PUTB1SNS 2,12
                 ; 0004 0038 //glcd_printf(" %3d", *entry->data.u8);
                 ; 0004 0039 }
                 _0x80010:
                 ; 0004 003A break;
000c33 c022      	RJMP _0x80008
                 ; 0004 003B case uint16_t_e:
                 _0x8000E:
000c34 30e5      	CPI  R30,LOW(0x5)
000c35 e0a0      	LDI  R26,HIGH(0x5)
000c36 07fa      	CPC  R31,R26
000c37 f411      	BRNE _0x80011
                 ; 0004 003C entry->prev_data.u16 = *((uint16_t*)data);
000c38 01d8      	MOVW R26,R16
000c39 c015      	RJMP _0x80095
                 ; 0004 003D //glcd_printf(" %3d", *((uint16_t*)data));
                 ; 0004 003E break;
                 ; 0004 003F case uint32_t_e:
                 _0x80011:
000c3a 30e7      	CPI  R30,LOW(0x7)
000c3b e0a0      	LDI  R26,HIGH(0x7)
000c3c 07fa      	CPC  R31,R26
000c3d f419      	BRNE _0x80012
                 ; 0004 0040 entry->prev_data.u32 =*((uint32_t*)data);
000c3e 940e 2394 	CALL SUBOPT_0x24
                 ; 0004 0041 //glcd_printf(" %3d", *((uint32_t*)data));
                 ; 0004 0042 break;
000c40 c015      	RJMP _0x80008
                 ; 0004 0043 case float_e:
                 _0x80012:
000c41 30e8      	CPI  R30,LOW(0x8)
000c42 e0a0      	LDI  R26,HIGH(0x8)
000c43 07fa      	CPC  R31,R26
000c44 f419      	BRNE _0x80013
                 ; 0004 0044 entry->prev_data.f = *((float*)data);
000c45 940e 2394 	CALL SUBOPT_0x24
                 ; 0004 0045 // glcd_printf(" %3.0f", *((float*)data));
                 ; 0004 0046 break;
000c47 c00e      	RJMP _0x80008
                 ; 0004 0047 case str_e:
                 _0x80013:
000c48 30e9      	CPI  R30,LOW(0x9)
000c49 e0a0      	LDI  R26,HIGH(0x9)
000c4a 07fa      	CPC  R31,R26
000c4b f451      	BRNE _0x80008
                 ; 0004 0048 entry->prev_data.str =entry->data.str;
000c4c 81aa      	LDD  R26,Y+2
000c4d 81bb      	LDD  R27,Y+2+1
000c4e 961a      	ADIW R26,10
                 _0x80095:
000c4f 91ed      	LD   R30,X+
000c50 91fd      	LD   R31,X+
                +
000c51 81aa     +LDD R26 , Y + 2
000c52 81bb     +LDD R27 , Y + 2 + 1
000c53 961c     +ADIW R26 , 12
000c54 93ed     +ST X + , R30
000c55 93fc     +ST X , R31
                 	__PUTW1SNS 2,12
                 ; 0004 0049 //glcd_printf(" %s", entry->data.str);
                 ; 0004 004A break;
                 ; 0004 004B }
                 _0x80008:
                 ; 0004 004C }
000c56 8119      	LDD  R17,Y+1
000c57 8108      	LDD  R16,Y+0
                 _0x214001B:
000c58 9624      	ADIW R28,4
000c59 9508      	RET
                 ; .FEND
                 ; 0004 004E void renderMenu(void){
                 _renderMenu:
                 ; .FSTART _renderMenu
                 ; 0004 004F int i,x,y,py;
                 ; 0004 0050 static void* data;
                 ; 0004 0051 entry_t* entry;
                 ; 0004 0052 uint32_t  index_selected,index_1stline,index,data_index;
                 ; 0004 0053 static uint32_t prev_index = 1;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0004 0054 static uint32_t prev_index_1stline = 0;
                 ; 0004 0055 static menuPage_t* prev_activePage = 0;
                 ; 0004 0056 int fstline = 10;
                 ; 0004 0057 //clear
                 ; 0004 0058 PRINT(">>>renderMenu\r\n");
                 ; 0004 0059 if(!activePage){
000c5a 9766      	SBIW R28,22
000c5b e0ea      	LDI  R30,LOW(10)
000c5c 83e8      	ST   Y,R30
000c5d e0e0      	LDI  R30,LOW(0)
000c5e 83e9      	STD  Y+1,R30
000c5f 940e 277f 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	x -> R18,R19
                 ;	y -> R20,R21
                 ;	py -> Y+26
                 ;	*entry -> Y+24
                 ;	index_selected -> Y+20
                 ;	index_1stline -> Y+16
                 ;	index -> Y+12
                 ;	data_index -> Y+8
                 ;	fstline -> Y+6
000c61 2c06      	MOV  R0,R6
000c62 2807      	OR   R0,R7
000c63 f409      	BRNE _0x80016
                 ; 0004 005A PRINT("empty page!\r\n");
                 ; 0004 005B PRINT("<<<renderMenu\r\n");
                 ; 0004 005C return;
000c64 c1dc      	RJMP _0x2140019
                 ; 0004 005D }
                 ; 0004 005E 
                 ; 0004 005F //1st line
                 ; 0004 0060 
                 ; 0004 0061 index_1stline = (activePage->selectedIndex / MENU_LINES) * MENU_LINES;
                 _0x80016:
000c65 940e 23a2 	CALL SUBOPT_0x26
000c67 940e 2824 	CALL __DIVD21U
                +
000c69 e0a3     +LDI R26 , LOW ( 0x3 )
000c6a e0b0     +LDI R27 , HIGH ( 0x3 )
000c6b e080     +LDI R24 , BYTE3 ( 0x3 )
000c6c e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
000c6d 940e 27e6 	CALL __MULD12U
000c6f 940e 23ac 	CALL SUBOPT_0x27
                 ; 0004 0062 
                 ; 0004 0063 if(index_1stline != prev_index_1stline || prev_activePage != activePage){
000c71 940e 23b1 	CALL SUBOPT_0x28
000c73 f421      	BRNE _0x80018
000c74 940e 23c0 	CALL SUBOPT_0x29
000c76 f409      	BRNE _0x80018
000c77 c0bd      	RJMP _0x80017
                 _0x80018:
                 ; 0004 0064 glcd_setfillcolor(0);
000c78 e0e0      	LDI  R30,LOW(0)
                +
000c79 93e0 06fb+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                 ; 0004 0065 glcd_fillrectround(0,fstline,128,LINE_HEIGHT*MENU_LINES,0);
000c7b 93ea      	ST   -Y,R30
000c7c 81ef      	LDD  R30,Y+7
000c7d 93ea      	ST   -Y,R30
000c7e e8e0      	LDI  R30,LOW(128)
000c7f 93ea      	ST   -Y,R30
000c80 e1e8      	LDI  R30,LOW(24)
000c81 93ea      	ST   -Y,R30
000c82 e0a0      	LDI  R26,LOW(0)
000c83 940e 19a4 	CALL _glcd_fillrectround
                 ; 0004 0066 for(i = 0; i < MENU_LINES; i++){
                +
000c85 e000     +LDI R16 , LOW ( 0 )
000c86 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x8001B:
                +
000c87 3003     +CPI R16 , LOW ( 3 )
000c88 e0e0     +LDI R30 , HIGH ( 3 )
000c89 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
000c8a f00c      	BRLT PC+2
000c8b c0a5      	RJMP _0x8001C
                 ; 0004 0067 y=i*LINE_HEIGHT + fstline;
000c8c 01f8      	MOVW R30,R16
000c8d 940e 27c2 	CALL __LSLW3
000c8f 940e 23c7 	CALL SUBOPT_0x2A
                 ; 0004 0068 index = index_1stline + i;
000c91 01f8      	MOVW R30,R16
000c92 940e 23cd 	CALL SUBOPT_0x2B
000c94 940e 27d4 	CALL __CWD1
000c96 940e 2795 	CALL __ADDD12
000c98 940e 23d2 	CALL SUBOPT_0x2C
                 ; 0004 0069 entry = &activePage->entries[index];
000c9a 940e 23d7 	CALL SUBOPT_0x2D
000c9c 0fe6      	ADD  R30,R22
000c9d 1ff7      	ADC  R31,R23
000c9e 8fe8      	STD  Y+24,R30
000c9f 8ff9      	STD  Y+24+1,R31
                 ; 0004 006A if(index_1stline != prev_index_1stline || prev_activePage != activePage){
000ca0 940e 23b1 	CALL SUBOPT_0x28
000ca2 f419      	BRNE _0x8001E
000ca3 940e 23c0 	CALL SUBOPT_0x29
000ca5 f099      	BREQ _0x8001D
                 _0x8001E:
                 ; 0004 006B if(index >= activePage->size){
000ca6 01d3      	MOVW R26,R6
000ca7 9612      	ADIW R26,2
000ca8 940e 287c 	CALL __GETD1P_INC
000caa 940e 23e3 	CALL SUBOPT_0x2E
000cac 940e 28f1 	CALL __CPD21
000cae f008      	BRLO _0x80020
                 ; 0004 006C break;
000caf c081      	RJMP _0x8001C
                 ; 0004 006D }
                 ; 0004 006E glcd_printfxy (7, y, "%s",  entry->text);
                 _0x80020:
000cb0 e0e7      	LDI  R30,LOW(7)
000cb1 93ea      	ST   -Y,R30
000cb2 940e 23e8 	CALL SUBOPT_0x2F
000cb4 8dac      	LDD  R26,Y+28
000cb5 8dbd      	LDD  R27,Y+28+1
000cb6 9658      	ADIW R26,24
000cb7 940e 23ee 	CALL SUBOPT_0x30
                 ; 0004 006F //glcd_printfxy (90, y, "%d", str_length(entry->text));
                 ; 0004 0070 }
                 ; 0004 0071 if(activePage->entries[index].displayData){
                 _0x8001D:
000cb9 940e 23d7 	CALL SUBOPT_0x2D
000cbb 940e 23f9 	CALL SUBOPT_0x31
000cbd f409      	BRNE PC+2
000cbe c06f      	RJMP _0x80021
                 ; 0004 0072 //PRINT("displaying %s = %d (%s) type 0x%X disp 0x%X\r\n",  entry->text, *(int16 ...
                 ; 0004 0073 x=str_length(entry->text)+15;
000cbf 940e 2401 	CALL SUBOPT_0x32
                 ; 0004 0074 data = entry->data.v;
000cc1 940e 240a 	CALL SUBOPT_0x33
                 ; 0004 0075 switch (entry->type){
                 ; 0004 0076 case void_e:
000cc3 f409      	BRNE _0x80025
                 ; 0004 0077 break;
000cc4 c066      	RJMP _0x80024
                 ; 0004 0078 case char_e:
                 _0x80025:
000cc5 30e1      	CPI  R30,LOW(0x1)
000cc6 e0a0      	LDI  R26,HIGH(0x1)
000cc7 07fa      	CPC  R31,R26
000cc8 f419      	BRNE _0x80026
                 ; 0004 0079 //glcd_printfxy(x, y,"%3d", *((char*)data));
                 ; 0004 007A glcd_printfxy(x,y," %3d", *((char*)data));
000cc9 940e 2419 	CALL SUBOPT_0x34
000ccb c05b      	RJMP _0x80096
                 ; 0004 007B break;
                 ; 0004 007C case int8_t_e:
                 _0x80026:
000ccc 30e2      	CPI  R30,LOW(0x2)
000ccd e0a0      	LDI  R26,HIGH(0x2)
000cce 07fa      	CPC  R31,R26
000ccf f431      	BRNE _0x80027
                 ; 0004 007D glcd_printfxy(x, y,"%3d", *((int8_t*)data));
000cd0 940e 2428 	CALL SUBOPT_0x35
000cd2 91ec      	LD   R30,X
000cd3 940e 27ce 	CALL __CBD1
000cd5 c051      	RJMP _0x80096
                 ; 0004 007E //glcd_printf(" %3d", *((int8_t*)data));
                 ; 0004 007F break;
                 ; 0004 0080 case int16_t_e:
                 _0x80027:
000cd6 30e4      	CPI  R30,LOW(0x4)
000cd7 e0a0      	LDI  R26,HIGH(0x4)
000cd8 07fa      	CPC  R31,R26
000cd9 f439      	BRNE _0x80028
                 ; 0004 0081 glcd_printfxy(x, y,"%3d", *((int16_t*)data));
000cda 940e 2428 	CALL SUBOPT_0x35
000cdc 940e 2872 	CALL __GETW1P
000cde 940e 27d4 	CALL __CWD1
000ce0 c046      	RJMP _0x80096
                 ; 0004 0082 //glcd_printf(" %3d", *((int16_t*)data));
                 ; 0004 0083 break;
                 ; 0004 0084 case int32_t_e:
                 _0x80028:
000ce1 30e6      	CPI  R30,LOW(0x6)
000ce2 e0a0      	LDI  R26,HIGH(0x6)
000ce3 07fa      	CPC  R31,R26
000ce4 f429      	BRNE _0x80029
                 ; 0004 0085 glcd_printfxy(x, y,"%3d", *((int32_t*)data));
000ce5 940e 2428 	CALL SUBOPT_0x35
000ce7 940e 2876 	CALL __GETD1P
000ce9 c03d      	RJMP _0x80096
                 ; 0004 0086 //glcd_printf(" %3d", *((int32_t*)data));
                 ; 0004 0087 break;
                 ; 0004 0088 case uint8_t_e:
                 _0x80029:
000cea 30e3      	CPI  R30,LOW(0x3)
000ceb e0a0      	LDI  R26,HIGH(0x3)
000cec 07fa      	CPC  R31,R26
000ced f491      	BRNE _0x8002A
                 ; 0004 0089 if(entry->useStrStorage){
000cee 8de8      	LDD  R30,Y+24
000cef 8df9      	LDD  R31,Y+24+1
000cf0 940e 239d 	CALL SUBOPT_0x25
000cf2 f031      	BREQ _0x8002B
                 ; 0004 008A PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
                 ; 0004 008B PRINT("pointer = %d\r\n", *(entry->data.u8));
                 ; 0004 008C glcd_printfxy(x, y,"%s", entry->str_storage[*entry->data.u8]);
000cf3 932a      	ST   -Y,R18
000cf4 940e 23e8 	CALL SUBOPT_0x2F
000cf6 940e 2433 	CALL SUBOPT_0x36
000cf8 c002      	RJMP _0x80097
                 ; 0004 008D //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
                 ; 0004 008E }
                 ; 0004 008F else{
                 _0x8002B:
                 ; 0004 0090 glcd_printfxy(x, y,"%3d", *entry->data.u8);
000cf9 940e 2445 	CALL SUBOPT_0x37
                 _0x80097:
000cfb 940e 28a6 	CALL __PUTPARD1
000cfd 940e 2454 	CALL SUBOPT_0x38
                 ; 0004 0091 //glcd_printf(" %3d", *entry->data.u8);
                 ; 0004 0092 }
                 ; 0004 0093 break;
000cff c02b      	RJMP _0x80024
                 ; 0004 0094 case uint16_t_e:
                 _0x8002A:
000d00 30e5      	CPI  R30,LOW(0x5)
000d01 e0a0      	LDI  R26,HIGH(0x5)
000d02 07fa      	CPC  R31,R26
000d03 f419      	BRNE _0x8002D
                 ; 0004 0095 glcd_printfxy(x, y,"%3d", *((uint16_t*)data));
000d04 940e 2428 	CALL SUBOPT_0x35
000d06 c01c      	RJMP _0x80098
                 ; 0004 0096 //glcd_printf(" %3d", *((uint16_t*)data));
                 ; 0004 0097 break;
                 ; 0004 0098 case uint32_t_e:
                 _0x8002D:
000d07 30e7      	CPI  R30,LOW(0x7)
000d08 e0a0      	LDI  R26,HIGH(0x7)
000d09 07fa      	CPC  R31,R26
000d0a f429      	BRNE _0x8002E
                 ; 0004 0099 glcd_printfxy(x, y,"%3d", *((uint32_t*)data));
000d0b 940e 2428 	CALL SUBOPT_0x35
000d0d 940e 2876 	CALL __GETD1P
000d0f c017      	RJMP _0x80096
                 ; 0004 009A //glcd_printf(" %3d", *((uint32_t*)data));
                 ; 0004 009B break;
                 ; 0004 009C case float_e:
                 _0x8002E:
000d10 30e8      	CPI  R30,LOW(0x8)
000d11 e0a0      	LDI  R26,HIGH(0x8)
000d12 07fa      	CPC  R31,R26
000d13 f429      	BRNE _0x8002F
                 ; 0004 009D glcd_printfxy(x, y,"%3.0f", *((float*)data));
000d14 940e 2459 	CALL SUBOPT_0x39
000d16 940e 2876 	CALL __GETD1P
000d18 c00e      	RJMP _0x80096
                 ; 0004 009E // glcd_printf(" %3.0f", *((float*)data));
                 ; 0004 009F break;
                 ; 0004 00A0 case str_e:
                 _0x8002F:
000d19 30e9      	CPI  R30,LOW(0x9)
000d1a e0a0      	LDI  R26,HIGH(0x9)
000d1b 07fa      	CPC  R31,R26
000d1c f471      	BRNE _0x80024
                 ; 0004 00A1 glcd_printfxy(x, y,"%s", entry->data.str);
000d1d 932a      	ST   -Y,R18
000d1e 940e 23e8 	CALL SUBOPT_0x2F
000d20 8dac      	LDD  R26,Y+28
000d21 8dbd      	LDD  R27,Y+28+1
000d22 961a      	ADIW R26,10
                 _0x80098:
000d23 91ed      	LD   R30,X+
000d24 91fd      	LD   R31,X+
000d25 2766      	CLR  R22
000d26 2777      	CLR  R23
                 _0x80096:
000d27 940e 28a6 	CALL __PUTPARD1
000d29 940e 2454 	CALL SUBOPT_0x38
                 ; 0004 00A2 //glcd_printf(" %s", entry->data.str);
                 ; 0004 00A3 break;
                 ; 0004 00A4 }
                 _0x80024:
                 ; 0004 00A5 dataAssign(entry);
000d2b 8da8      	LDD  R26,Y+24
000d2c 8db9      	LDD  R27,Y+24+1
000d2d dec7      	RCALL _dataAssign
                 ; 0004 00A6 }
                 ; 0004 00A7 }
                 _0x80021:
                +
000d2e 5f0f     +SUBI R16 , LOW ( - 1 )
000d2f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000d30 cf56      	RJMP _0x8001B
                 _0x8001C:
                 ; 0004 00A8 prev_index=1;
000d31 940e 2464 	CALL SUBOPT_0x3A
000d33 940e 2469 	CALL SUBOPT_0x3B
                 ; 0004 00A9 }
                 ; 0004 00AA 
                 ; 0004 00AB index_selected = activePage->selectedIndex%MENU_LINES;
                 _0x80017:
000d35 940e 23a2 	CALL SUBOPT_0x26
000d37 940e 2854 	CALL __MODD21U
                +
000d39 8bec     +STD Y + 20 , R30
000d3a 8bfd     +STD Y + 20 + 1 , R31
000d3b 8b6e     +STD Y + 20 + 2 , R22
000d3c 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
                 ; 0004 00AC 
                 ; 0004 00AD if(index_selected!=prev_index){
000d3d 91e0 07f1 	LDS  R30,_prev_index_S0040003000
000d3f 91f0 07f2 	LDS  R31,_prev_index_S0040003000+1
000d41 9160 07f3 	LDS  R22,_prev_index_S0040003000+2
000d43 9170 07f4 	LDS  R23,_prev_index_S0040003000+3
                +
000d45 89ac     +LDD R26 , Y + 20
000d46 89bd     +LDD R27 , Y + 20 + 1
000d47 898e     +LDD R24 , Y + 20 + 2
000d48 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
000d49 940e 28ec 	CALL __CPD12
000d4b f0f1      	BREQ _0x80031
                 ; 0004 00AE y=index_selected*LINE_HEIGHT + fstline;
000d4c 940e 2472 	CALL SUBOPT_0x3C
                 ; 0004 00AF py=prev_index*LINE_HEIGHT + fstline;
000d4e 91a0 07f1 	LDS  R26,_prev_index_S0040003000
000d50 91b0 07f2 	LDS  R27,_prev_index_S0040003000+1
000d52 e0e8      	LDI  R30,LOW(8)
000d53 940e 2806 	CALL __MULB1W2U
000d55 81ae      	LDD  R26,Y+6
000d56 81bf      	LDD  R27,Y+6+1
000d57 0fea      	ADD  R30,R26
000d58 1ffb      	ADC  R31,R27
000d59 8fea      	STD  Y+26,R30
000d5a 8ffb      	STD  Y+26+1,R31
                 ; 0004 00B0 glcd_printfxy (0, y, ">");
000d5b e0e0      	LDI  R30,LOW(0)
000d5c 93ea      	ST   -Y,R30
000d5d 934a      	ST   -Y,R20
                +
000d5e ede6     +LDI R30 , LOW ( 2 * _0x80000 + ( 14 ) )
000d5f e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 14 ) )
                 	__POINTW1FN _0x80000,14
000d60 940e 2478 	CALL SUBOPT_0x3D
                 ; 0004 00B1 glcd_printfxy (0, py, " ");
000d62 e0e0      	LDI  R30,LOW(0)
000d63 93ea      	ST   -Y,R30
000d64 8deb      	LDD  R30,Y+27
000d65 93ea      	ST   -Y,R30
                +
000d66 ede8     +LDI R30 , LOW ( 2 * _0x80000 + ( 16 ) )
000d67 e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 16 ) )
                 	__POINTW1FN _0x80000,16
000d68 940e 2478 	CALL SUBOPT_0x3D
                 ; 0004 00B2 }
                 ; 0004 00B3 
                 ; 0004 00B4 
                 ; 0004 00B5 data_index = index_selected+index_1stline;
                 _0x80031:
000d6a 940e 247f 	CALL SUBOPT_0x3E
                +
000d6c 89ac     +LDD R26 , Y + 20
000d6d 89bd     +LDD R27 , Y + 20 + 1
000d6e 898e     +LDD R24 , Y + 20 + 2
000d6f 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
000d70 940e 2795 	CALL __ADDD12
                +
000d72 87e8     +STD Y + 8 , R30
000d73 87f9     +STD Y + 8 + 1 , R31
000d74 876a     +STD Y + 8 + 2 , R22
000d75 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0004 00B6 if(activePage->entries[data_index].displayData){
000d76 940e 2484 	CALL SUBOPT_0x3F
000d78 940e 23f9 	CALL SUBOPT_0x31
000d7a f409      	BRNE PC+2
000d7b c0b1      	RJMP _0x80032
                 ; 0004 00B7 entry = &activePage->entries[data_index];
000d7c 940e 2484 	CALL SUBOPT_0x3F
000d7e 0fe6      	ADD  R30,R22
000d7f 1ff7      	ADC  R31,R23
000d80 8fe8      	STD  Y+24,R30
000d81 8ff9      	STD  Y+24+1,R31
                 ; 0004 00B8 x=str_length(entry->text)+15;
000d82 940e 2401 	CALL SUBOPT_0x32
                 ; 0004 00B9 y=index_selected*LINE_HEIGHT + fstline;
000d84 940e 2472 	CALL SUBOPT_0x3C
                 ; 0004 00BA data = entry->data.v;
000d86 940e 240a 	CALL SUBOPT_0x33
                 ; 0004 00BB switch (entry->type){
                 ; 0004 00BC case void_e:
000d88 f409      	BRNE _0x80036
                 ; 0004 00BD break;
000d89 c0a0      	RJMP _0x80035
                 ; 0004 00BE case char_e:
                 _0x80036:
000d8a 30e1      	CPI  R30,LOW(0x1)
000d8b e0a0      	LDI  R26,HIGH(0x1)
000d8c 07fa      	CPC  R31,R26
000d8d f459      	BRNE _0x80037
                 ; 0004 00BF if(entry->prev_data.i16 != *((char*)data)){
000d8e 940e 2490 	CALL SUBOPT_0x40
000d90 e0f0      	LDI  R31,0
000d91 17ea      	CP   R30,R26
000d92 07fb      	CPC  R31,R27
000d93 f021      	BREQ _0x80038
                 ; 0004 00C0 //glcd_printfxy(x, y,"%3d", *((char*)data));
                 ; 0004 00C1 glcd_printfxy(x,y," %3d", *((char*)data));
000d94 940e 2419 	CALL SUBOPT_0x34
000d96 940e 249b 	CALL SUBOPT_0x41
                 ; 0004 00C2 }
                 ; 0004 00C3 break;
                 _0x80038:
000d98 c091      	RJMP _0x80035
                 ; 0004 00C4 case int8_t_e:
                 _0x80037:
000d99 30e2      	CPI  R30,LOW(0x2)
000d9a e0a0      	LDI  R26,HIGH(0x2)
000d9b 07fa      	CPC  R31,R26
000d9c f481      	BRNE _0x80039
                 ; 0004 00C5 if(entry->prev_data.i16 != *((int8_t*)data)){
000d9d 940e 2490 	CALL SUBOPT_0x40
000d9f e0f0      	LDI  R31,0
000da0 fde7      	SBRC R30,7
000da1 efff      	SER  R31
000da2 17ea      	CP   R30,R26
000da3 07fb      	CPC  R31,R27
000da4 f039      	BREQ _0x8003A
                 ; 0004 00C6 glcd_printfxy(x, y,"%3d", *((int8_t*)data));
000da5 940e 2428 	CALL SUBOPT_0x35
000da7 91ec      	LD   R30,X
000da8 940e 27ce 	CALL __CBD1
000daa 940e 249b 	CALL SUBOPT_0x41
                 ; 0004 00C7 //glcd_printf(" %3d", *((int8_t*)data));
                 ; 0004 00C8 }
                 ; 0004 00C9 break;
                 _0x8003A:
000dac c07d      	RJMP _0x80035
                 ; 0004 00CA case int16_t_e:
                 _0x80039:
000dad 30e4      	CPI  R30,LOW(0x4)
000dae e0a0      	LDI  R26,HIGH(0x4)
000daf 07fa      	CPC  R31,R26
000db0 f4a9      	BRNE _0x8003B
                 ; 0004 00CB if(entry->prev_data.i16 != *((int16_t*)data)){
000db1 940e 249e 	CALL SUBOPT_0x42
000db3 f089      	BREQ _0x8003C
                 ; 0004 00CC glcd_printfxy(x, y,"%3d", *((int16_t*)data));
000db4 940e 2428 	CALL SUBOPT_0x35
000db6 91ed      	LD   R30,X+
000db7 91fd      	LD   R31,X+
000db8 940e 27d4 	CALL __CWD1
000dba 940e 249b 	CALL SUBOPT_0x41
                 ; 0004 00CD entry->prev_data.i16 = *((int16_t*)data);
000dbc 940e 24ab 	CALL SUBOPT_0x43
000dbe 91ed      	LD   R30,X+
000dbf 91fd      	LD   R31,X+
                +
000dc0 8da8     +LDD R26 , Y + 24
000dc1 8db9     +LDD R27 , Y + 24 + 1
000dc2 961c     +ADIW R26 , 12
000dc3 93ed     +ST X + , R30
000dc4 93fc     +ST X , R31
                 	__PUTW1SNS 24,12
                 ; 0004 00CE }
                 ; 0004 00CF //glcd_printf(" %3d", *((int16_t*)data));
                 ; 0004 00D0 break;
                 _0x8003C:
000dc5 c064      	RJMP _0x80035
                 ; 0004 00D1 case int32_t_e:
                 _0x8003B:
000dc6 30e6      	CPI  R30,LOW(0x6)
000dc7 e0a0      	LDI  R26,HIGH(0x6)
000dc8 07fa      	CPC  R31,R26
000dc9 f441      	BRNE _0x8003D
                 ; 0004 00D2 if(entry->prev_data.i32 != *((int32_t*)data)){
000dca 940e 24b0 	CALL SUBOPT_0x44
000dcc f021      	BREQ _0x8003E
                 ; 0004 00D3 glcd_printfxy(x, y,"%3d", *((int32_t*)data));
000dcd 940e 2428 	CALL SUBOPT_0x35
000dcf 940e 24be 	CALL SUBOPT_0x45
                 ; 0004 00D4 //glcd_printf(" %3d", *((int32_t*)data));
                 ; 0004 00D5 }
                 ; 0004 00D6 break;
                 _0x8003E:
000dd1 c058      	RJMP _0x80035
                 ; 0004 00D7 case uint8_t_e:
                 _0x8003D:
000dd2 30e3      	CPI  R30,LOW(0x3)
000dd3 e0a0      	LDI  R26,HIGH(0x3)
000dd4 07fa      	CPC  R31,R26
000dd5 f4d1      	BRNE _0x8003F
                 ; 0004 00D8 if(entry->prev_data.i8 != *((int8_t*)data)){
000dd6 8de8      	LDD  R30,Y+24
000dd7 8df9      	LDD  R31,Y+24+1
000dd8 8404      	LDD  R0,Z+12
000dd9 940e 24ab 	CALL SUBOPT_0x43
000ddb 91ec      	LD   R30,X
000ddc 15e0      	CP   R30,R0
000ddd f089      	BREQ _0x80040
                 ; 0004 00D9 if(entry->useStrStorage){
000dde 8de8      	LDD  R30,Y+24
000ddf 8df9      	LDD  R31,Y+24+1
000de0 940e 239d 	CALL SUBOPT_0x25
000de2 f031      	BREQ _0x80041
                 ; 0004 00DA PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
                 ; 0004 00DB PRINT("pointer = %d\r\n", *(entry->data.u8));
                 ; 0004 00DC glcd_printfxy(x, y,"%s", entry->str_storage[*entry->data.u8]);
000de3 932a      	ST   -Y,R18
000de4 940e 23e8 	CALL SUBOPT_0x2F
000de6 940e 2433 	CALL SUBOPT_0x36
000de8 c002      	RJMP _0x80099
                 ; 0004 00DD //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
                 ; 0004 00DE }
                 ; 0004 00DF else{
                 _0x80041:
                 ; 0004 00E0 glcd_printfxy(x, y,"%3d", *entry->data.u8);
000de9 940e 2445 	CALL SUBOPT_0x37
                 _0x80099:
000deb 940e 28a6 	CALL __PUTPARD1
000ded 940e 2454 	CALL SUBOPT_0x38
                 ; 0004 00E1 //glcd_printf(" %3d", *entry->data.u8);
                 ; 0004 00E2 }
                 ; 0004 00E3 }
                 ; 0004 00E4 break;
                 _0x80040:
000def c03a      	RJMP _0x80035
                 ; 0004 00E5 case uint16_t_e:
                 _0x8003F:
000df0 30e5      	CPI  R30,LOW(0x5)
000df1 e0a0      	LDI  R26,HIGH(0x5)
000df2 07fa      	CPC  R31,R26
000df3 f441      	BRNE _0x80043
                 ; 0004 00E6 if(entry->prev_data.u16 != *((uint16_t*)data)){
000df4 940e 249e 	CALL SUBOPT_0x42
000df6 f021      	BREQ _0x80044
                 ; 0004 00E7 glcd_printfxy(x, y,"%3d", *((uint16_t*)data));
000df7 940e 2428 	CALL SUBOPT_0x35
000df9 940e 23ee 	CALL SUBOPT_0x30
                 ; 0004 00E8 //glcd_printf(" %3d", *((uint16_t*)data));
                 ; 0004 00E9 }
                 ; 0004 00EA break;
                 _0x80044:
000dfb c02e      	RJMP _0x80035
                 ; 0004 00EB case uint32_t_e:
                 _0x80043:
000dfc 30e7      	CPI  R30,LOW(0x7)
000dfd e0a0      	LDI  R26,HIGH(0x7)
000dfe 07fa      	CPC  R31,R26
000dff f441      	BRNE _0x80045
                 ; 0004 00EC if(entry->prev_data.u32 != *((uint32_t*)data)){
000e00 940e 24b0 	CALL SUBOPT_0x44
000e02 f021      	BREQ _0x80046
                 ; 0004 00ED glcd_printfxy(x, y,"%3d", *((uint32_t*)data));
000e03 940e 2428 	CALL SUBOPT_0x35
000e05 940e 24be 	CALL SUBOPT_0x45
                 ; 0004 00EE //glcd_printf(" %3d", *((uint32_t*)data));
                 ; 0004 00EF }
                 ; 0004 00F0 break;
                 _0x80046:
000e07 c022      	RJMP _0x80035
                 ; 0004 00F1 case float_e:
                 _0x80045:
000e08 30e8      	CPI  R30,LOW(0x8)
000e09 e0a0      	LDI  R26,HIGH(0x8)
000e0a 07fa      	CPC  R31,R26
000e0b f441      	BRNE _0x80047
                 ; 0004 00F2 if(entry->prev_data.f != *((float*)data)){
000e0c 940e 24b0 	CALL SUBOPT_0x44
000e0e f021      	BREQ _0x80048
                 ; 0004 00F3 glcd_printfxy(x, y,"%3.0f", *((float*)data));
000e0f 940e 2459 	CALL SUBOPT_0x39
000e11 940e 24be 	CALL SUBOPT_0x45
                 ; 0004 00F4 // glcd_printf(" %3.0f", *((float*)data));
                 ; 0004 00F5 }
                 ; 0004 00F6 break;
                 _0x80048:
000e13 c016      	RJMP _0x80035
                 ; 0004 00F7 case str_e:
                 _0x80047:
000e14 30e9      	CPI  R30,LOW(0x9)
000e15 e0a0      	LDI  R26,HIGH(0x9)
000e16 07fa      	CPC  R31,R26
000e17 f491      	BRNE _0x80035
                 ; 0004 00F8 if(entry->prev_data.str != entry->data.str){
000e18 8de8      	LDD  R30,Y+24
000e19 8df9      	LDD  R31,Y+24+1
                +
000e1a 8404     +LDD R0 , Z + 12
000e1b 8415     +LDD R1 , Z + 12 + 1
                 	__GETWRZ 0,1,12
000e1c 8da8      	LDD  R26,Y+24
000e1d 8db9      	LDD  R27,Y+24+1
000e1e 961a      	ADIW R26,10
000e1f 940e 24c1 	CALL SUBOPT_0x46
000e21 f041      	BREQ _0x8004A
                 ; 0004 00F9 glcd_printfxy(x, y,"%s", entry->data.str);
000e22 932a      	ST   -Y,R18
000e23 940e 23e8 	CALL SUBOPT_0x2F
000e25 8dac      	LDD  R26,Y+28
000e26 8dbd      	LDD  R27,Y+28+1
000e27 961a      	ADIW R26,10
000e28 940e 23ee 	CALL SUBOPT_0x30
                 ; 0004 00FA //glcd_printf(" %s", entry->data.str);
                 ; 0004 00FB }
                 ; 0004 00FC break;
                 _0x8004A:
                 ; 0004 00FD }
                 _0x80035:
                 ; 0004 00FE dataAssign(entry);
000e2a 8da8      	LDD  R26,Y+24
000e2b 8db9      	LDD  R27,Y+24+1
000e2c ddc8      	RCALL _dataAssign
                 ; 0004 00FF }
                 ; 0004 0100 
                 ; 0004 0101 prev_index_1stline = index_1stline;
                 _0x80032:
000e2d 940e 247f 	CALL SUBOPT_0x3E
000e2f 93e0 07f5 	STS  _prev_index_1stline_S0040003000,R30
000e31 93f0 07f6 	STS  _prev_index_1stline_S0040003000+1,R31
000e33 9360 07f7 	STS  _prev_index_1stline_S0040003000+2,R22
000e35 9370 07f8 	STS  _prev_index_1stline_S0040003000+3,R23
                 ; 0004 0102 prev_activePage = activePage;
                +
000e37 9260 07f9+STS _prev_activePage_S0040003000 + ( 0 ) , R6
000e39 9270 07fa+STS _prev_activePage_S0040003000 + ( 0 ) + 1 , R7
                 	__PUTWMRN _prev_activePage_S0040003000,0,6,7
                 ; 0004 0103 prev_index=index_selected;
                +
000e3b 89ec     +LDD R30 , Y + 20
000e3c 89fd     +LDD R31 , Y + 20 + 1
000e3d 896e     +LDD R22 , Y + 20 + 2
000e3e 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
000e3f 940e 2469 	CALL SUBOPT_0x3B
                 ; 0004 0104 PRINT("<<<renderMenu\r\n");
                 ; 0004 0105 }
                 _0x2140019:
000e41 940e 2786 	CALL __LOADLOCR6
                 _0x214001A:
000e43 966c      	ADIW R28,28
000e44 9508      	RET
                 ; .FEND
                 ; 0004 0107 void menuCommand(menuCommands_e command){
                 _menuCommand:
                 ; .FSTART _menuCommand
                 ; 0004 0108 entry_t* entry = &(activePage->entries[activePage->selectedIndex]);
                 ; 0004 0109 switch(command){
000e45 940e 2781 	CALL __SAVELOCR4
000e47 2f3a      	MOV  R19,R26
                 ;	command -> R19
                 ;	*entry -> R16,R17
000e48 01d3      	MOVW R26,R6
000e49 900d      	LD   R0,X+
000e4a 901c      	LD   R1,X
000e4b 01d3      	MOVW R26,R6
000e4c 9616      	ADIW R26,6
000e4d 91ed      	LD   R30,X+
000e4e 91fd      	LD   R31,X+
000e4f 01b0      	MOVW R22,R0
000e50 e1ad      	LDI  R26,LOW(29)
000e51 e0b0      	LDI  R27,HIGH(29)
000e52 940e 27de 	CALL __MULW12U
000e54 0fe6      	ADD  R30,R22
000e55 1ff7      	ADC  R31,R23
000e56 018f      	MOVW R16,R30
000e57 2fe3      	MOV  R30,R19
000e58 e0f0      	LDI  R31,0
                 ; 0004 010A case nothing:
000e59 9730      	SBIW R30,0
000e5a f409      	BRNE _0x8004E
                 ; 0004 010B break;
000e5b c08b      	RJMP _0x8004D
                 ; 0004 010C case up_e:
                 _0x8004E:
000e5c 30e1      	CPI  R30,LOW(0x1)
000e5d e0a0      	LDI  R26,HIGH(0x1)
000e5e 07fa      	CPC  R31,R26
000e5f f499      	BRNE _0x8004F
                 ; 0004 010D if(activePage->selectedIndex == 0){
000e60 01d3      	MOVW R26,R6
000e61 9616      	ADIW R26,6
000e62 940e 2876 	CALL __GETD1P
000e64 940e 28e2 	CALL __CPD10
000e66 f439      	BRNE _0x80050
                 ; 0004 010E activePage->selectedIndex = activePage->size - 1;
000e67 940e 24c6 	CALL SUBOPT_0x47
                +
000e69 01d3     +MOVW R26 , R6
000e6a 9616     +ADIW R26 , 6
000e6b 940e 2881+CALL __PUTDP1
                 	__PUTD1RNS 6,6
                 ; 0004 010F }
                 ; 0004 0110 else{
000e6d c004      	RJMP _0x80051
                 _0x80050:
                 ; 0004 0111 activePage->selectedIndex--;
000e6e 01d3      	MOVW R26,R6
000e6f 9616      	ADIW R26,6
000e70 940e 24d1 	CALL SUBOPT_0x48
                 ; 0004 0112 
                 ; 0004 0113 }
                 _0x80051:
                 ; 0004 0114 break;
000e72 c074      	RJMP _0x8004D
                 ; 0004 0115 case down_e:
                 _0x8004F:
000e73 30e2      	CPI  R30,LOW(0x2)
000e74 e0a0      	LDI  R26,HIGH(0x2)
000e75 07fa      	CPC  R31,R26
000e76 f4f1      	BRNE _0x80052
                 ; 0004 0116 if(activePage->selectedIndex < (activePage->size - 1)){
000e77 01f3      	MOVW R30,R6
                +
000e78 81a6     +LDD R26 , Z + 6
000e79 81b7     +LDD R27 , Z + 6 + 1
000e7a 8580     +LDD R24 , Z + 6 + 2
000e7b 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
000e7c 939f      	PUSH R25
000e7d 938f      	PUSH R24
000e7e 93bf      	PUSH R27
000e7f 93af      	PUSH R26
000e80 940e 24c6 	CALL SUBOPT_0x47
000e82 91af      	POP  R26
000e83 91bf      	POP  R27
000e84 918f      	POP  R24
000e85 919f      	POP  R25
000e86 940e 28f1 	CALL __CPD21
000e88 f428      	BRSH _0x80053
                 ; 0004 0117 activePage->selectedIndex++;
000e89 01d3      	MOVW R26,R6
000e8a 9616      	ADIW R26,6
000e8b 940e 225d 	CALL SUBOPT_0x1
                 ; 0004 0118 }
                 ; 0004 0119 else{
000e8d c006      	RJMP _0x80054
                 _0x80053:
                 ; 0004 011A activePage->selectedIndex = 0;
000e8e 01d3      	MOVW R26,R6
000e8f 9616      	ADIW R26,6
000e90 940e 2266 	CALL SUBOPT_0x2
000e92 940e 2881 	CALL __PUTDP1
                 ; 0004 011B }
                 _0x80054:
                 ; 0004 011C break;
000e94 c052      	RJMP _0x8004D
                 ; 0004 011D case right_e:
                 _0x80052:
000e95 30e3      	CPI  R30,LOW(0x3)
000e96 e0a0      	LDI  R26,HIGH(0x3)
000e97 07fa      	CPC  R31,R26
000e98 f469      	BRNE _0x80055
                 ; 0004 011E if(entry->right_callback)
000e99 01d8      	MOVW R26,R16
000e9a 9614      	ADIW R26,4
000e9b 940e 2872 	CALL __GETW1P
000e9d 9730      	SBIW R30,0
000e9e f031      	BREQ _0x80056
                 ; 0004 011F entry->right_callback(entry);
000e9f 01f8      	MOVW R30,R16
                +
000ea0 8004     +LDD R0 , Z + 4
000ea1 8015     +LDD R1 , Z + 4 + 1
                 	__GETWRZ 0,1,4
000ea2 01d8      	MOVW R26,R16
000ea3 01f0      	MOVW R30,R0
000ea4 9509      	ICALL
                 ; 0004 0120 break;
                 _0x80056:
000ea5 c041      	RJMP _0x8004D
                 ; 0004 0121 case left_e:
                 _0x80055:
000ea6 30e4      	CPI  R30,LOW(0x4)
000ea7 e0a0      	LDI  R26,HIGH(0x4)
000ea8 07fa      	CPC  R31,R26
000ea9 f469      	BRNE _0x80057
                 ; 0004 0122 if(entry->left_callback)
000eaa 01d8      	MOVW R26,R16
000eab 9612      	ADIW R26,2
000eac 940e 2872 	CALL __GETW1P
000eae 9730      	SBIW R30,0
000eaf f031      	BREQ _0x80058
                 ; 0004 0123 entry->left_callback(entry);
000eb0 01f8      	MOVW R30,R16
                +
000eb1 8002     +LDD R0 , Z + 2
000eb2 8013     +LDD R1 , Z + 2 + 1
                 	__GETWRZ 0,1,2
000eb3 01d8      	MOVW R26,R16
000eb4 01f0      	MOVW R30,R0
000eb5 9509      	ICALL
                 ; 0004 0124 break;
                 _0x80058:
000eb6 c030      	RJMP _0x8004D
                 ; 0004 0125 case left_right_e:
                 _0x80057:
000eb7 30e5      	CPI  R30,LOW(0x5)
000eb8 e0a0      	LDI  R26,HIGH(0x5)
000eb9 07fa      	CPC  R31,R26
000eba f469      	BRNE _0x80059
                 ; 0004 0126 if(entry->left_right_callback)
000ebb 01d8      	MOVW R26,R16
000ebc 9616      	ADIW R26,6
000ebd 940e 2872 	CALL __GETW1P
000ebf 9730      	SBIW R30,0
000ec0 f031      	BREQ _0x8005A
                 ; 0004 0127 entry->left_right_callback(entry);
000ec1 01f8      	MOVW R30,R16
                +
000ec2 8006     +LDD R0 , Z + 6
000ec3 8017     +LDD R1 , Z + 6 + 1
                 	__GETWRZ 0,1,6
000ec4 01d8      	MOVW R26,R16
000ec5 01f0      	MOVW R30,R0
000ec6 9509      	ICALL
                 ; 0004 0128 break;
                 _0x8005A:
000ec7 c01f      	RJMP _0x8004D
                 ; 0004 0129 case enter_e:
                 _0x80059:
000ec8 30e6      	CPI  R30,LOW(0x6)
000ec9 e0a0      	LDI  R26,HIGH(0x6)
000eca 07fa      	CPC  R31,R26
000ecb f4d9      	BRNE _0x8004D
                 ; 0004 012A if(entry->useActiveIndex){
000ecc 01f8      	MOVW R30,R16
000ecd 8da3      	LDD  R26,Z+27
000ece 8db4      	LDD  R27,Z+28
000ecf 01fd      	MOVW R30,R26
000ed0 70e2      	ANDI R30,LOW(0x2)
000ed1 f041      	BREQ _0x8005C
                 ; 0004 012B activePage->activeIndex = activePage->selectedIndex;
000ed2 01d3      	MOVW R26,R6
000ed3 9616      	ADIW R26,6
000ed4 940e 287c 	CALL __GETD1P_INC
                +
000ed6 01d3     +MOVW R26 , R6
000ed7 961a     +ADIW R26 , 10
000ed8 940e 2881+CALL __PUTDP1
                 	__PUTD1RNS 6,10
                 ; 0004 012C }
                 ; 0004 012D if(entry->sel_callback)
                 _0x8005C:
000eda 01d8      	MOVW R26,R16
000edb 940e 2872 	CALL __GETW1P
000edd 9730      	SBIW R30,0
000ede f041      	BREQ _0x8005D
                 ; 0004 012E entry->sel_callback(entry);
000edf 91ed      	LD   R30,X+
000ee0 91fd      	LD   R31,X+
000ee1 93ff      	PUSH R31
000ee2 93ef      	PUSH R30
000ee3 01d8      	MOVW R26,R16
000ee4 91ef      	POP  R30
000ee5 91ff      	POP  R31
000ee6 9509      	ICALL
                 ; 0004 012F break;
                 _0x8005D:
                 ; 0004 0130 }
                 _0x8004D:
                 ; 0004 0131 renderMenu();
000ee7 dd72      	RCALL _renderMenu
                 ; 0004 0132 }
000ee8 940c 1370 	JMP  _0x2140014
                 ; .FEND
                 ; 0004 0136 void printMenuInfo(void){
                 ; 0004 0137 PRINT("MENU: ");
                 ; 0004 0138 PRINT("");
                 ; 0004 0139 }
                 ; 0004 013C void printEntryData(entry_t* e){
                 ; 0004 013D //void* data = e->data.v;
                 ; 0004 013E switch (e->type){
                 ;	*e -> R16,R17
                 ; 0004 013F case void_e:
                 ; 0004 0140 break;
                 ; 0004 0141 case char_e:
                 ; 0004 0142 PRINT(" %3d",  *(e->data.ch));
                 ; 0004 0143 break;
                 ; 0004 0144 case int8_t_e:
                 ; 0004 0145 PRINT(" %3d", *(e->data.i8));
                 ; 0004 0146 break;
                 ; 0004 0147 case int16_t_e:
                 ; 0004 0148 PRINT(" %3d", *(e->data.i16));
                 ; 0004 0149 break;
                 ; 0004 014A case int32_t_e:
                 ; 0004 014B PRINT(" %3d", *(e->data.i32));
                 ; 0004 014C break;
                 ; 0004 014D case uint8_t_e:
                 ; 0004 014E PRINT(" %3d", *(e->data.u8));
                 ; 0004 014F break;
                 ; 0004 0150 case uint16_t_e:
                 ; 0004 0151 PRINT(" %3d", *(e->data.u16));
                 ; 0004 0152 break;
                 ; 0004 0153 case uint32_t_e:
                 ; 0004 0154 PRINT(" %3d", *(e->data.u32));
                 ; 0004 0155 break;
                 ; 0004 0156 case float_e:
                 ; 0004 0157 PRINT(" %3.0f", *(e->data.f));
                 ; 0004 0158 break;
                 ; 0004 0159 case str_e:
                 ; 0004 015A PRINT(" %s", e->data.str);
                 ; 0004 015B break;
                 ; 0004 015C }
                 ; 0004 015D }
                 ; 0004 015F void printEntry(entry_t* e){
                 ; 0004 0160 PRINT(">>>printEntry\r\n");
                 ;	*e -> R16,R17
                 ; 0004 0161 PRINT("text = %s\r\n", e->text);
                 ; 0004 0162 PRINT("data = ");
                 ; 0004 0163 printEntryData(e);
                 ; 0004 0164 PRINT("\r\n");
                 ; 0004 0165 PRINT("type = %d\r\n", e->type);
                 ; 0004 0166 PRINT("disp = %d\r\n", e->displayData);
                 ; 0004 0167 PRINT("useActId = %d\r\n", e->useActiveIndex);
                 ; 0004 0168 PRINT("<<<printEntry\r\n");
                 ; 0004 0169 }
                 ; 0004 016C void incrementEntry(entry_t* e){
                 _incrementEntry:
                 ; .FSTART _incrementEntry
                 ; 0004 016D PRINT(">>>increment\r\n");
000eea 940e 24d9 	CALL SUBOPT_0x49
                 ;	*e -> R16,R17
                 ; 0004 016E switch (e->type)
                 ; 0004 016F {
                 ; 0004 0170 case void_e:
000eec f409      	BRNE _0x8006E
                 ; 0004 0171 break;
000eed c07f      	RJMP _0x8006D
                 ; 0004 0172 case char_e:
                 _0x8006E:
000eee 30e1      	CPI  R30,LOW(0x1)
000eef e0a0      	LDI  R26,HIGH(0x1)
000ef0 07fa      	CPC  R31,R26
000ef1 f431      	BRNE _0x8006F
                 ; 0004 0173 if(*(e->data.ch) < e->max.ch){
000ef2 940e 24e1 	CALL SUBOPT_0x4A
000ef4 f410      	BRSH _0x80070
                 ; 0004 0174 (*(e->data.ch))++;
000ef5 940e 24e8 	CALL SUBOPT_0x4B
                 ; 0004 0175 }
                 ; 0004 0176 break;
                 _0x80070:
000ef7 c075      	RJMP _0x8006D
                 ; 0004 0177 case int8_t_e:
                 _0x8006F:
000ef8 30e2      	CPI  R30,LOW(0x2)
000ef9 e0a0      	LDI  R26,HIGH(0x2)
000efa 07fa      	CPC  R31,R26
000efb f431      	BRNE _0x80071
                 ; 0004 0178 if(*(e->data.i8) < e->max.i8){
000efc 940e 24e1 	CALL SUBOPT_0x4A
000efe f414      	BRGE _0x80072
                 ; 0004 0179 (*(e->data.i8))++;
000eff 940e 24e8 	CALL SUBOPT_0x4B
                 ; 0004 017A }
                 ; 0004 017B break;
                 _0x80072:
000f01 c06b      	RJMP _0x8006D
                 ; 0004 017C case int16_t_e:
                 _0x80071:
000f02 30e4      	CPI  R30,LOW(0x4)
000f03 e0a0      	LDI  R26,HIGH(0x4)
000f04 07fa      	CPC  R31,R26
000f05 f431      	BRNE _0x80073
                 ; 0004 017D if(*(e->data.i16) < e->max.i16){
000f06 940e 24ef 	CALL SUBOPT_0x4C
000f08 f414      	BRGE _0x80074
                 ; 0004 017E (*(e->data.i16))++;
000f09 940e 24fb 	CALL SUBOPT_0x4D
                 ; 0004 017F }
                 ; 0004 0180 break;
                 _0x80074:
000f0b c061      	RJMP _0x8006D
                 ; 0004 0181 case int32_t_e:
                 _0x80073:
000f0c 30e6      	CPI  R30,LOW(0x6)
000f0d e0a0      	LDI  R26,HIGH(0x6)
000f0e 07fa      	CPC  R31,R26
000f0f f4a9      	BRNE _0x80075
                 ; 0004 0182 if(*(e->data.i32) < e->max.i32){
000f10 940e 2504 	CALL SUBOPT_0x4E
000f12 937f      	PUSH R23
000f13 936f      	PUSH R22
000f14 93ff      	PUSH R31
000f15 93ef      	PUSH R30
000f16 940e 250a 	CALL SUBOPT_0x4F
000f18 91af      	POP  R26
000f19 91bf      	POP  R27
000f1a 918f      	POP  R24
000f1b 919f      	POP  R25
000f1c 940e 28f1 	CALL __CPD21
000f1e f42c      	BRGE _0x80076
                 ; 0004 0183 (*(e->data.i32))++;
000f1f 01f8      	MOVW R30,R16
000f20 85a2      	LDD  R26,Z+10
000f21 85b3      	LDD  R27,Z+11
000f22 940e 225d 	CALL SUBOPT_0x1
                 ; 0004 0184 }
                 ; 0004 0185 break;
                 _0x80076:
000f24 c048      	RJMP _0x8006D
                 ; 0004 0186 case uint8_t_e:
                 _0x80075:
000f25 30e3      	CPI  R30,LOW(0x3)
000f26 e0a0      	LDI  R26,HIGH(0x3)
000f27 07fa      	CPC  R31,R26
000f28 f431      	BRNE _0x80077
                 ; 0004 0187 if(*(e->data.u8) < e->max.u8){
000f29 940e 24e1 	CALL SUBOPT_0x4A
000f2b f410      	BRSH _0x80078
                 ; 0004 0188 (*(e->data.u8))++;
000f2c 940e 24e8 	CALL SUBOPT_0x4B
                 ; 0004 0189 }
                 ; 0004 018A break;
                 _0x80078:
000f2e c03e      	RJMP _0x8006D
                 ; 0004 018B case uint16_t_e:
                 _0x80077:
000f2f 30e5      	CPI  R30,LOW(0x5)
000f30 e0a0      	LDI  R26,HIGH(0x5)
000f31 07fa      	CPC  R31,R26
000f32 f431      	BRNE _0x80079
                 ; 0004 018C if(*(e->data.u16) < e->max.u16){
000f33 940e 24ef 	CALL SUBOPT_0x4C
000f35 f410      	BRSH _0x8007A
                 ; 0004 018D (*(e->data.u16))++;
000f36 940e 24fb 	CALL SUBOPT_0x4D
                 ; 0004 018E }
                 ; 0004 018F break;
                 _0x8007A:
000f38 c034      	RJMP _0x8006D
                 ; 0004 0190 case uint32_t_e:
                 _0x80079:
000f39 30e7      	CPI  R30,LOW(0x7)
000f3a e0a0      	LDI  R26,HIGH(0x7)
000f3b 07fa      	CPC  R31,R26
000f3c f4a9      	BRNE _0x8007B
                 ; 0004 0191 if(*(e->data.u32) < e->max.u32){
000f3d 940e 2504 	CALL SUBOPT_0x4E
000f3f 937f      	PUSH R23
000f40 936f      	PUSH R22
000f41 93ff      	PUSH R31
000f42 93ef      	PUSH R30
000f43 940e 250a 	CALL SUBOPT_0x4F
000f45 91af      	POP  R26
000f46 91bf      	POP  R27
000f47 918f      	POP  R24
000f48 919f      	POP  R25
000f49 940e 28f1 	CALL __CPD21
000f4b f428      	BRSH _0x8007C
                 ; 0004 0192 (*(e->data.u32))++;
000f4c 01f8      	MOVW R30,R16
000f4d 85a2      	LDD  R26,Z+10
000f4e 85b3      	LDD  R27,Z+11
000f4f 940e 225d 	CALL SUBOPT_0x1
                 ; 0004 0193 }
                 ; 0004 0194 break;
                 _0x8007C:
000f51 c01b      	RJMP _0x8006D
                 ; 0004 0195 case float_e:
                 _0x8007B:
000f52 30e8      	CPI  R30,LOW(0x8)
000f53 e0a0      	LDI  R26,HIGH(0x8)
000f54 07fa      	CPC  R31,R26
000f55 f4b9      	BRNE _0x8007D
                 ; 0004 0196 if(*(e->data.f) < e->max.f){
000f56 940e 2504 	CALL SUBOPT_0x4E
000f58 937f      	PUSH R23
000f59 936f      	PUSH R22
000f5a 93ff      	PUSH R31
000f5b 93ef      	PUSH R30
000f5c 940e 250a 	CALL SUBOPT_0x4F
000f5e 91af      	POP  R26
000f5f 91bf      	POP  R27
000f60 918f      	POP  R24
000f61 919f      	POP  R25
000f62 940e 2a8e 	CALL __CMPF12
000f64 f440      	BRSH _0x8007E
                 ; 0004 0197 (*(e->data.f))++;
000f65 940e 2504 	CALL SUBOPT_0x4E
000f67 940e 250f 	CALL SUBOPT_0x50
000f69 940e 2881 	CALL __PUTDP1
000f6b 940e 2516 	CALL SUBOPT_0x51
                 ; 0004 0198 }
                 ; 0004 0199 break;
                 _0x8007E:
                 ; 0004 019A case str_e:
                 _0x8007D:
                 ; 0004 019B break;
                 ; 0004 019C }
                 _0x8006D:
                 ; 0004 019D PRINT("<<<icrement\r\n");
                 ; 0004 019E }
000f6d 940c 10c9 	JMP  _0x2140017
                 ; .FEND
                 ; 0004 01A1 void decrementEntry(entry_t* e){
                 _decrementEntry:
                 ; .FSTART _decrementEntry
                 ; 0004 01A2 PRINT(">>>decrement\r\n");
000f6f 940e 24d9 	CALL SUBOPT_0x49
                 ;	*e -> R16,R17
                 ; 0004 01A3 switch (e->type)
                 ; 0004 01A4 {
                 ; 0004 01A5 case void_e:
000f71 f409      	BRNE _0x80083
                 ; 0004 01A6 break;
000f72 c081      	RJMP _0x80082
                 ; 0004 01A7 case char_e:
                 _0x80083:
000f73 30e1      	CPI  R30,LOW(0x1)
000f74 e0a0      	LDI  R26,HIGH(0x1)
000f75 07fa      	CPC  R31,R26
000f76 f431      	BRNE _0x80084
                 ; 0004 01A8 if(*(e->data.ch) > e->min.ch){
000f77 940e 251d 	CALL SUBOPT_0x52
000f79 f410      	BRSH _0x80085
                 ; 0004 01A9 (*(e->data.ch))--;
000f7a 940e 2524 	CALL SUBOPT_0x53
                 ; 0004 01AA }
                 ; 0004 01AB break;
                 _0x80085:
000f7c c077      	RJMP _0x80082
                 ; 0004 01AC case int8_t_e:
                 _0x80084:
000f7d 30e2      	CPI  R30,LOW(0x2)
000f7e e0a0      	LDI  R26,HIGH(0x2)
000f7f 07fa      	CPC  R31,R26
000f80 f431      	BRNE _0x80086
                 ; 0004 01AD if(*(e->data.i8) > e->min.i8){
000f81 940e 251d 	CALL SUBOPT_0x52
000f83 f414      	BRGE _0x80087
                 ; 0004 01AE (*(e->data.i8))--;
000f84 940e 2524 	CALL SUBOPT_0x53
                 ; 0004 01AF }
                 ; 0004 01B0 break;
                 _0x80087:
000f86 c06d      	RJMP _0x80082
                 ; 0004 01B1 case int16_t_e:
                 _0x80086:
000f87 30e4      	CPI  R30,LOW(0x4)
000f88 e0a0      	LDI  R26,HIGH(0x4)
000f89 07fa      	CPC  R31,R26
000f8a f431      	BRNE _0x80088
                 ; 0004 01B2 if(*(e->data.i16) > e->min.i16){
000f8b 940e 252b 	CALL SUBOPT_0x54
000f8d f414      	BRGE _0x80089
                 ; 0004 01B3 (*(e->data.i16))--;
000f8e 940e 2533 	CALL SUBOPT_0x55
                 ; 0004 01B4 }
                 ; 0004 01B5 break;
                 _0x80089:
000f90 c063      	RJMP _0x80082
                 ; 0004 01B6 case int32_t_e:
                 _0x80088:
000f91 30e6      	CPI  R30,LOW(0x6)
000f92 e0a0      	LDI  R26,HIGH(0x6)
000f93 07fa      	CPC  R31,R26
000f94 f4a9      	BRNE _0x8008A
                 ; 0004 01B7 if(*(e->data.i32) > e->min.i32){
000f95 940e 2504 	CALL SUBOPT_0x4E
000f97 937f      	PUSH R23
000f98 936f      	PUSH R22
000f99 93ff      	PUSH R31
000f9a 93ef      	PUSH R30
000f9b 940e 253c 	CALL SUBOPT_0x56
000f9d 91af      	POP  R26
000f9e 91bf      	POP  R27
000f9f 918f      	POP  R24
000fa0 919f      	POP  R25
000fa1 940e 28ec 	CALL __CPD12
000fa3 f42c      	BRGE _0x8008B
                 ; 0004 01B8 (*(e->data.i32))--;
000fa4 01f8      	MOVW R30,R16
000fa5 85a2      	LDD  R26,Z+10
000fa6 85b3      	LDD  R27,Z+11
000fa7 940e 24d1 	CALL SUBOPT_0x48
                 ; 0004 01B9 }
                 ; 0004 01BA break;
                 _0x8008B:
000fa9 c04a      	RJMP _0x80082
                 ; 0004 01BB case uint8_t_e:
                 _0x8008A:
000faa 30e3      	CPI  R30,LOW(0x3)
000fab e0a0      	LDI  R26,HIGH(0x3)
000fac 07fa      	CPC  R31,R26
000fad f431      	BRNE _0x8008C
                 ; 0004 01BC PRINT("data = %d min %d max %d\r\n",*(e->data.u8),  e->min.u8,  e->max.u8 );
                 ; 0004 01BD if(*(e->data.u8) > e->min.u8){
000fae 940e 251d 	CALL SUBOPT_0x52
000fb0 f410      	BRSH _0x8008D
                 ; 0004 01BE PRINT("--\r\n");
                 ; 0004 01BF (*(e->data.u8))--;
000fb1 940e 2524 	CALL SUBOPT_0x53
                 ; 0004 01C0 //(*(e->data.u8)) = (*(e->data.u8)) - 1;
                 ; 0004 01C1 }
                 ; 0004 01C2 PRINT("data = %d min %d max %d\r\n",*(e->data.u8),  e->min.u8,  e->max.u8 );
                 _0x8008D:
                 ; 0004 01C3 break;
000fb3 c040      	RJMP _0x80082
                 ; 0004 01C4 case uint16_t_e:
                 _0x8008C:
000fb4 30e5      	CPI  R30,LOW(0x5)
000fb5 e0a0      	LDI  R26,HIGH(0x5)
000fb6 07fa      	CPC  R31,R26
000fb7 f431      	BRNE _0x8008E
                 ; 0004 01C5 if(*(e->data.u16) > e->min.u16){
000fb8 940e 252b 	CALL SUBOPT_0x54
000fba f410      	BRSH _0x8008F
                 ; 0004 01C6 (*(e->data.u16))--;
000fbb 940e 2533 	CALL SUBOPT_0x55
                 ; 0004 01C7 }
                 ; 0004 01C8 break;
                 _0x8008F:
000fbd c036      	RJMP _0x80082
                 ; 0004 01C9 case uint32_t_e:
                 _0x8008E:
000fbe 30e7      	CPI  R30,LOW(0x7)
000fbf e0a0      	LDI  R26,HIGH(0x7)
000fc0 07fa      	CPC  R31,R26
000fc1 f4a9      	BRNE _0x80090
                 ; 0004 01CA if(*(e->data.u32) > e->min.u32){
000fc2 940e 2504 	CALL SUBOPT_0x4E
000fc4 937f      	PUSH R23
000fc5 936f      	PUSH R22
000fc6 93ff      	PUSH R31
000fc7 93ef      	PUSH R30
000fc8 940e 253c 	CALL SUBOPT_0x56
000fca 91af      	POP  R26
000fcb 91bf      	POP  R27
000fcc 918f      	POP  R24
000fcd 919f      	POP  R25
000fce 940e 28ec 	CALL __CPD12
000fd0 f428      	BRSH _0x80091
                 ; 0004 01CB (*(e->data.u32))--;
000fd1 01f8      	MOVW R30,R16
000fd2 85a2      	LDD  R26,Z+10
000fd3 85b3      	LDD  R27,Z+11
000fd4 940e 24d1 	CALL SUBOPT_0x48
                 ; 0004 01CC }
                 ; 0004 01CD break;
                 _0x80091:
000fd6 c01d      	RJMP _0x80082
                 ; 0004 01CE case float_e:
                 _0x80090:
000fd7 30e8      	CPI  R30,LOW(0x8)
000fd8 e0a0      	LDI  R26,HIGH(0x8)
000fd9 07fa      	CPC  R31,R26
000fda f4c9      	BRNE _0x80092
                 ; 0004 01CF if(*(e->data.f) > e->min.f){
000fdb 940e 2504 	CALL SUBOPT_0x4E
000fdd 937f      	PUSH R23
000fde 936f      	PUSH R22
000fdf 93ff      	PUSH R31
000fe0 93ef      	PUSH R30
000fe1 940e 253c 	CALL SUBOPT_0x56
000fe3 91af      	POP  R26
000fe4 91bf      	POP  R27
000fe5 918f      	POP  R24
000fe6 919f      	POP  R25
000fe7 940e 2a8e 	CALL __CMPF12
000fe9 f009      	BREQ PC+2
000fea f408      	BRCC PC+2
000feb c008      	RJMP _0x80093
                 ; 0004 01D0 (*(e->data.f))--;
000fec 940e 2504 	CALL SUBOPT_0x4E
000fee 940e 2516 	CALL SUBOPT_0x51
000ff0 940e 2881 	CALL __PUTDP1
000ff2 940e 250f 	CALL SUBOPT_0x50
                 ; 0004 01D1 }
                 ; 0004 01D2 break;
                 _0x80093:
                 ; 0004 01D3 case str_e:
                 _0x80092:
                 ; 0004 01D4 break;
                 ; 0004 01D5 }
                 _0x80082:
                 ; 0004 01D6 PRINT("<<<decrement\r\n");
                 ; 0004 01D7 }
000ff4 940c 10c9 	JMP  _0x2140017
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;typedef enum{
                 ;pressed_none = 0,
                 ;pressed_RightButton  = 0x1<<0,
                 ;pressed_LeftButton   = 0x1<<1,
                 ;pressed_TopButton    = 0x1<<2,
                 ;pressed_BottomButton = 0x1<<3,
                 ;pressed_SelButton    = 0x1<<4,
                 ;}button_pressed_e;
                 ;void emit_command(button_callbacks_t* bc, button_pressed_e cmd){
                 ; 0005 001B void emit_command(button_callbacks_t* bc, button_pressed_e cmd){
                 
                 	.CSEG
                 _emit_command:
                 ; .FSTART _emit_command
                 ; 0005 001C switch (cmd){
000ff6 940e 2387 	CALL SUBOPT_0x22
                 ;	*bc -> R18,R19
                 ;	cmd -> R17
000ff8 e0f0      	LDI  R31,0
                 ; 0005 001D case pressed_none:
000ff9 9730      	SBIW R30,0
000ffa f149      	BREQ _0xA0005
                 ; 0005 001E break;
                 ; 0005 001F case pressed_RightButton:
000ffb 30e1      	CPI  R30,LOW(0x1)
000ffc e0a0      	LDI  R26,HIGH(0x1)
000ffd 07fa      	CPC  R31,R26
000ffe f421      	BRNE _0xA0007
                 ; 0005 0020 bc->right();
000fff 01f9      	MOVW R30,R18
                +
001000 8002     +LDD R0 , Z + 2
001001 8013     +LDD R1 , Z + 2 + 1
                 	__GETWRZ 0,1,2
001002 c01f      	RJMP _0xA0028
                 ; 0005 0021 break;
                 ; 0005 0022 case pressed_LeftButton:
                 _0xA0007:
001003 30e2      	CPI  R30,LOW(0x2)
001004 e0a0      	LDI  R26,HIGH(0x2)
001005 07fa      	CPC  R31,R26
001006 f421      	BRNE _0xA0008
                 ; 0005 0023 bc->left();
001007 01d9      	MOVW R26,R18
001008 91ed      	LD   R30,X+
001009 91fd      	LD   R31,X+
00100a c018      	RJMP _0xA0029
                 ; 0005 0024 break;
                 ; 0005 0025 case pressed_TopButton:
                 _0xA0008:
00100b 30e4      	CPI  R30,LOW(0x4)
00100c e0a0      	LDI  R26,HIGH(0x4)
00100d 07fa      	CPC  R31,R26
00100e f421      	BRNE _0xA0009
                 ; 0005 0026 bc->up();
00100f 01f9      	MOVW R30,R18
                +
001010 8004     +LDD R0 , Z + 4
001011 8015     +LDD R1 , Z + 4 + 1
                 	__GETWRZ 0,1,4
001012 c00f      	RJMP _0xA0028
                 ; 0005 0027 break;
                 ; 0005 0028 case pressed_BottomButton:
                 _0xA0009:
001013 30e8      	CPI  R30,LOW(0x8)
001014 e0a0      	LDI  R26,HIGH(0x8)
001015 07fa      	CPC  R31,R26
001016 f421      	BRNE _0xA000A
                 ; 0005 0029 bc->down();
001017 01f9      	MOVW R30,R18
                +
001018 8006     +LDD R0 , Z + 6
001019 8017     +LDD R1 , Z + 6 + 1
                 	__GETWRZ 0,1,6
00101a c007      	RJMP _0xA0028
                 ; 0005 002A break;
                 ; 0005 002B case pressed_SelButton:
                 _0xA000A:
00101b 31e0      	CPI  R30,LOW(0x10)
00101c e0a0      	LDI  R26,HIGH(0x10)
00101d 07fa      	CPC  R31,R26
00101e f429      	BRNE _0xA0005
                 ; 0005 002C bc->select();
00101f 01f9      	MOVW R30,R18
                +
001020 8400     +LDD R0 , Z + 8
001021 8411     +LDD R1 , Z + 8 + 1
                 	__GETWRZ 0,1,8
                 _0xA0028:
001022 01f0      	MOVW R30,R0
                 _0xA0029:
001023 9509      	ICALL
                 ; 0005 002D break;
                 ; 0005 002E }
                 _0xA0005:
                 ; 0005 002F }
001024 940e 2788 	CALL __LOADLOCR4
001026 9626      	ADIW R28,6
001027 9508      	RET
                 ; .FEND
                 ;void button_update(button_callbacks_t* bc){
                 ; 0005 0032 void button_update(button_callbacks_t* bc){
                 _button_update:
                 ; .FSTART _button_update
                 ; 0005 0033 
                 ; 0005 0034 static button_pressed_e pressed = pressed_none;
                 ; 0005 0035 button_pressed_e currently_pressed = pressed_none;
                 ; 0005 0036 uint8_t buttons_pressed = 0;
                 ; 0005 0037 static uint32_t time_pressed = 0;//for repeatedly emitting commands
                 ; 0005 0038 //without button being released
                 ; 0005 0039 //select button needs to be handled differently
                 ; 0005 003A static uint32_t time_emitted = 0;
                 ; 0005 003B uint16_t timeout_repeat = BUTTON_REPEAT_TIMEOUT_1;
                 ; 0005 003C int i = 0;
                 ; 0005 003D PRINT(">>>button_update()\r\n");
                 ; 0005 003E //jump to what was pressed last time, if user press
                 ; 0005 003F // another button while keeping 1st button, we ignore that
                 ; 0005 0040 currently_pressed |= RightButton ? pressed_RightButton : pressed_none;
001028 940e 2541 	CALL SUBOPT_0x57
                 ;	*bc -> Y+6
                 ;	currently_pressed -> R17
                 ;	buttons_pressed -> R16
                 ;	timeout_repeat -> R18,R19
                 ;	i -> R20,R21
00102a e010      	LDI  R17,0
00102b e000      	LDI  R16,0
                +
00102c e52e     +LDI R18 , LOW ( 350 )
00102d e031     +LDI R19 , HIGH ( 350 )
                 	__GETWRN 18,19,350
                +
00102e e040     +LDI R20 , LOW ( 0 )
00102f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
001030 990d      	SBIC 0x1,5
001031 c002      	RJMP _0xA000C
001032 e0e1      	LDI  R30,LOW(1)
001033 c001      	RJMP _0xA000D
                 _0xA000C:
001034 e0e0      	LDI  R30,LOW(0)
                 _0xA000D:
001035 2b1e      	OR   R17,R30
                 ; 0005 0041 currently_pressed |= LeftButton ? pressed_LeftButton : pressed_none;
001036 990e      	SBIC 0x1,6
001037 c002      	RJMP _0xA000F
001038 e0e2      	LDI  R30,LOW(2)
001039 c001      	RJMP _0xA0010
                 _0xA000F:
00103a e0e0      	LDI  R30,LOW(0)
                 _0xA0010:
00103b 2b1e      	OR   R17,R30
                 ; 0005 0042 currently_pressed |= TopButton ? pressed_TopButton : pressed_none;
00103c 990c      	SBIC 0x1,4
00103d c002      	RJMP _0xA0012
00103e e0e4      	LDI  R30,LOW(4)
00103f c001      	RJMP _0xA0013
                 _0xA0012:
001040 e0e0      	LDI  R30,LOW(0)
                 _0xA0013:
001041 2b1e      	OR   R17,R30
                 ; 0005 0043 currently_pressed |= BottomButton ? pressed_BottomButton : pressed_none;
001042 990b      	SBIC 0x1,3
001043 c002      	RJMP _0xA0015
001044 e0e8      	LDI  R30,LOW(8)
001045 c001      	RJMP _0xA0016
                 _0xA0015:
001046 e0e0      	LDI  R30,LOW(0)
                 _0xA0016:
001047 2b1e      	OR   R17,R30
                 ; 0005 0044 currently_pressed |= SelButton ? pressed_SelButton : pressed_none;
001048 990a      	SBIC 0x1,2
001049 c002      	RJMP _0xA0018
00104a e1e0      	LDI  R30,LOW(16)
00104b c001      	RJMP _0xA0019
                 _0xA0018:
00104c e0e0      	LDI  R30,LOW(0)
                 _0xA0019:
00104d 2b1e      	OR   R17,R30
                 ; 0005 0045 
                 ; 0005 0046 for (i = 0; i<8; i++){
                +
00104e e040     +LDI R20 , LOW ( 0 )
00104f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA001C:
                +
001050 3048     +CPI R20 , LOW ( 8 )
001051 e0e0     +LDI R30 , HIGH ( 8 )
001052 075e     +CPC R21 , R30
                 	__CPWRN 20,21,8
001053 f44c      	BRGE _0xA001D
                 ; 0005 0047 buttons_pressed += (currently_pressed >> i) & 0x01;
001054 2fe4      	MOV  R30,R20
001055 2fa1      	MOV  R26,R17
001056 940e 27b8 	CALL __LSRB12
001058 70e1      	ANDI R30,LOW(0x1)
001059 0f0e      	ADD  R16,R30
                 ; 0005 0048 }
                +
00105a 5f4f     +SUBI R20 , LOW ( - 1 )
00105b 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00105c cff3      	RJMP _0xA001C
                 _0xA001D:
                 ; 0005 0049 //PRINT("buttons %d\r\n", buttons_pressed);
                 ; 0005 004A if(buttons_pressed == 0 || buttons_pressed > 1 ||
                 ; 0005 004B (!(currently_pressed & pressed) && pressed != pressed_none)){
00105d 3000      	CPI  R16,0
00105e f059      	BREQ _0xA001F
00105f 3002      	CPI  R16,2
001060 f448      	BRSH _0xA001F
001061 91e0 07fb 	LDS  R30,_pressed_S0050001000
001063 23e1      	AND  R30,R17
001064 f421      	BRNE _0xA0020
001065 91a0 07fb 	LDS  R26,_pressed_S0050001000
001067 30a0      	CPI  R26,LOW(0x0)
001068 f409      	BRNE _0xA001F
                 _0xA0020:
001069 c014      	RJMP _0xA001E
                 _0xA001F:
                 ; 0005 004C PRINT("=====RESET buttons_pressed = %d\r\n", buttons_pressed);
                 ; 0005 004D time_pressed = 0;
00106a e0e0      	LDI  R30,LOW(0)
00106b 93e0 07fc 	STS  _time_pressed_S0050001000,R30
00106d 93e0 07fd 	STS  _time_pressed_S0050001000+1,R30
00106f 93e0 07fe 	STS  _time_pressed_S0050001000+2,R30
001071 93e0 07ff 	STS  _time_pressed_S0050001000+3,R30
                 ; 0005 004E time_emitted = 0;
001073 93e0 0800 	STS  _time_emitted_S0050001000,R30
001075 93e0 0801 	STS  _time_emitted_S0050001000+1,R30
001077 93e0 0802 	STS  _time_emitted_S0050001000+2,R30
001079 93e0 0803 	STS  _time_emitted_S0050001000+3,R30
                 ; 0005 004F pressed = pressed_none;
00107b 93e0 07fb 	STS  _pressed_S0050001000,R30
                 ; 0005 0050 PRINT("<<<button_update()\r\n");
                 ; 0005 0051 return;
00107d c041      	RJMP _0x2140018
                 ; 0005 0052 }
                 ; 0005 0053 
                 ; 0005 0054 //now we have only one unique button pressed
                 ; 0005 0055 if(pressed == pressed_none){//1st press
                 _0xA001E:
00107e 91e0 07fb 	LDS  R30,_pressed_S0050001000
001080 30e0      	CPI  R30,0
001081 f481      	BRNE _0xA0023
                 ; 0005 0056 PRINT("====BUTTON 0x%d prev = 0x%d==\r\n", currently_pressed, pressed);
                 ; 0005 0057 emit_command(bc, currently_pressed);
001082 940e 2545 	CALL SUBOPT_0x58
                 ; 0005 0058 pressed = currently_pressed;
001084 9310 07fb 	STS  _pressed_S0050001000,R17
                 ; 0005 0059 time_pressed = GetTick_ms();
001086 940e 0674 	CALL _GetTick_ms
001088 93e0 07fc 	STS  _time_pressed_S0050001000,R30
00108a 93f0 07fd 	STS  _time_pressed_S0050001000+1,R31
00108c 9360 07fe 	STS  _time_pressed_S0050001000+2,R22
00108e 9370 07ff 	STS  _time_pressed_S0050001000+3,R23
                 ; 0005 005A time_emitted = GetTick_ms();
001090 940e 254c 	CALL SUBOPT_0x59
                 ; 0005 005B }
                 ; 0005 005C //PRINT("tick_ms %d time_emitted %d time_pressed %d\r\n", tick_ms, time_emitted, ...
                 ; 0005 005D PRINT("PRESSED %d\r\n", tick_ms - time_pressed);
                 _0xA0023:
                 ; 0005 005E if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_2){
001092 940e 2557 	CALL SUBOPT_0x5A
                +
001094 3da1     +CPI R26 , LOW ( 0x7D1 )
001095 e0e7     +LDI R30 , HIGH ( 0x7D1 )
001096 07be     +CPC R27 , R30
001097 e0e0     +LDI R30 , BYTE3 ( 0x7D1 )
001098 078e     +CPC R24 , R30
001099 e0e0     +LDI R30 , BYTE4 ( 0x7D1 )
00109a 079e     +CPC R25 , R30
                 	__CPD2N 0x7D1
00109b f010      	BRLO _0xA0024
                 ; 0005 005F timeout_repeat =  BUTTON_REPEAT_TIMEOUT_2;
                +
00109c ec28     +LDI R18 , LOW ( 200 )
00109d e030     +LDI R19 , HIGH ( 200 )
                 	__GETWRN 18,19,200
                 ; 0005 0060 }
                 ; 0005 0061 if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_3){
                 _0xA0024:
00109e 940e 2557 	CALL SUBOPT_0x5A
0010a0 940e 2315 	CALL SUBOPT_0x19
0010a2 f010      	BRLO _0xA0025
                 ; 0005 0062 timeout_repeat =  BUTTON_REPEAT_TIMEOUT_3;
                +
0010a3 e624     +LDI R18 , LOW ( 100 )
0010a4 e030     +LDI R19 , HIGH ( 100 )
                 	__GETWRN 18,19,100
                 ; 0005 0063 }
                 ; 0005 0064 if(GetTick_ms() - time_emitted > timeout_repeat){
                 _0xA0025:
0010a5 940e 0674 	CALL _GetTick_ms
0010a7 91a0 0800 	LDS  R26,_time_emitted_S0050001000
0010a9 91b0 0801 	LDS  R27,_time_emitted_S0050001000+1
0010ab 9180 0802 	LDS  R24,_time_emitted_S0050001000+2
0010ad 9190 0803 	LDS  R25,_time_emitted_S0050001000+3
0010af 940e 279a 	CALL __SUBD12
0010b1 01df      	MOVW R26,R30
0010b2 01cb      	MOVW R24,R22
0010b3 01f9      	MOVW R30,R18
0010b4 2766      	CLR  R22
0010b5 2777      	CLR  R23
0010b6 940e 28ec 	CALL __CPD12
0010b8 f430      	BRSH _0xA0026
                 ; 0005 0065 //PRINT("timeout_repeat\r\n");
                 ; 0005 0066 if(currently_pressed != pressed_SelButton){
0010b9 3110      	CPI  R17,16
0010ba f011      	BREQ _0xA0027
                 ; 0005 0067 emit_command(bc, currently_pressed);
0010bb 940e 2545 	CALL SUBOPT_0x58
                 ; 0005 0068 PRINT("====continous=============\r\n");
                 ; 0005 0069 }
                 ; 0005 006A time_emitted = GetTick_ms();
                 _0xA0027:
0010bd 940e 254c 	CALL SUBOPT_0x59
                 ; 0005 006B }
                 ; 0005 006C 
                 ; 0005 006D 
                 ; 0005 006E PRINT("<<<button_update()\r\n");
                 _0xA0026:
                 ; 0005 006F }
                 _0x2140018:
0010bf 940e 2786 	CALL __LOADLOCR6
0010c1 9628      	ADIW R28,8
0010c2 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;extern menuPage_t main_page;
                 ;void incrementEntry(entry_t* e);
                 ;void decrementEntry(entry_t* e);
                 ;void boiler_toggle_wrap(entry_t* e){
                 ; 0006 0014 void boiler_toggle_wrap(entry_t* e){
                 
                 	.CSEG
                 _boiler_toggle_wrap:
                 ; .FSTART _boiler_toggle_wrap
                 ; 0006 0015 (void)e;
0010c3 931a      	ST   -Y,R17
0010c4 930a      	ST   -Y,R16
0010c5 018d      	MOVW R16,R26
                 ;	*e -> R16,R17
0010c6 01f8      	MOVW R30,R16
                 ; 0006 0016 boiler_toggle();
0010c7 940e 09d5 	CALL _boiler_toggle
                 ; 0006 0017 }
                 _0x2140017:
0010c9 9109      	LD   R16,Y+
0010ca 9119      	LD   R17,Y+
0010cb 9508      	RET
                 ; .FEND
                 ;volatile entry_t main_page_list[] = {
                 ;{ .sel_callback = boiler_toggle_wrap, .left_callback = 0,               .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
                 ;};
                 
                 	.DSEG
                 _0xC0003:
00069e           	.BYTE 0x4C
                 ;menuPage_t main_page = {
                 ;main_page_list,
                 ;NUM_MAIN_PAGE,
                 ;0,
                 ;};
                 ;button_callbacks_t buttonCallbacks;
                 ;void cmdUp(void){
                 ; 0006 002D void cmdUp(void){
                 
                 	.CSEG
                 _cmdUp:
                 ; .FSTART _cmdUp
                 ; 0006 002E menuCommand(up_e);
0010cc e0a1      	LDI  R26,LOW(1)
0010cd c007      	RJMP _0x2140016
                 ; 0006 002F }
                 ; .FEND
                 ;void cmdDown(void){
                 ; 0006 0031 void cmdDown(void){
                 _cmdDown:
                 ; .FSTART _cmdDown
                 ; 0006 0032 menuCommand(down_e);
0010ce e0a2      	LDI  R26,LOW(2)
0010cf c005      	RJMP _0x2140016
                 ; 0006 0033 }
                 ; .FEND
                 ;void cmdLeft(void){
                 ; 0006 0035 void cmdLeft(void){
                 _cmdLeft:
                 ; .FSTART _cmdLeft
                 ; 0006 0036 menuCommand(right_e);
0010d0 e0a3      	LDI  R26,LOW(3)
0010d1 c003      	RJMP _0x2140016
                 ; 0006 0037 }
                 ; .FEND
                 ;void cmdRight(void){
                 ; 0006 0039 void cmdRight(void){
                 _cmdRight:
                 ; .FSTART _cmdRight
                 ; 0006 003A menuCommand(left_e);
0010d2 e0a4      	LDI  R26,LOW(4)
0010d3 c001      	RJMP _0x2140016
                 ; 0006 003B }
                 ; .FEND
                 ;void cmdSelect(void){
                 ; 0006 003D void cmdSelect(void){
                 _cmdSelect:
                 ; .FSTART _cmdSelect
                 ; 0006 003E menuCommand(enter_e);
0010d4 e0a6      	LDI  R26,LOW(6)
                 _0x2140016:
0010d5 940e 0e45 	CALL _menuCommand
                 ; 0006 003F }
0010d7 9508      	RET
                 ; .FEND
                 ;void menu_buttons_init(void){
                 ; 0006 0044 void menu_buttons_init(void){
                 _menu_buttons_init:
                 ; .FSTART _menu_buttons_init
                 ; 0006 0045 PRINT(">>>menu_buttons_init()\r\n");
                 ; 0006 0046 
                 ; 0006 0047 PRINT("str = %s\r\n", main_page_list[2].str_storage[0]);
                 ; 0006 0048 PRINT("dir = %s\r\n", weather_dep_str[0]);
                 ; 0006 0049 PRINT("data = %d\r\n", *(main_page_list[2].data.u8));
                 ; 0006 004A 
                 ; 0006 004B //main_page_list[2].data.str =  weather_dep_str[boiler.weather];
                 ; 0006 004C PRINT("weather_dep_str[boiler.weather] = %s\r\n", weather_dep_str[boiler.weather ...
                 ; 0006 004D PRINT("main_page_list[2].data.str  = %s\r\n", main_page_list[2].data.str );
                 ; 0006 004E buttonCallbacks.left = cmdLeft;
0010d8 ede0      	LDI  R30,LOW(_cmdLeft)
0010d9 e1f0      	LDI  R31,HIGH(_cmdLeft)
0010da 93e0 08cf 	STS  _buttonCallbacks,R30
0010dc 93f0 08d0 	STS  _buttonCallbacks+1,R31
                 ; 0006 004F buttonCallbacks.right = cmdRight;
0010de ede2      	LDI  R30,LOW(_cmdRight)
0010df e1f0      	LDI  R31,HIGH(_cmdRight)
                +
0010e0 93e0 08d1+STS _buttonCallbacks + ( 2 ) , R30
0010e2 93f0 08d2+STS _buttonCallbacks + ( 2 ) + 1 , R31
                 	__PUTW1MN _buttonCallbacks,2
                 ; 0006 0050 buttonCallbacks.up = cmdUp;
0010e4 ecec      	LDI  R30,LOW(_cmdUp)
0010e5 e1f0      	LDI  R31,HIGH(_cmdUp)
                +
0010e6 93e0 08d3+STS _buttonCallbacks + ( 4 ) , R30
0010e8 93f0 08d4+STS _buttonCallbacks + ( 4 ) + 1 , R31
                 	__PUTW1MN _buttonCallbacks,4
                 ; 0006 0051 buttonCallbacks.down = cmdDown;
0010ea ecee      	LDI  R30,LOW(_cmdDown)
0010eb e1f0      	LDI  R31,HIGH(_cmdDown)
                +
0010ec 93e0 08d5+STS _buttonCallbacks + ( 6 ) , R30
0010ee 93f0 08d6+STS _buttonCallbacks + ( 6 ) + 1 , R31
                 	__PUTW1MN _buttonCallbacks,6
                 ; 0006 0052 buttonCallbacks.select = cmdSelect;
0010f0 ede4      	LDI  R30,LOW(_cmdSelect)
0010f1 e1f0      	LDI  R31,HIGH(_cmdSelect)
                +
0010f2 93e0 08d7+STS _buttonCallbacks + ( 8 ) , R30
0010f4 93f0 08d8+STS _buttonCallbacks + ( 8 ) + 1 , R31
                 	__PUTW1MN _buttonCallbacks,8
                 ; 0006 0053 setActivePage(&main_page, void_e);
0010f6 e9e3      	LDI  R30,LOW(_main_page)
0010f7 e0f7      	LDI  R31,HIGH(_main_page)
0010f8 93fa      	ST   -Y,R31
0010f9 93ea      	ST   -Y,R30
0010fa e0a0      	LDI  R26,LOW(0)
0010fb 940e 0bd0 	CALL _setActivePage
                 ; 0006 0054 renderMenu();
0010fd 940e 0c5a 	CALL _renderMenu
                 ; 0006 0055 
                 ; 0006 0056 PRINT("str = %s\r\n", main_page_list[2].str_storage[0]);
                 ; 0006 0057 PRINT("dir = %s\r\n", weather_dep_str[0]);
                 ; 0006 0058 PRINT("data = %d\r\n", *(main_page_list[2].data.u8));
                 ; 0006 0059 PRINT("<<<menu_buttons_init()\r\n");
                 ; 0006 005A }
0010ff 9508      	RET
                 ; .FEND
                 ;void menu_buttons_update(void){
                 ; 0006 005C void menu_buttons_update(void){
                 _menu_buttons_update:
                 ; .FSTART _menu_buttons_update
                 ; 0006 005D button_update(&buttonCallbacks);
001100 ecaf      	LDI  R26,LOW(_buttonCallbacks)
001101 e0b8      	LDI  R27,HIGH(_buttonCallbacks)
001102 df25      	RCALL _button_update
                 ; 0006 005E }
001103 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){
                 ; 0007 0016 void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){
                 
                 	.CSEG
                 _clear:
                 ; .FSTART _clear
                 ; 0007 0017 glcd_setfillcolor(0);
001104 940e 28ab 	CALL __PUTPARD2
                 ;	x -> Y+12
                 ;	y -> Y+8
                 ;	w -> Y+4
                 ;	h -> Y+0
001106 e0e0      	LDI  R30,LOW(0)
                +
001107 93e0 06fb+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                 ; 0007 0018 glcd_fillrectround(x,y,w,h,0);
001109 85ec      	LDD  R30,Y+12
00110a 93ea      	ST   -Y,R30
00110b 85e9      	LDD  R30,Y+9
00110c 93ea      	ST   -Y,R30
00110d 81ee      	LDD  R30,Y+6
00110e 93ea      	ST   -Y,R30
00110f 81eb      	LDD  R30,Y+3
001110 93ea      	ST   -Y,R30
001111 e0a0      	LDI  R26,LOW(0)
001112 940e 19a4 	CALL _glcd_fillrectround
                 ; 0007 0019 }
001114 9660      	ADIW R28,16
001115 9508      	RET
                 ; .FEND
                 ;void drawAirTemp(void){
                 ; 0007 001C void drawAirTemp(void){
                 _drawAirTemp:
                 ; .FSTART _drawAirTemp
                 ; 0007 001D static uint32_t time = 0;
                 ; 0007 001E uint16_t x = 0;
                 ; 0007 001F uint16_t y = 0;
                 ; 0007 0020 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
001116 940e 2566 	CALL SUBOPT_0x5B
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
001118 e020     +LDI R18 , LOW ( 0 )
001119 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00111a 940e 0674 	CALL _GetTick_ms
00111c 01df      	MOVW R26,R30
00111d 01cb      	MOVW R24,R22
00111e 91e0 08d9 	LDS  R30,_time_S0070001000
001120 91f0 08da 	LDS  R31,_time_S0070001000+1
001122 9160 08db 	LDS  R22,_time_S0070001000+2
001124 9170 08dc 	LDS  R23,_time_S0070001000+3
001126 940e 256a 	CALL SUBOPT_0x5C
001128 f0d0      	BRLO _0xE0003
                 ; 0007 0021 glcd_printfxy(x,y, "%3.0f", boiler.air_temp);
001129 930a      	ST   -Y,R16
00112a 932a      	ST   -Y,R18
                +
00112b efe6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
00112c e0f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTW1FN _0xE0000,0
00112d 93fa      	ST   -Y,R31
00112e 93ea      	ST   -Y,R30
                +
00112f 91e0 0765+LDS R30 , _boiler + ( 14 )
001131 91f0 0766+LDS R31 , _boiler + ( 14 ) + 1
001133 9160 0767+LDS R22 , _boiler + ( 14 ) + 2
001135 9170 0768+LDS R23 , _boiler + ( 14 ) + 3
                 	__GETD1MN _boiler,14
001137 940e 249b 	CALL SUBOPT_0x41
                 ; 0007 0022 time = GetTick_ms();
001139 940e 0674 	CALL _GetTick_ms
00113b 93e0 08d9 	STS  _time_S0070001000,R30
00113d 93f0 08da 	STS  _time_S0070001000+1,R31
00113f 9360 08db 	STS  _time_S0070001000+2,R22
001141 9370 08dc 	STS  _time_S0070001000+3,R23
                 ; 0007 0023 }
                 ; 0007 0024 }
                 _0xE0003:
001143 940c 1370 	JMP  _0x2140014
                 ; .FEND
                 ;void drawWaterTemp(void){
                 ; 0007 0026 void drawWaterTemp(void){
                 ; 0007 0027 static uint32_t time = 0;
                 ; 0007 0028 uint16_t x = 127-7*6;
                 ; 0007 0029 uint16_t y = 0;
                 ; 0007 002A if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 002B glcd_printfxy(x,y, "%3.0f->%d", boiler.water_temp, boiler.water_goal_temp);
                 ; 0007 002C time = GetTick_ms();
                 ; 0007 002D }
                 ; 0007 002E 
                 ; 0007 002F }
                 ;void drawModelName(void){
                 ; 0007 0031 void drawModelName(void){
                 _drawModelName:
                 ; .FSTART _drawModelName
                 ; 0007 0032 static uint32_t time = 0;
                 ; 0007 0033 static char* br_str="";
                 
                 	.DSEG
                 _0xE0005:
0006ea           	.BYTE 0x1
                 
                 	.CSEG
                 ; 0007 0034 uint16_t x = 127/4;
                 ; 0007 0035 uint16_t y = 0;
                 ; 0007 0036 //glcd_printfxy(x,y, "%s",br_str);
                 ; 0007 0037 if(br_str != boiler_role_str[boiler.role]){
001145 940e 2781 	CALL __SAVELOCR4
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
001147 e10f     +LDI R16 , LOW ( 31 )
001148 e010     +LDI R17 , HIGH ( 31 )
                 	__GETWRN 16,17,31
                +
001149 e020     +LDI R18 , LOW ( 0 )
00114a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00114b 940e 2574 	CALL SUBOPT_0x5D
00114d 91ed      	LD   R30,X+
00114e 91fd      	LD   R31,X+
00114f 91a0 08e1 	LDS  R26,_br_str_S0070003000
001151 91b0 08e2 	LDS  R27,_br_str_S0070003000+1
001153 17ea      	CP   R30,R26
001154 07fb      	CPC  R31,R27
001155 f159      	BREQ _0xE0007
                 ; 0007 0038 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
001156 940e 0674 	CALL _GetTick_ms
001158 01df      	MOVW R26,R30
001159 01cb      	MOVW R24,R22
00115a 91e0 08dd 	LDS  R30,_time_S0070003000
00115c 91f0 08de 	LDS  R31,_time_S0070003000+1
00115e 9160 08df 	LDS  R22,_time_S0070003000+2
001160 9170 08e0 	LDS  R23,_time_S0070003000+3
001162 940e 256a 	CALL SUBOPT_0x5C
001164 f0e0      	BRLO _0xE0008
                 ; 0007 0039 glcd_printfxy(x,y, "%s", boiler_role_str[boiler.role]);
001165 930a      	ST   -Y,R16
001166 932a      	ST   -Y,R18
                +
001167 e0e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 16 ) )
001168 e0fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 16 ) )
                 	__POINTW1FN _0xE0000,16
001169 93fa      	ST   -Y,R31
00116a 93ea      	ST   -Y,R30
00116b 940e 2574 	CALL SUBOPT_0x5D
00116d 940e 23ee 	CALL SUBOPT_0x30
                 ; 0007 003A br_str=boiler_role_str[boiler.role];
00116f 940e 2574 	CALL SUBOPT_0x5D
001171 91ed      	LD   R30,X+
001172 91fd      	LD   R31,X+
001173 93e0 08e1 	STS  _br_str_S0070003000,R30
001175 93f0 08e2 	STS  _br_str_S0070003000+1,R31
                 ; 0007 003B time = GetTick_ms();
001177 940e 0674 	CALL _GetTick_ms
001179 93e0 08dd 	STS  _time_S0070003000,R30
00117b 93f0 08de 	STS  _time_S0070003000+1,R31
00117d 9360 08df 	STS  _time_S0070003000+2,R22
00117f 9370 08e0 	STS  _time_S0070003000+3,R23
                 ; 0007 003C }
                 ; 0007 003D 
                 ; 0007 003E }
                 _0xE0008:
                 ; 0007 003F 
                 ; 0007 0040 }
                 _0xE0007:
001181 940c 1370 	JMP  _0x2140014
                 ; .FEND
                 ;void drawPump(void){
                 ; 0007 0042 void drawPump(void){
                 _drawPump:
                 ; .FSTART _drawPump
                 ; 0007 0043 static uint32_t time = 0;
                 ; 0007 0044 static char drawn = 0;
                 ; 0007 0045 uint16_t x = 0;
                 ; 0007 0046 uint16_t y = 56;
                 ; 0007 0047 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
001183 940e 2566 	CALL SUBOPT_0x5B
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
001185 e328     +LDI R18 , LOW ( 56 )
001186 e030     +LDI R19 , HIGH ( 56 )
                 	__GETWRN 18,19,56
001187 940e 0674 	CALL _GetTick_ms
001189 01df      	MOVW R26,R30
00118a 01cb      	MOVW R24,R22
00118b 91e0 08e3 	LDS  R30,_time_S0070004000
00118d 91f0 08e4 	LDS  R31,_time_S0070004000+1
00118f 9160 08e5 	LDS  R22,_time_S0070004000+2
001191 9170 08e6 	LDS  R23,_time_S0070004000+3
001193 940e 256a 	CALL SUBOPT_0x5C
001195 f1b0      	BRLO _0xE0009
                 ; 0007 0048 if(isSetevoi_nasos_ON){
001196 9b95      	SBIS 0x12,5
001197 c010      	RJMP _0xE000A
                 ; 0007 0049 //glcd_printfxy(x,y, "TOPL_ON ");
                 ; 0007 004A if(!drawn){
001198 91e0 08e7 	LDS  R30,_drawn_S0070004000
00119a 30e0      	CPI  R30,0
00119b f459      	BRNE _0xE000B
                 ; 0007 004B glcd_putimagef(CIRCULATION_X,DEFAULT_Y ,circulation,0);
00119c e2ee      	LDI  R30,LOW(46)
00119d 93ea      	ST   -Y,R30
00119e e2ec      	LDI  R30,LOW(44)
00119f 93ea      	ST   -Y,R30
0011a0 eee2      	LDI  R30,LOW(_circulation*2)
0011a1 e0f5      	LDI  R31,HIGH(_circulation*2)
0011a2 940e 257e 	CALL SUBOPT_0x5E
                 ; 0007 004C drawn = 1;
0011a4 e0e1      	LDI  R30,LOW(1)
0011a5 93e0 08e7 	STS  _drawn_S0070004000,R30
                 ; 0007 004D }
                 ; 0007 004E }
                 _0xE000B:
                 ; 0007 004F else{
0011a7 c01a      	RJMP _0xE000C
                 _0xE000A:
                 ; 0007 0050 //glcd_printfxy(x,y, "TOPL_OFF");
                 ; 0007 0051 if(drawn){
0011a8 91e0 08e7 	LDS  R30,_drawn_S0070004000
0011aa 30e0      	CPI  R30,0
0011ab f0b1      	BREQ _0xE000D
                 ; 0007 0052 clear(CIRCULATION_X-1,DEFAULT_Y-1,circulation[0]+2,circulation[2]+2);
                +
0011ac e2ed     +LDI R30 , LOW ( 0x2D )
0011ad e0f0     +LDI R31 , HIGH ( 0x2D )
0011ae e060     +LDI R22 , BYTE3 ( 0x2D )
0011af e070     +LDI R23 , BYTE4 ( 0x2D )
                 	__GETD1N 0x2D
0011b0 940e 2583 	CALL SUBOPT_0x5F
0011b2 eee2      	LDI  R30,LOW(_circulation*2)
0011b3 e0f5      	LDI  R31,HIGH(_circulation*2)
0011b4 940e 258c 	CALL SUBOPT_0x60
0011b6 940e 28a6 	CALL __PUTPARD1
                +
0011b8 eee4     +LDI R30 , LOW ( 2 * _circulation + ( 2 ) )
0011b9 e0f5     +LDI R31 , HIGH ( 2 * _circulation + ( 2 ) )
                 	__POINTW1FN _circulation,2
0011ba 940e 258c 	CALL SUBOPT_0x60
0011bc 01df      	MOVW R26,R30
0011bd 01cb      	MOVW R24,R22
0011be df45      	RCALL _clear
                 ; 0007 0053 drawn = 0;
0011bf e0e0      	LDI  R30,LOW(0)
0011c0 93e0 08e7 	STS  _drawn_S0070004000,R30
                 ; 0007 0054 }
                 ; 0007 0055 }
                 _0xE000D:
                 _0xE000C:
                 ; 0007 0056 time = GetTick_ms();
0011c2 940e 0674 	CALL _GetTick_ms
0011c4 93e0 08e3 	STS  _time_S0070004000,R30
0011c6 93f0 08e4 	STS  _time_S0070004000+1,R31
0011c8 9360 08e5 	STS  _time_S0070004000+2,R22
0011ca 9370 08e6 	STS  _time_S0070004000+3,R23
                 ; 0007 0057 }
                 ; 0007 0058 }
                 _0xE0009:
0011cc c1a3      	RJMP _0x2140014
                 ; .FEND
                 ;void drawBurner(void){
                 ; 0007 005A void drawBurner(void){
                 _drawBurner:
                 ; .FSTART _drawBurner
                 ; 0007 005B static uint32_t time = 0;
                 ; 0007 005C static uint32_t j=0;
                 ; 0007 005D uint16_t x = 0;
                 ; 0007 005E uint16_t y = 48;
                 ; 0007 005F if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
0011cd 940e 2566 	CALL SUBOPT_0x5B
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
0011cf e320     +LDI R18 , LOW ( 48 )
0011d0 e030     +LDI R19 , HIGH ( 48 )
                 	__GETWRN 18,19,48
0011d1 940e 0674 	CALL _GetTick_ms
0011d3 01df      	MOVW R26,R30
0011d4 01cb      	MOVW R24,R22
0011d5 91e0 08e8 	LDS  R30,_time_S0070005000
0011d7 91f0 08e9 	LDS  R31,_time_S0070005000+1
0011d9 9160 08ea 	LDS  R22,_time_S0070005000+2
0011db 9170 08eb 	LDS  R23,_time_S0070005000+3
0011dd 940e 256a 	CALL SUBOPT_0x5C
0011df f150      	BRLO _0xE000E
                 ; 0007 0060 //glcd_printfxy(x,y, "BURNER");
                 ; 0007 0061 glcd_putimagef(BURNER_X,DEFAULT_Y,burner[j%3],0);
0011e0 e0e0      	LDI  R30,LOW(0)
0011e1 93ea      	ST   -Y,R30
0011e2 e2ec      	LDI  R30,LOW(44)
0011e3 93ea      	ST   -Y,R30
0011e4 91a0 08ec 	LDS  R26,_j_S0070005000
0011e6 91b0 08ed 	LDS  R27,_j_S0070005000+1
0011e8 9180 08ee 	LDS  R24,_j_S0070005000+2
0011ea 9190 08ef 	LDS  R25,_j_S0070005000+3
                +
0011ec e0e3     +LDI R30 , LOW ( 0x3 )
0011ed e0f0     +LDI R31 , HIGH ( 0x3 )
0011ee e060     +LDI R22 , BYTE3 ( 0x3 )
0011ef e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0011f0 940e 2854 	CALL __MODD21U
0011f2 940e 27c4 	CALL __LSLW2
0011f4 940e 27c0 	CALL __LSLW4
0011f6 5dee      	SUBI R30,LOW(-_burner*2)
0011f7 4ffa      	SBCI R31,HIGH(-_burner*2)
0011f8 940e 257e 	CALL SUBOPT_0x5E
                 ; 0007 0062 if(isVentilaytor_ON){
0011fa 9b93      	SBIS 0x12,3
0011fb c004      	RJMP _0xE000F
                 ; 0007 0063 j++;// if(isVentilaytor_ON)
0011fc eeac      	LDI  R26,LOW(_j_S0070005000)
0011fd e0b8      	LDI  R27,HIGH(_j_S0070005000)
0011fe 940e 225d 	CALL SUBOPT_0x1
                 ; 0007 0064 }
                 ; 0007 0065 time = GetTick_ms();
                 _0xE000F:
001200 940e 0674 	CALL _GetTick_ms
001202 93e0 08e8 	STS  _time_S0070005000,R30
001204 93f0 08e9 	STS  _time_S0070005000+1,R31
001206 9360 08ea 	STS  _time_S0070005000+2,R22
001208 9370 08eb 	STS  _time_S0070005000+3,R23
                 ; 0007 0066 }
                 ; 0007 0067 }
                 _0xE000E:
00120a c165      	RJMP _0x2140014
                 ; .FEND
                 ;void drawFire(void){
                 ; 0007 0069 void drawFire(void){
                 _drawFire:
                 ; .FSTART _drawFire
                 ; 0007 006A static uint32_t time = 0;
                 ; 0007 006B static char drawn = 0;
                 ; 0007 006C uint16_t x = 0;
                 ; 0007 006D uint16_t y = 40;
                 ; 0007 006E if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
00120b 940e 2566 	CALL SUBOPT_0x5B
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
00120d e228     +LDI R18 , LOW ( 40 )
00120e e030     +LDI R19 , HIGH ( 40 )
                 	__GETWRN 18,19,40
00120f 940e 0674 	CALL _GetTick_ms
001211 01df      	MOVW R26,R30
001212 01cb      	MOVW R24,R22
001213 91e0 08f0 	LDS  R30,_time_S0070006000
001215 91f0 08f1 	LDS  R31,_time_S0070006000+1
001217 9160 08f2 	LDS  R22,_time_S0070006000+2
001219 9170 08f3 	LDS  R23,_time_S0070006000+3
00121b 940e 256a 	CALL SUBOPT_0x5C
00121d f408      	BRSH PC+2
00121e c03f      	RJMP _0xE0010
                 ; 0007 006F if(plamya_out ||\
                 ; 0007 0070 Ion_out ||\
                 ; 0007 0071 ((boiler.role == role_UK_303) && clapan_out())){
00121f 9907      	SBIC 0x0,7
001220 c009      	RJMP _0xE0012
001221 9b04      	SBIS 0x0,4
001222 c007      	RJMP _0xE0012
                +
001223 91a0 0790+LDS R26 , _boiler + ( 57 )
                 	__GETB2MN _boiler,57
001225 30a3      	CPI  R26,LOW(0x3)
001226 f411      	BRNE _0xE0013
001227 9906      	SBIC 0x0,6
001228 c001      	RJMP _0xE0012
                 _0xE0013:
001229 c010      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 0072 //glcd_printfxy(x,y, "FIRE_ON ");
                 ; 0007 0073 if(!drawn){
00122a 91e0 08f4 	LDS  R30,_drawn_S0070006000
00122c 30e0      	CPI  R30,0
00122d f459      	BRNE _0xE0016
                 ; 0007 0074 glcd_putimagef(FIRE_X,DEFAULT_Y-1,flame,0);
00122e e1e6      	LDI  R30,LOW(22)
00122f 93ea      	ST   -Y,R30
001230 e2eb      	LDI  R30,LOW(43)
001231 93ea      	ST   -Y,R30
001232 e0e6      	LDI  R30,LOW(_flame*2)
001233 e0f5      	LDI  R31,HIGH(_flame*2)
001234 940e 257e 	CALL SUBOPT_0x5E
                 ; 0007 0075 drawn = 1;
001236 e0e1      	LDI  R30,LOW(1)
001237 93e0 08f4 	STS  _drawn_S0070006000,R30
                 ; 0007 0076 }
                 ; 0007 0077 }
                 _0xE0016:
                 ; 0007 0078 else{
001239 c01a      	RJMP _0xE0017
                 _0xE0011:
                 ; 0007 0079 //glcd_printfxy(x,y, "FIRE_OFF");
                 ; 0007 007A if(drawn){
00123a 91e0 08f4 	LDS  R30,_drawn_S0070006000
00123c 30e0      	CPI  R30,0
00123d f0b1      	BREQ _0xE0018
                 ; 0007 007B clear(FIRE_X-1,DEFAULT_Y-1,flame[0]+2,flame[2]+2);
                +
00123e e1e5     +LDI R30 , LOW ( 0x15 )
00123f e0f0     +LDI R31 , HIGH ( 0x15 )
001240 e060     +LDI R22 , BYTE3 ( 0x15 )
001241 e070     +LDI R23 , BYTE4 ( 0x15 )
                 	__GETD1N 0x15
001242 940e 2583 	CALL SUBOPT_0x5F
001244 e0e6      	LDI  R30,LOW(_flame*2)
001245 e0f5      	LDI  R31,HIGH(_flame*2)
001246 940e 258c 	CALL SUBOPT_0x60
001248 940e 28a6 	CALL __PUTPARD1
                +
00124a e0e8     +LDI R30 , LOW ( 2 * _flame + ( 2 ) )
00124b e0f5     +LDI R31 , HIGH ( 2 * _flame + ( 2 ) )
                 	__POINTW1FN _flame,2
00124c 940e 258c 	CALL SUBOPT_0x60
00124e 01df      	MOVW R26,R30
00124f 01cb      	MOVW R24,R22
001250 deb3      	RCALL _clear
                 ; 0007 007C drawn = 0;
001251 e0e0      	LDI  R30,LOW(0)
001252 93e0 08f4 	STS  _drawn_S0070006000,R30
                 ; 0007 007D }
                 ; 0007 007E }
                 _0xE0018:
                 _0xE0017:
                 ; 0007 007F time = GetTick_ms();
001254 940e 0674 	CALL _GetTick_ms
001256 93e0 08f0 	STS  _time_S0070006000,R30
001258 93f0 08f1 	STS  _time_S0070006000+1,R31
00125a 9360 08f2 	STS  _time_S0070006000+2,R22
00125c 9370 08f3 	STS  _time_S0070006000+3,R23
                 ; 0007 0080 }
                 ; 0007 0081 }
                 _0xE0010:
00125e c111      	RJMP _0x2140014
                 ; .FEND
                 ;void drawFan(void){
                 ; 0007 0083 void drawFan(void){
                 ; 0007 0084 static uint32_t time = 0;
                 ; 0007 0085 uint16_t x = 0;
                 ; 0007 0086 uint16_t y =  32;
                 ; 0007 0087 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 0088 if(isVentilaytor_ON){
                 ; 0007 0089 glcd_printfxy(x,y, "FAN_ON ");
                 ; 0007 008A }
                 ; 0007 008B else{
                 ; 0007 008C glcd_printfxy(x,y, "FAN_OFF");
                 ; 0007 008D }
                 ; 0007 008E 
                 ; 0007 008F time = GetTick_ms();
                 ; 0007 0090 }
                 ; 0007 0091 }
                 ;void drawClapan1(void){
                 ; 0007 0093 void drawClapan1(void){
                 ; 0007 0094 static uint32_t time = 0;
                 ; 0007 0095 uint16_t x = 50;
                 ; 0007 0096 uint16_t y = 32;
                 ; 0007 0097 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 0098 if(isKlapan1_ON){
                 ; 0007 0099 glcd_printfxy(x,y, "CL1_ON ");
                 ; 0007 009A }
                 ; 0007 009B else{
                 ; 0007 009C glcd_printfxy(x,y, "CL1_OFF");
                 ; 0007 009D }
                 ; 0007 009E 
                 ; 0007 009F time = GetTick_ms();
                 ; 0007 00A0 }
                 ; 0007 00A1 }
                 ;void drawClapan2(void){
                 ; 0007 00A3 void drawClapan2(void){
                 ; 0007 00A4 static uint32_t time = 0;
                 ; 0007 00A5 uint16_t x = 50;
                 ; 0007 00A6 uint16_t y = 40;
                 ; 0007 00A7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 00A8 if(isKlapan2_ON){
                 ; 0007 00A9 glcd_printfxy(x,y, "CL2_ON ");
                 ; 0007 00AA }
                 ; 0007 00AB else{
                 ; 0007 00AC glcd_printfxy(x,y, "CL2_OFF");
                 ; 0007 00AD }
                 ; 0007 00AE 
                 ; 0007 00AF time = GetTick_ms();
                 ; 0007 00B0 }
                 ; 0007 00B1 }
                 ;void drawState(void){
                 ; 0007 00B3 void drawState(void){
                 ; 0007 00B4 static uint32_t time = 0;
                 ; 0007 00B5 uint16_t x = 50;
                 ; 0007 00B6 uint16_t y = 48;
                 ; 0007 00B7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 00B8 glcd_printfxy(x,y, "%s", boiler_state_str[boiler.state]);
                 ; 0007 00B9 //PRINT("%s\r\n", boiler_state_str[boiler.state]);
                 ; 0007 00BA time = GetTick_ms();
                 ; 0007 00BB }
                 ; 0007 00BC }
                 ;void drawStartState(void){
                 ; 0007 00BE void drawStartState(void){
                 ; 0007 00BF static uint32_t time = 0;
                 ; 0007 00C0 uint16_t x = 50;
                 ; 0007 00C1 uint16_t y = 56;
                 ; 0007 00C2 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 00C3 glcd_printfxy(x,y, "%s", start_sequence_stage_str[boiler.start_stage]);
                 ; 0007 00C4 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
                 ; 0007 00C5 time = GetTick_ms();
                 ; 0007 00C6 }
                 ; 0007 00C7 }
                 ;void drawCmdState(void){
                 ; 0007 00C9 void drawCmdState(void){
                 ; 0007 00CA static uint32_t time = 0;
                 ; 0007 00CB uint16_t x = 0;
                 ; 0007 00CC uint16_t y = 48;
                 ; 0007 00CD if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                 ; 0007 00CE glcd_printfxy(x,y, "%s", boiler_state_str[boiler.command]);
                 ; 0007 00CF //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
                 ; 0007 00D0 time = GetTick_ms();
                 ; 0007 00D1 }
                 ; 0007 00D2 }
                 ;void drawError(void){
                 ; 0007 00D4 void drawError(void){
                 _drawError:
                 ; .FSTART _drawError
                 ; 0007 00D5 static uint32_t time = 0;
                 ; 0007 00D6 uint16_t x = 30;
                 ; 0007 00D7 uint16_t y = 40;
                 ; 0007 00D8 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
00125f 940e 2781 	CALL __SAVELOCR4
                 ;	x -> R16,R17
                 ;	y -> R18,R19
                +
001261 e10e     +LDI R16 , LOW ( 30 )
001262 e010     +LDI R17 , HIGH ( 30 )
                 	__GETWRN 16,17,30
                +
001263 e228     +LDI R18 , LOW ( 40 )
001264 e030     +LDI R19 , HIGH ( 40 )
                 	__GETWRN 18,19,40
001265 940e 0674 	CALL _GetTick_ms
001267 01df      	MOVW R26,R30
001268 01cb      	MOVW R24,R22
001269 91e0 08f5 	LDS  R30,_time_S007000D000
00126b 91f0 08f6 	LDS  R31,_time_S007000D000+1
00126d 9160 08f7 	LDS  R22,_time_S007000D000+2
00126f 9170 08f8 	LDS  R23,_time_S007000D000+3
001271 940e 256a 	CALL SUBOPT_0x5C
001273 f190      	BRLO _0xE0025
                 ; 0007 00D9 //glcd_printfxy(x,y, "Error %d", boiler.error);
                 ; 0007 00DA glcd_printfxy(x,y, "\x8F\xB9\xA9\xA2\xAB\xA1 %d", boiler.error);
001274 930a      	ST   -Y,R16
001275 932a      	ST   -Y,R18
                +
001276 e3e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 67 ) )
001277 e0fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 67 ) )
                 	__POINTW1FN _0xE0000,67
001278 93fa      	ST   -Y,R31
001279 93ea      	ST   -Y,R30
                +
00127a 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
00127c 27ff      	CLR  R31
00127d 2766      	CLR  R22
00127e 2777      	CLR  R23
00127f 940e 249b 	CALL SUBOPT_0x41
                 ; 0007 00DB glcd_printfxy(x,y+12, "%s", errors_str[boiler.error]);
001281 930a      	ST   -Y,R16
001282 2fe2      	MOV  R30,R18
001283 5fe4      	SUBI R30,-LOW(12)
001284 93ea      	ST   -Y,R30
                +
001285 e0e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 16 ) )
001286 e0fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 16 ) )
                 	__POINTW1FN _0xE0000,16
001287 93fa      	ST   -Y,R31
001288 93ea      	ST   -Y,R30
                +
001289 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
00128b e4a3      	LDI  R26,LOW(_errors_str)
00128c e0b7      	LDI  R27,HIGH(_errors_str)
00128d e0f0      	LDI  R31,0
00128e 0fee      	LSL  R30
00128f 1fff      	ROL  R31
001290 0fae      	ADD  R26,R30
001291 1fbf      	ADC  R27,R31
001292 940e 23ee 	CALL SUBOPT_0x30
                 ; 0007 00DC glcd_putimagef(BURNER_X,DEFAULT_Y,error_icon,0);
001294 e0e0      	LDI  R30,LOW(0)
001295 93ea      	ST   -Y,R30
001296 e2ec      	LDI  R30,LOW(44)
001297 93ea      	ST   -Y,R30
001298 e2e0      	LDI  R30,LOW(_error_icon*2)
001299 e0f6      	LDI  R31,HIGH(_error_icon*2)
00129a 940e 257e 	CALL SUBOPT_0x5E
                 ; 0007 00DD //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
                 ; 0007 00DE time = GetTick_ms();
00129c 940e 0674 	CALL _GetTick_ms
00129e 93e0 08f5 	STS  _time_S007000D000,R30
0012a0 93f0 08f6 	STS  _time_S007000D000+1,R31
0012a2 9360 08f7 	STS  _time_S007000D000+2,R22
0012a4 9370 08f8 	STS  _time_S007000D000+3,R23
                 ; 0007 00DF }
                 ; 0007 00E0 }
                 _0xE0025:
0012a6 c0c9      	RJMP _0x2140014
                 ; .FEND
                 ;void drawAntiFreeze(void){
                 ; 0007 00E2 void drawAntiFreeze(void){
                 _drawAntiFreeze:
                 ; .FSTART _drawAntiFreeze
                 ; 0007 00E3 static uint32_t time = 0;
                 ; 0007 00E4 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
0012a7 940e 0674 	CALL _GetTick_ms
0012a9 01df      	MOVW R26,R30
0012aa 01cb      	MOVW R24,R22
0012ab 91e0 08f9 	LDS  R30,_time_S007000E000
0012ad 91f0 08fa 	LDS  R31,_time_S007000E000+1
0012af 9160 08fb 	LDS  R22,_time_S007000E000+2
0012b1 9170 08fc 	LDS  R23,_time_S007000E000+3
0012b3 940e 256a 	CALL SUBOPT_0x5C
0012b5 f090      	BRLO _0xE0026
                 ; 0007 00E5 glcd_putimagef(ANTIFREEZE_X,DEFAULT_Y,snow,0);
0012b6 e5e1      	LDI  R30,LOW(81)
0012b7 93ea      	ST   -Y,R30
0012b8 e2ec      	LDI  R30,LOW(44)
0012b9 93ea      	ST   -Y,R30
0012ba e6e0      	LDI  R30,LOW(_snow*2)
0012bb e0f6      	LDI  R31,HIGH(_snow*2)
0012bc 940e 257e 	CALL SUBOPT_0x5E
                 ; 0007 00E6 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
                 ; 0007 00E7 time = GetTick_ms();
0012be 940e 0674 	CALL _GetTick_ms
0012c0 93e0 08f9 	STS  _time_S007000E000,R30
0012c2 93f0 08fa 	STS  _time_S007000E000+1,R31
0012c4 9360 08fb 	STS  _time_S007000E000+2,R22
0012c6 9370 08fc 	STS  _time_S007000E000+3,R23
                 ; 0007 00E8 }
                 ; 0007 00E9 }
                 _0xE0026:
0012c8 9508      	RET
                 ; .FEND
                 ;typedef enum
                 ;drawn_none = 0,
                 ;drawn_pictures,
                 ;drawn_error,
                 ;}drawn_e;
                 ;void widgetsUpdate(void){
                 ; 0007 00F3 void widgetsUpdate(void){
                 _widgetsUpdate:
                 ; .FSTART _widgetsUpdate
                 ; 0007 00F4 static drawn_e state = drawn_none;
                 ; 0007 00F5 //PRINT(">>>widgetsUpdate\r\n");
                 ; 0007 00F6 drawAirTemp();
0012c9 de4c      	RCALL _drawAirTemp
                 ; 0007 00F7 //drawWaterTemp();
                 ; 0007 00F8 drawModelName();
0012ca de7a      	RCALL _drawModelName
                 ; 0007 00F9 // drawPump();
                 ; 0007 00FA // //drawCmdState();
                 ; 0007 00FB // drawFire();
                 ; 0007 00FC // drawBurner();
                 ; 0007 00FD // drawAntiFreeze();
                 ; 0007 00FE if(boiler.error == error_None){
                +
0012cb 91e0 0792+LDS R30 , _boiler + ( 59 )
                 	__GETB1MN _boiler,59
0012cd 30e0      	CPI  R30,0
0012ce f471      	BRNE _0xE0027
                 ; 0007 00FF if(state != drawn_pictures){
0012cf 91a0 08fd 	LDS  R26,_state_S007000F000
0012d1 30a1      	CPI  R26,LOW(0x1)
0012d2 f029      	BREQ _0xE0028
                 ; 0007 0100 clear(0, 33, 127, 63);
0012d3 940e 2592 	CALL SUBOPT_0x61
                 ; 0007 0101 state = drawn_pictures;
0012d5 e0e1      	LDI  R30,LOW(1)
0012d6 93e0 08fd 	STS  _state_S007000F000,R30
                 ; 0007 0102 }
                 ; 0007 0103 drawPump();
                 _0xE0028:
0012d8 deaa      	RCALL _drawPump
                 ; 0007 0104 //drawCmdState();
                 ; 0007 0105 drawFire();
0012d9 df31      	RCALL _drawFire
                 ; 0007 0106 drawBurner();
0012da def2      	RCALL _drawBurner
                 ; 0007 0107 drawAntiFreeze();
0012db dfcb      	RCALL _drawAntiFreeze
                 ; 0007 0108 //drawFan();
                 ; 0007 0109 //drawClapan1();
                 ; 0007 010A //drawClapan2();
                 ; 0007 010B //drawState();
                 ; 0007 010C //drawStartState();
                 ; 0007 010D }
                 ; 0007 010E else{
0012dc c00a      	RJMP _0xE0029
                 _0xE0027:
                 ; 0007 010F if(state != drawn_error){
0012dd 91a0 08fd 	LDS  R26,_state_S007000F000
0012df 30a2      	CPI  R26,LOW(0x2)
0012e0 f031      	BREQ _0xE002A
                 ; 0007 0110 clear(0, 33, 127, 63);
0012e1 940e 2592 	CALL SUBOPT_0x61
                 ; 0007 0111 drawError();
0012e3 df7b      	RCALL _drawError
                 ; 0007 0112 state = drawn_error;
0012e4 e0e2      	LDI  R30,LOW(2)
0012e5 93e0 08fd 	STS  _state_S007000F000,R30
                 ; 0007 0113 }
                 ; 0007 0114 }
                 _0xE002A:
                 _0xE0029:
                 ; 0007 0115 //PRINT("<<<widgetsUpdate\r\n");
                 ; 0007 0116 }
0012e7 9508      	RET
                 ; .FEND
                 ;flash unsigned char sun[]=
                 ;0x09, 0x00,
                 ;0x11, 0x01, 0x92, 0x00, 0x7C, 0x00, 0x44, 0x00,
                 ;0xC7, 0x01, 0x44, 0x00, 0x7C, 0x00, 0x92, 0x00,
                 ;0x11, 0x01
                 ;0x11, 0x92, 0x7C, 0x44, 0xC7, 0x44, 0x7C, 0x92,
                 ;0x11, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
                 ;0x00, 0x01,
                 ;};
                 ;flash unsigned char water[]=
                 ;0x09, 0x00,
                 ;0x49, 0x00, 0x49, 0x00, 0x92, 0x00, 0x92, 0x00,
                 ;0x92, 0x00, 0x49, 0x00, 0x49, 0x00, 0x92, 0x00,
                 ;0x92, 0x00,
                 ;0x63, 0x9C, 0x00, 0x63, 0x9C, 0x00, 0x63, 0x9C,
                 ;0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,
                 ;0x01, 0x00,
                 ;};
                 ;flash unsigned char burner[][64]=
                 ;0x14, 0x00,
                 ;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
                 ;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0x06,
                 ;0x00, 0x1C, 0x73, 0x1E, 0x1C, 0x73, 0x9E, 0x1F,
                 ;0x73, 0x9F, 0x1F, 0xE3, 0x81, 0x1D, 0x03, 0x8F,
                 ;0x01, 0xF3, 0x9D, 0x01, 0xF3, 0x9D, 0x01, 0xF6,
                 ;0xDC, 0x00, 0x06, 0xC0, 0x00, 0x1C, 0x70, 0x00,
                 ;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
                 ;0x00, 0xF8, 0x3F, 0x00
                 ;0xC0, 0xF0, 0x38, 0x1C, 0xCC, 0xCE, 0xC6, 0x06,
                 ;0x06, 0xC6, 0xC6, 0xC6, 0xC6, 0x06, 0x06, 0x86,
                 ;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
                 ;0x80, 0xB9, 0x3B, 0x3B, 0x3A, 0x1F, 0x05, 0x3D,
                 ;0x3D, 0xB9, 0x80, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
                 ;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
                 ;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;},
                 ;0x14, 0x00,
                 ;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
                 ;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0xC6,
                 ;0x01, 0x1C, 0xE3, 0x01, 0x1C, 0xE3, 0x9C, 0x1F,
                 ;0xC3, 0xBE, 0x1F, 0x83, 0xBF, 0x1D, 0xFB, 0x83,
                 ;0x01, 0xFB, 0x8E, 0x01, 0x73, 0x8E, 0x01, 0x06,
                 ;0xCF, 0x00, 0x06, 0xC7, 0x00, 0x1C, 0x70, 0x00,
                 ;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
                 ;0x00, 0xF8, 0x3F, 0x00
                 ;0xC0, 0xF0, 0x38, 0x1C, 0x0C, 0xCE, 0xE6, 0xE6,
                 ;0x66, 0x06, 0x86, 0x86, 0x86, 0x06, 0x06, 0x86,
                 ;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
                 ;0x8C, 0x9C, 0x1C, 0x1D, 0x0F, 0x66, 0x7F, 0x7B,
                 ;0x3B, 0x83, 0x83, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
                 ;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
                 ;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;},
                 ;0x14, 0x00,
                 ;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
                 ;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0x06,
                 ;0x07, 0x1C, 0x23, 0x0F, 0x1C, 0x33, 0x8F, 0x1F,
                 ;0x7B, 0x83, 0x1F, 0xFB, 0x9F, 0x1D, 0x33, 0xBD,
                 ;0x01, 0x03, 0xB9, 0x01, 0xE3, 0x99, 0x01, 0xE6,
                 ;0xC1, 0x00, 0xC6, 0xC1, 0x00, 0x1C, 0x70, 0x00,
                 ;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
                 ;0x00, 0xF8, 0x3F, 0x00
                 ;0xC0, 0xF0, 0x38, 0x1C, 0x8C, 0xCE, 0x06, 0x06,
                 ;0xE6, 0xE6, 0xE6, 0xC6, 0x06, 0x06, 0x06, 0x86,
                 ;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
                 ;0x83, 0x87, 0x37, 0x73, 0x72, 0x7F, 0x03, 0x06,
                 ;0x1E, 0x9E, 0x8C, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
                 ;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
                 ;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;};
                 ;flash unsigned char flame[]=
                 ;0x0F, 0x00,
                 ;0x0C, 0x00,
                 ;0x38, 0x00, 0xFE, 0x01, 0xFF, 0x03, 0xFF, 0x07,
                 ;0xE1, 0x0F, 0xC0, 0x7F, 0xE0, 0x3F, 0xF1, 0x1F,
                 ;0xFF, 0x0F, 0xFF, 0x07, 0xFE, 0x03, 0x78, 0x00,
                 ;0x9C, 0x0E, 0x0E, 0x0F, 0x8F, 0xDF, 0xFE, 0xFE,
                 ;0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0x60, 0x20, 0x03,
                 ;0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07,
                 ;0x07, 0x03, 0x01, 0x00, 0x00, 0x00,
                 ;};
                 ;flash unsigned char circulation[]=
                 ;0x13, 0x00,
                 ;0x20, 0x00, 0x00, 0x30, 0x0F, 0x00, 0xF8, 0x3F,
                 ;0x00, 0xF8, 0xF0, 0x00, 0x30, 0xC0, 0x01, 0x20,
                 ;0x80, 0x01, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00,
                 ;0x03, 0x00, 0x03, 0x03, 0x80, 0x07, 0x03, 0xC0,
                 ;0x0F, 0x03, 0x00, 0x03, 0x03, 0x00, 0x03, 0x06,
                 ;0x80, 0x03, 0x0E, 0x80, 0x01, 0x5C, 0xC0, 0x01,
                 ;0x78, 0xF0, 0x00, 0x70, 0x3E, 0x00, 0x78, 0x0E,
                 ;0x00,
                 ;0xC0, 0xC0, 0x00, 0x0C, 0x1E, 0x3F, 0x0C, 0x0C,
                 ;0x06, 0x06, 0x06, 0x06, 0x0C, 0x0C, 0x18, 0x38,
                 ;0x30, 0x00, 0x00, 0x00, 0x1F, 0x7F, 0xE0, 0xC0,
                 ;0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x84, 0xE6, 0xFF, 0x3F, 0x06, 0x04,
                 ;0x00, 0x00, 0x00, 0x05, 0x07, 0x07, 0x07, 0x00,
                 ;0x00, 0x06, 0x06, 0x06, 0x03, 0x03, 0x01, 0x01,
                 ;0x00, 0x00, 0x00, 0x00,
                 ;};
                 ;flash unsigned char error_icon[]=
                 ;0x14, 0x00,
                 ;0x00, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1B,
                 ;0x00, 0x80, 0x31, 0x00, 0x80, 0x31, 0x00, 0xC0,
                 ;0x60, 0x00, 0xE0, 0xEE, 0x00, 0x60, 0xCE, 0x00,
                 ;0x30, 0x8E, 0x01, 0x30, 0x8E, 0x01, 0x18, 0x0E,
                 ;0x03, 0x18, 0x0E, 0x03, 0x0C, 0x0E, 0x06, 0x0C,
                 ;0x04, 0x06, 0x06, 0x00, 0x0C, 0x06, 0x0E, 0x0C,
                 ;0x03, 0x0E, 0x18, 0x03, 0x00, 0x18, 0xFF, 0xFF,
                 ;0x1F, 0xFF, 0xFF, 0x1F,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0x78,
                 ;0x1E, 0xC7, 0xC3, 0xC7, 0x1E, 0x78, 0xE0, 0xC0,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0,
                 ;0x3C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x9F, 0xBF,
                 ;0x9F, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x3C, 0xF0,
                 ;0xC0, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C,
                 ;0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0C,
                 ;0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F,
                 ;};
                 ;flash unsigned char snow[]=
                 ;0x14, 0x00,
                 ;0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x60, 0x0D,
                 ;0x00, 0xC8, 0x27, 0x00, 0x08, 0x21, 0x00, 0x0B,
                 ;0xA1, 0x01, 0x0E, 0xE1, 0x00, 0x3C, 0x79, 0x00,
                 ;0x67, 0xCD, 0x01, 0xC0, 0x07, 0x00, 0xC0, 0x07,
                 ;0x00, 0x67, 0xCD, 0x01, 0x3C, 0x79, 0x00, 0x0E,
                 ;0xE1, 0x00, 0x0B, 0xA1, 0x01, 0x88, 0x23, 0x00,
                 ;0xC8, 0x27, 0x00, 0x60, 0x0D, 0x00, 0x00, 0x01,
                 ;0x00, 0x00, 0x01, 0x00,
                 ;0x20, 0x60, 0xC0, 0xF8, 0x80, 0x84, 0x0C, 0x08,
                 ;0xFF, 0x08, 0x0C, 0x84, 0x80, 0xF8, 0xC0, 0x60,
                 ;0x20, 0x49, 0x69, 0x39, 0xF0, 0x10, 0x19, 0x0F,
                 ;0x86, 0xFF, 0x86, 0x0F, 0x19, 0x10, 0xF0, 0x39,
                 ;0x69, 0x49, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02,
                 ;0x03, 0x01, 0x0F, 0x01, 0x03, 0x02, 0x00, 0x01,
                 ;0x00, 0x00, 0x00,
                 ;};
                 ;flash unsigned char disk[]=
                 ;0x14, 0x00,
                 ;0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x32, 0xF0,
                 ;0x07, 0x32, 0xD0, 0x0D, 0x32, 0xD0, 0x09, 0x32,
                 ;0xF0, 0x09, 0x32, 0xF0, 0x09, 0xF2, 0xFF, 0x08,
                 ;0x02, 0x00, 0x08, 0xF2, 0xFF, 0x09, 0xFA, 0xFF,
                 ;0x0B, 0x0E, 0x00, 0x0A, 0xEE, 0xFF, 0x0A, 0xEE,
                 ;0xFF, 0x0A, 0xEE, 0xFF, 0x0A, 0xEE, 0xFF, 0x0A,
                 ;0xEE, 0xFF, 0x0A, 0x0E, 0x00, 0x0A, 0x0E, 0x00,
                 ;0x0E, 0xFE, 0xFF, 0x0F,
                 ;0x00, 0xFE, 0x02, 0x02, 0xFE, 0xFE, 0x82, 0x82,
                 ;0x82, 0x82, 0x82, 0x82, 0xFE, 0xE6, 0xFE, 0xFE,
                 ;0x7E, 0x06, 0x0C, 0xF8, 0x00, 0xFF, 0xF8, 0xFC,
                 ;0x06, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6,
                 ;0xF6, 0xF6, 0xF6, 0xF6, 0x06, 0xFC, 0x00, 0xFF,
                 ;0x00, 0x0F, 0x0F, 0x0F, 0x08, 0x09, 0x09, 0x09,
                 ;0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
                 ;0x08, 0x0F, 0x0C, 0x0F,
                 ;};
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _st7920_delay_G100:
                 ; .FSTART _st7920_delay_G100
0012e8 0000          nop
0012e9 0000          nop
0012ea 0000          nop
0012eb 9508      	RET
                 ; .FEND
                 _st7920_wrbus_G100:
                 ; .FSTART _st7920_wrbus_G100
0012ec 931a      	ST   -Y,R17
0012ed 2f1a      	MOV  R17,R26
0012ee 98aa      	CBI  0x15,2
0012ef 9aa9      	SBI  0x15,1
0012f0 efef      	LDI  R30,LOW(255)
0012f1 bbea      	OUT  0x1A,R30
0012f2 bb1b      	OUT  0x1B,R17
0012f3 dff4      	RCALL _st7920_delay_G100
0012f4 98a9      	CBI  0x15,1
0012f5 c04a      	RJMP _0x2140015
                 ; .FEND
                 _st7920_rdbus_G100:
                 ; .FSTART _st7920_rdbus_G100
0012f6 931a      	ST   -Y,R17
0012f7 940e 25a7 	CALL SUBOPT_0x62
0012f9 b319      	IN   R17,25
0012fa 98a9      	CBI  0x15,1
0012fb 2fe1      	MOV  R30,R17
0012fc c043      	RJMP _0x2140015
                 ; .FEND
                 _st7920_busy_G100:
                 ; .FSTART _st7920_busy_G100
0012fd 98ab      	CBI  0x15,3
0012fe 940e 25a7 	CALL SUBOPT_0x62
                 _0x2000003:
001300 99cf      	SBIC 0x19,7
001301 cffe      	RJMP _0x2000003
001302 98a9      	CBI  0x15,1
                +
001303 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
001304 958a     +DEC R24
001305 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
001306 9508      	RET
                 ; .FEND
                 _st7920_wrdata:
                 ; .FSTART _st7920_wrdata
001307 931a      	ST   -Y,R17
001308 2f1a      	MOV  R17,R26
001309 dff3      	RCALL _st7920_busy_G100
00130a 9aab      	SBI  0x15,3
00130b 2fa1      	MOV  R26,R17
00130c dfdf      	RCALL _st7920_wrbus_G100
00130d c032      	RJMP _0x2140015
                 ; .FEND
                 _st7920_rddata:
                 ; .FSTART _st7920_rddata
00130e dfee      	RCALL _st7920_busy_G100
00130f 9aab      	SBI  0x15,3
001310 dfe5      	RCALL _st7920_rdbus_G100
001311 9508      	RET
                 ; .FEND
                 _st7920_wrcmd:
                 ; .FSTART _st7920_wrcmd
001312 931a      	ST   -Y,R17
001313 2f1a      	MOV  R17,R26
001314 dfe8      	RCALL _st7920_busy_G100
001315 2fa1      	MOV  R26,R17
001316 dfd5      	RCALL _st7920_wrbus_G100
001317 c028      	RJMP _0x2140015
                 ; .FEND
                 _st7920_setxy_G100:
                 ; .FSTART _st7920_setxy_G100
001318 940e 25ad 	CALL SUBOPT_0x63
00131a 2fe1      	MOV  R30,R17
00131b 71ef      	ANDI R30,LOW(0x1F)
00131c 68e0      	ORI  R30,0x80
00131d 2fae      	MOV  R26,R30
00131e dff3      	RCALL _st7920_wrcmd
00131f 3210      	CPI  R17,32
001320 f008      	BRLO _0x2000006
001321 6800      	ORI  R16,LOW(128)
                 _0x2000006:
001322 2fe0      	MOV  R30,R16
001323 95e2      	SWAP R30
001324 70ef      	ANDI R30,0xF
001325 68e0      	ORI  R30,0x80
001326 2fae      	MOV  R26,R30
001327 dfea      	RCALL _st7920_wrcmd
001328 940c 182f 	JMP  _0x214000D
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00132a 931a      	ST   -Y,R17
00132b 2f1a      	MOV  R17,R26
00132c 940e 25b2 	CALL SUBOPT_0x64
00132e 3010      	CPI  R17,0
00132f f011      	BREQ _0x2000007
001330 e0ec      	LDI  R30,LOW(12)
001331 c001      	RJMP _0x2000008
                 _0x2000007:
001332 e0e8      	LDI  R30,LOW(8)
                 _0x2000008:
001333 2fae      	MOV  R26,R30
001334 dfdd      	RCALL _st7920_wrcmd
001335 3010      	CPI  R17,0
001336 f011      	BREQ _0x200000A
001337 e0e2      	LDI  R30,LOW(2)
001338 c001      	RJMP _0x200000B
                 _0x200000A:
001339 e0e0      	LDI  R30,LOW(0)
                 _0x200000B:
00133a 93e0 08fe 	STS  _st7920_graphics_on_G100,R30
00133c 940e 25b2 	CALL SUBOPT_0x64
00133e 940e 25b8 	CALL SUBOPT_0x65
                 _0x2140015:
001340 9119      	LD   R17,Y+
001341 9508      	RET
                 ; .FEND
                 _glcd_cleartext:
                 ; .FSTART _glcd_cleartext
001342 940e 25b2 	CALL SUBOPT_0x64
001344 e0a1      	LDI  R26,LOW(1)
001345 dfcc      	RCALL _st7920_wrcmd
001346 e0e0      	LDI  R30,LOW(0)
001347 93e0 0901 	STS  _yt_G100,R30
001349 93e0 0900 	STS  _xt_G100,R30
00134b 93ea      	ST   -Y,R30
00134c e0a0      	LDI  R26,LOW(0)
00134d 940e 1824 	CALL _glcd_moveto
00134f 9508      	RET
                 ; .FEND
                 _glcd_cleargraphics:
                 ; .FSTART _glcd_cleargraphics
001350 940e 2781 	CALL __SAVELOCR4
001352 e030      	LDI  R19,0
                +
001353 91e0 06ec+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
001355 30e0      	CPI  R30,0
001356 f009      	BREQ _0x200000D
001357 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
001358 940e 25b8 	CALL SUBOPT_0x65
00135a e000      	LDI  R16,LOW(0)
                 _0x200000E:
00135b 3400      	CPI  R16,64
00135c f470      	BRSH _0x2000010
00135d e0e0      	LDI  R30,LOW(0)
00135e 93ea      	ST   -Y,R30
00135f 2fa0      	MOV  R26,R16
001360 5f0f      	SUBI R16,-1
001361 dfb6      	RCALL _st7920_setxy_G100
001362 e110      	LDI  R17,LOW(16)
                 _0x2000011:
001363 2fe1      	MOV  R30,R17
001364 5011      	SUBI R17,1
001365 30e0      	CPI  R30,0
001366 f019      	BREQ _0x2000013
001367 2fa3      	MOV  R26,R19
001368 df9e      	RCALL _st7920_wrdata
001369 cff9      	RJMP _0x2000011
                 _0x2000013:
00136a cff0      	RJMP _0x200000E
                 _0x2000010:
00136b e0e0      	LDI  R30,LOW(0)
00136c 93ea      	ST   -Y,R30
00136d e0a0      	LDI  R26,LOW(0)
00136e 940e 1824 	CALL _glcd_moveto
                 _0x2140014:
001370 940e 2788 	CALL __LOADLOCR4
001372 9624      	ADIW R28,4
001373 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
001374 dfcd      	RCALL _glcd_cleartext
001375 dfda      	RCALL _glcd_cleargraphics
001376 9508      	RET
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
001377 931a      	ST   -Y,R17
001378 930a      	ST   -Y,R16
001379 018d      	MOVW R16,R26
00137a 9aa1      	SBI  0x14,1
00137b 98a9      	CBI  0x15,1
00137c 9aa2      	SBI  0x14,2
00137d 9aaa      	SBI  0x15,2
00137e 9aa3      	SBI  0x14,3
00137f 98ab      	CBI  0x15,3
001380 9aa0      	SBI  0x14,0
001381 e3a2      	LDI  R26,LOW(50)
001382 e0b0      	LDI  R27,0
001383 940e 2aae 	CALL _delay_ms
001385 98a8      	CBI  0x15,0
001386 e0a1      	LDI  R26,LOW(1)
001387 e0b0      	LDI  R27,0
001388 940e 2aae 	CALL _delay_ms
00138a 9aa8      	SBI  0x15,0
00138b e0a1      	LDI  R26,LOW(1)
00138c e0b0      	LDI  R27,0
00138d 940e 2aae 	CALL _delay_ms
00138f 940e 25be 	CALL SUBOPT_0x66
001391 940e 25be 	CALL SUBOPT_0x66
001393 e0a8      	LDI  R26,LOW(8)
001394 df57      	RCALL _st7920_wrbus_G100
                +
001395 e980     +LDI R24 , LOW ( 400 )
001396 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
001397 9701     +SBIW R24 , 1
001398 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
001399 e0a1      	LDI  R26,LOW(1)
00139a df77      	RCALL _st7920_wrcmd
00139b e0af      	LDI  R26,LOW(15)
00139c e0b0      	LDI  R27,0
00139d 940e 2aae 	CALL _delay_ms
00139f e0e0      	LDI  R30,LOW(0)
0013a0 93e0 0901 	STS  _yt_G100,R30
0013a2 93e0 0900 	STS  _xt_G100,R30
0013a4 e0a6      	LDI  R26,LOW(6)
0013a5 df6c      	RCALL _st7920_wrcmd
0013a6 e3a4      	LDI  R26,LOW(52)
0013a7 df6a      	RCALL _st7920_wrcmd
0013a8 e4a0      	LDI  R26,LOW(64)
0013a9 df68      	RCALL _st7920_wrcmd
0013aa e0a2      	LDI  R26,LOW(2)
0013ab df66      	RCALL _st7920_wrcmd
0013ac e0e0      	LDI  R30,LOW(0)
0013ad 93e0 08fe 	STS  _st7920_graphics_on_G100,R30
0013af dfa0      	RCALL _glcd_cleargraphics
0013b0 e0a1      	LDI  R26,LOW(1)
0013b1 df78      	RCALL _glcd_display
0013b2 e0e1      	LDI  R30,LOW(1)
0013b3 93e0 06eb 	STS  _glcd_state,R30
0013b5 e0e0      	LDI  R30,LOW(0)
                +
0013b6 93e0 06ec+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0013b8 e0e1      	LDI  R30,LOW(1)
                +
0013b9 93e0 06f1+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0013bb 93e0 06f2+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
0013bd 2e00      	MOV  R0,R16
0013be 2a01      	OR   R0,R17
0013bf f0a1      	BREQ _0x2000014
0013c0 01d8      	MOVW R26,R16
0013c1 91ed      	LD   R30,X+
0013c2 91fd      	LD   R31,X+
                +
0013c3 93e0 06ef+STS _glcd_state + ( 4 ) , R30
0013c5 93f0 06f0+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0013c7 01d8      	MOVW R26,R16
0013c8 9612      	ADIW R26,2
0013c9 91ed      	LD   R30,X+
0013ca 91fd      	LD   R31,X+
                +
0013cb 93e0 0704+STS _glcd_state + ( 25 ) , R30
0013cd 93f0 0705+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0013cf 01d8      	MOVW R26,R16
0013d0 9614      	ADIW R26,4
0013d1 940e 2872 	CALL __GETW1P
0013d3 c00a      	RJMP _0x20000A3
                 _0x2000014:
0013d4 e0e0      	LDI  R30,LOW(0)
0013d5 e0f0      	LDI  R31,HIGH(0)
                +
0013d6 93e0 06ef+STS _glcd_state + ( 4 ) , R30
0013d8 93f0 06f0+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0013da 93e0 0704+STS _glcd_state + ( 25 ) , R30
0013dc 93f0 0705+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A3:
                +
0013de 93e0 0706+STS _glcd_state + ( 27 ) , R30
0013e0 93f0 0707+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0013e2 e0e1      	LDI  R30,LOW(1)
                +
0013e3 93e0 06f3+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0013e5 efef      	LDI  R30,LOW(255)
                +
0013e6 93e0 06f4+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0013e8 e0e1      	LDI  R30,LOW(1)
                +
0013e9 93e0 06fb+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0013eb efec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0013ec e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0013ed 93fa      	ST   -Y,R31
0013ee 93ea      	ST   -Y,R30
0013ef efef      	LDI  R30,LOW(255)
0013f0 93ea      	ST   -Y,R30
0013f1 e0a8      	LDI  R26,LOW(8)
0013f2 e0b0      	LDI  R27,0
0013f3 940e 2095 	CALL _memset
0013f5 e0e1      	LDI  R30,LOW(1)
0013f6 c29d      	RJMP _0x2140012
                 ; .FEND
                 _st7920_rdbyte_G100:
                 ; .FSTART _st7920_rdbyte_G100
0013f7 940e 25ad 	CALL SUBOPT_0x63
0013f9 930a      	ST   -Y,R16
0013fa 2fa1      	MOV  R26,R17
0013fb df1c      	RCALL _st7920_setxy_G100
0013fc df11      	RCALL _st7920_rddata
0013fd 2fe0      	MOV  R30,R16
0013fe 70ef      	ANDI R30,LOW(0xF)
0013ff 30e8      	CPI  R30,LOW(0x8)
001400 f018      	BRLO _0x2000016
001401 df0c      	RCALL _st7920_rddata
001402 93e0 08ff 	STS  _st7920_bits8_15_G100,R30
                 _0x2000016:
001404 df09      	RCALL _st7920_rddata
001405 940c 182f 	JMP  _0x214000D
                 ; .FEND
                 _st7920_wrbyte_G100:
                 ; .FSTART _st7920_wrbyte_G100
001407 940e 25c6 	CALL SUBOPT_0x67
001409 2fa0      	MOV  R26,R16
00140a df0d      	RCALL _st7920_setxy_G100
00140b 2fe3      	MOV  R30,R19
00140c 70ef      	ANDI R30,LOW(0xF)
00140d 30e8      	CPI  R30,LOW(0x8)
00140e f018      	BRLO _0x2000017
00140f 91a0 08ff 	LDS  R26,_st7920_bits8_15_G100
001411 def5      	RCALL _st7920_wrdata
                 _0x2000017:
001412 2fa1      	MOV  R26,R17
001413 def3      	RCALL _st7920_wrdata
001414 940c 1820 	JMP  _0x214000E
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
001416 940e 277f 	CALL __SAVELOCR6
001418 2f3a      	MOV  R19,R26
001419 812e      	LDD  R18,Y+6
00141a 815f      	LDD  R21,Y+7
00141b 3850      	CPI  R21,128
00141c f410      	BRSH _0x2000019
00141d 3420      	CPI  R18,64
00141e f010      	BRLO _0x2000018
                 _0x2000019:
00141f 940c 17df 	JMP  _0x214000F
                 _0x2000018:
001421 940e 25b8 	CALL SUBOPT_0x65
001423 935a      	ST   -Y,R21
001424 2fa2      	MOV  R26,R18
001425 dfd1      	RCALL _st7920_rdbyte_G100
001426 2f1e      	MOV  R17,R30
001427 2fe5      	MOV  R30,R21
001428 940e 25cc 	CALL SUBOPT_0x68
00142a 2f0e      	MOV  R16,R30
00142b 3030      	CPI  R19,0
00142c f011      	BREQ _0x200001B
00142d 2b10      	OR   R17,R16
00142e c003      	RJMP _0x200001C
                 _0x200001B:
00142f 2fe0      	MOV  R30,R16
001430 95e0      	COM  R30
001431 231e      	AND  R17,R30
                 _0x200001C:
001432 935a      	ST   -Y,R21
001433 932a      	ST   -Y,R18
001434 2fa1      	MOV  R26,R17
001435 dfd1      	RCALL _st7920_wrbyte_G100
001436 940c 17df 	JMP  _0x214000F
                 ; .FEND
                 _glcd_getpixel:
                 ; .FSTART _glcd_getpixel
001438 940e 25ad 	CALL SUBOPT_0x63
00143a 3800      	CPI  R16,128
00143b f410      	BRSH _0x200001E
00143c 3410      	CPI  R17,64
00143d f018      	BRLO _0x200001D
                 _0x200001E:
00143e e0e0      	LDI  R30,LOW(0)
00143f 940c 182f 	JMP  _0x214000D
                 _0x200001D:
001441 940e 25b8 	CALL SUBOPT_0x65
001443 930a      	ST   -Y,R16
001444 2fa1      	MOV  R26,R17
001445 dfb1      	RCALL _st7920_rdbyte_G100
001446 2f6e      	MOV  R22,R30
001447 2fe0      	MOV  R30,R16
001448 940e 25cc 	CALL SUBOPT_0x68
00144a 23e6      	AND  R30,R22
00144b f011      	BREQ _0x2000020
00144c e0e1      	LDI  R30,LOW(1)
00144d c001      	RJMP _0x2000021
                 _0x2000020:
00144e e0e0      	LDI  R30,LOW(0)
                 _0x2000021:
00144f 940c 182f 	JMP  _0x214000D
                 ; .FEND
                 _st7920_wrmasked_G100:
                 ; .FSTART _st7920_wrmasked_G100
001451 940e 277f 	CALL __SAVELOCR6
001453 2f0a      	MOV  R16,R26
001454 813e      	LDD  R19,Y+6
001455 812f      	LDD  R18,Y+7
001456 8558      	LDD  R21,Y+8
001457 8549      	LDD  R20,Y+9
001458 940e 25b8 	CALL SUBOPT_0x65
00145a 934a      	ST   -Y,R20
00145b 2fa5      	MOV  R26,R21
00145c 940e 25d5 	CALL SUBOPT_0x69
00145e 2f1e      	MOV  R17,R30
00145f 2fe0      	MOV  R30,R16
001460 30e7      	CPI  R30,LOW(0x7)
001461 f011      	BREQ _0x2000027
001462 30e8      	CPI  R30,LOW(0x8)
001463 f431      	BRNE _0x2000028
                 _0x2000027:
001464 932a      	ST   -Y,R18
001465 2fa0      	MOV  R26,R16
001466 940e 21da 	CALL _glcd_mappixcolor1bit
001468 2f2e      	MOV  R18,R30
001469 c00c      	RJMP _0x2000029
                 _0x2000028:
00146a 30e3      	CPI  R30,LOW(0x3)
00146b f411      	BRNE _0x200002B
00146c 9520      	COM  R18
00146d c002      	RJMP _0x200002C
                 _0x200002B:
00146e 30e0      	CPI  R30,0
00146f f409      	BRNE _0x200002D
                 _0x200002C:
001470 c002      	RJMP _0x200002E
                 _0x200002D:
001471 30e9      	CPI  R30,LOW(0x9)
001472 f409      	BRNE _0x200002F
                 _0x200002E:
001473 c002      	RJMP _0x2000030
                 _0x200002F:
001474 30ea      	CPI  R30,LOW(0xA)
001475 f421      	BRNE _0x2000031
                 _0x2000030:
                 _0x2000029:
001476 2fe3      	MOV  R30,R19
001477 95e0      	COM  R30
001478 231e      	AND  R17,R30
001479 c002      	RJMP _0x2000032
                 _0x2000031:
00147a 30e2      	CPI  R30,LOW(0x2)
00147b f421      	BRNE _0x2000033
                 _0x2000032:
00147c 2fe3      	MOV  R30,R19
00147d 23e2      	AND  R30,R18
00147e 2b1e      	OR   R17,R30
00147f c00c      	RJMP _0x2000025
                 _0x2000033:
001480 30e1      	CPI  R30,LOW(0x1)
001481 f421      	BRNE _0x2000034
001482 2fe3      	MOV  R30,R19
001483 23e2      	AND  R30,R18
001484 271e      	EOR  R17,R30
001485 c006      	RJMP _0x2000025
                 _0x2000034:
001486 30e4      	CPI  R30,LOW(0x4)
001487 f421      	BRNE _0x2000025
001488 2fe3      	MOV  R30,R19
001489 95e0      	COM  R30
00148a 2be2      	OR   R30,R18
00148b 231e      	AND  R17,R30
                 _0x2000025:
00148c 934a      	ST   -Y,R20
00148d 935a      	ST   -Y,R21
00148e 2fa1      	MOV  R26,R17
00148f 940e 2241 	CALL _glcd_revbits
001491 2fae      	MOV  R26,R30
001492 df74      	RCALL _st7920_wrbyte_G100
001493 940c 1a05 	JMP  _0x214000B
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
001495 93aa      	ST   -Y,R26
001496 9727      	SBIW R28,7
001497 940e 277f 	CALL __SAVELOCR6
001499 89ac      	LDD  R26,Y+20
00149a 38a0      	CPI  R26,LOW(0x80)
00149b f448      	BRSH _0x2000037
00149c 89ab      	LDD  R26,Y+19
00149d 34a0      	CPI  R26,LOW(0x40)
00149e f430      	BRSH _0x2000037
00149f 89aa      	LDD  R26,Y+18
0014a0 30a0      	CPI  R26,LOW(0x0)
0014a1 f019      	BREQ _0x2000037
0014a2 89a9      	LDD  R26,Y+17
0014a3 30a0      	CPI  R26,LOW(0x0)
0014a4 f411      	BRNE _0x2000036
                 _0x2000037:
0014a5 940c 1928 	JMP  _0x214000C
                 _0x2000036:
0014a7 89ea      	LDD  R30,Y+18
0014a8 95e6      	LSR  R30
0014a9 95e6      	LSR  R30
0014aa 95e6      	LSR  R30
0014ab 2f2e      	MOV  R18,R30
                +
0014ac 8728     +STD Y + 8 , R18
                 	__PUTBSR 18,8
0014ad 89ea      	LDD  R30,Y+18
0014ae 70e7      	ANDI R30,LOW(0x7)
0014af 87eb      	STD  Y+11,R30
0014b0 30e0      	CPI  R30,0
0014b1 f019      	BREQ _0x2000039
0014b2 85e8      	LDD  R30,Y+8
0014b3 5fef      	SUBI R30,-LOW(1)
0014b4 87e8      	STD  Y+8,R30
                 _0x2000039:
0014b5 890a      	LDD  R16,Y+18
0014b6 89ac      	LDD  R26,Y+20
0014b7 27bb      	CLR  R27
0014b8 89ea      	LDD  R30,Y+18
0014b9 e0f0      	LDI  R31,0
0014ba 0fae      	ADD  R26,R30
0014bb 1fbf      	ADC  R27,R31
0014bc 38a1      	CPI  R26,LOW(0x81)
0014bd e0e0      	LDI  R30,HIGH(0x81)
0014be 07be      	CPC  R27,R30
0014bf f020      	BRLO _0x200003A
0014c0 89ac      	LDD  R26,Y+20
0014c1 e8e0      	LDI  R30,LOW(128)
0014c2 1bea      	SUB  R30,R26
0014c3 8bea      	STD  Y+18,R30
                 _0x200003A:
0014c4 89e9      	LDD  R30,Y+17
0014c5 87ea      	STD  Y+10,R30
0014c6 89ab      	LDD  R26,Y+19
0014c7 27bb      	CLR  R27
0014c8 89e9      	LDD  R30,Y+17
0014c9 e0f0      	LDI  R31,0
0014ca 0fae      	ADD  R26,R30
0014cb 1fbf      	ADC  R27,R31
0014cc 34a1      	CPI  R26,LOW(0x41)
0014cd e0e0      	LDI  R30,HIGH(0x41)
0014ce 07be      	CPC  R27,R30
0014cf f020      	BRLO _0x200003B
0014d0 89ab      	LDD  R26,Y+19
0014d1 e4e0      	LDI  R30,LOW(64)
0014d2 1bea      	SUB  R30,R26
0014d3 8be9      	STD  Y+17,R30
                 _0x200003B:
0014d4 85ed      	LDD  R30,Y+13
0014d5 30e6      	CPI  R30,LOW(0x6)
0014d6 f009      	BREQ PC+2
0014d7 c050      	RJMP _0x200003F
0014d8 89e8      	LDD  R30,Y+16
0014d9 30e1      	CPI  R30,LOW(0x1)
0014da f411      	BRNE _0x2000043
0014db 940c 1928 	JMP  _0x214000C
                 _0x2000043:
0014dd 30e3      	CPI  R30,LOW(0x3)
0014de f441      	BRNE _0x2000046
                +
0014df 91e0 0706+LDS R30 , _glcd_state + ( 27 )
0014e1 91f0 0707+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0014e3 9730      	SBIW R30,0
0014e4 f411      	BRNE _0x2000045
0014e5 940c 1928 	JMP  _0x214000C
                 _0x2000045:
                 _0x2000046:
0014e7 85eb      	LDD  R30,Y+11
0014e8 30e0      	CPI  R30,0
0014e9 f419      	BRNE _0x2000048
0014ea 89aa      	LDD  R26,Y+18
0014eb 170a      	CP   R16,R26
0014ec f0d9      	BREQ _0x2000047
                 _0x2000048:
0014ed 2fe2      	MOV  R30,R18
0014ee 85ae      	LDD  R26,Y+14
0014ef 85bf      	LDD  R27,Y+14+1
0014f0 e0f0      	LDI  R31,0
0014f1 940e 25da 	CALL SUBOPT_0x6A
0014f3 8919      	LDD  R17,Y+17
                 _0x200004A:
0014f4 3010      	CPI  R17,0
0014f5 f091      	BREQ _0x200004C
0014f6 2f32      	MOV  R19,R18
                 _0x200004D:
0014f7 933f      	PUSH R19
0014f8 5f3f      	SUBI R19,-1
0014f9 85e8      	LDD  R30,Y+8
0014fa 91af      	POP  R26
0014fb 17ae      	CP   R26,R30
0014fc f418      	BRSH _0x200004F
0014fd 940e 25df 	CALL SUBOPT_0x6B
0014ff cff7      	RJMP _0x200004D
                 _0x200004F:
001500 2fe2      	MOV  R30,R18
001501 81ae      	LDD  R26,Y+6
001502 81bf      	LDD  R27,Y+6+1
001503 e0f0      	LDI  R31,0
001504 940e 25da 	CALL SUBOPT_0x6A
001506 5011      	SUBI R17,LOW(1)
001507 cfec      	RJMP _0x200004A
                 _0x200004C:
                 _0x2000047:
001508 8929      	LDD  R18,Y+17
001509 85ea      	LDD  R30,Y+10
00150a 17e2      	CP   R30,R18
00150b f0d9      	BREQ _0x2000050
00150c 2fa2      	MOV  R26,R18
00150d 27bb      	CLR  R27
00150e 85e8      	LDD  R30,Y+8
00150f e0f0      	LDI  R31,0
001510 940e 27de 	CALL __MULW12U
001512 85ae      	LDD  R26,Y+14
001513 85bf      	LDD  R27,Y+14+1
001514 940e 25da 	CALL SUBOPT_0x6A
                 _0x2000051:
001516 932f      	PUSH R18
001517 5f2f      	SUBI R18,-1
001518 85ea      	LDD  R30,Y+10
001519 91af      	POP  R26
00151a 17ae      	CP   R26,R30
00151b f458      	BRSH _0x2000053
00151c e030      	LDI  R19,LOW(0)
                 _0x2000054:
00151d 933f      	PUSH R19
00151e 5f3f      	SUBI R19,-1
00151f 85e8      	LDD  R30,Y+8
001520 91af      	POP  R26
001521 17ae      	CP   R26,R30
001522 f418      	BRSH _0x2000056
001523 940e 25df 	CALL SUBOPT_0x6B
001525 cff7      	RJMP _0x2000054
                 _0x2000056:
001526 cfef      	RJMP _0x2000051
                 _0x2000053:
                 _0x2000050:
001527 c00d      	RJMP _0x200003E
                 _0x200003F:
001528 30e9      	CPI  R30,LOW(0x9)
001529 f411      	BRNE _0x2000057
00152a e0e0      	LDI  R30,LOW(0)
00152b c003      	RJMP _0x20000A4
                 _0x2000057:
00152c 30ea      	CPI  R30,LOW(0xA)
00152d f439      	BRNE _0x200003E
00152e efef      	LDI  R30,LOW(255)
                 _0x20000A4:
00152f 87ea      	STD  Y+10,R30
001530 93ea      	ST   -Y,R30
001531 85ae      	LDD  R26,Y+14
001532 940e 21da 	CALL _glcd_mappixcolor1bit
001534 87ea      	STD  Y+10,R30
                 _0x200003E:
001535 89ec      	LDD  R30,Y+20
001536 70e7      	ANDI R30,LOW(0x7)
001537 2f3e      	MOV  R19,R30
001538 e0e8      	LDI  R30,LOW(8)
001539 1be3      	SUB  R30,R19
00153a 2f2e      	MOV  R18,R30
00153b 2f52      	MOV  R21,R18
00153c 89aa      	LDD  R26,Y+18
00153d 172a      	CP   R18,R26
00153e f010      	BRLO _0x200005B
00153f 895a      	LDD  R21,Y+18
001540 c00e      	RJMP _0x200005C
                 _0x200005B:
001541 3030      	CPI  R19,0
001542 f061      	BREQ _0x200005D
001543 2f43      	MOV  R20,R19
001544 89aa      	LDD  R26,Y+18
001545 30a9      	CPI  R26,LOW(0x9)
001546 f418      	BRSH _0x200005E
001547 89ea      	LDD  R30,Y+18
001548 1be2      	SUB  R30,R18
001549 2f4e      	MOV  R20,R30
                 _0x200005E:
00154a 2fe4      	MOV  R30,R20
00154b e0f0      	LDI  R31,0
00154c 56e0      	SUBI R30,LOW(-__glcd_mask*2)
00154d 4ff9      	SBCI R31,HIGH(-__glcd_mask*2)
00154e 9144      	LPM  R20,Z
                 _0x200005D:
                 _0x200005C:
00154f 933a      	ST   -Y,R19
001550 2fa5      	MOV  R26,R21
001551 940e 21cc 	CALL _glcd_getmask
001553 2f5e      	MOV  R21,R30
001554 85ab      	LDD  R26,Y+11
001555 172a      	CP   R18,R26
001556 f418      	BRSH _0x200005F
001557 85eb      	LDD  R30,Y+11
001558 1be2      	SUB  R30,R18
001559 87eb      	STD  Y+11,R30
                 _0x200005F:
00155a 85eb      	LDD  R30,Y+11
00155b e0f0      	LDI  R31,0
00155c 56e0      	SUBI R30,LOW(-__glcd_mask*2)
00155d 4ff9      	SBCI R31,HIGH(-__glcd_mask*2)
00155e 9004      	LPM  R0,Z
00155f 860c      	STD  Y+12,R0
001560 940e 25b8 	CALL SUBOPT_0x65
                 _0x2000060:
001562 89e9      	LDD  R30,Y+17
001563 50e1      	SUBI R30,LOW(1)
001564 8be9      	STD  Y+17,R30
001565 5fef      	SUBI R30,-LOW(1)
001566 f409      	BRNE PC+2
001567 c0e9      	RJMP _0x2000062
001568 e010      	LDI  R17,LOW(0)
001569 890c      	LDD  R16,Y+20
00156a 85ee      	LDD  R30,Y+14
00156b 85ff      	LDD  R31,Y+14+1
00156c 83ee      	STD  Y+6,R30
00156d 83ff      	STD  Y+6+1,R31
00156e 3030      	CPI  R19,0
00156f f409      	BRNE PC+2
001570 c096      	RJMP _0x2000063
                +
001571 874b     +STD Y + 11 , R20
                 	__PUTBSR 20,11
001572 85ad      	LDD  R26,Y+13
001573 30a6      	CPI  R26,LOW(0x6)
001574 f009      	BREQ PC+2
001575 c055      	RJMP _0x2000064
                 _0x2000065:
001576 89ea      	LDD  R30,Y+18
001577 171e      	CP   R17,R30
001578 f008      	BRLO PC+2
001579 c050      	RJMP _0x2000067
00157a 930a      	ST   -Y,R16
00157b 89ac      	LDD  R26,Y+20
00157c 940e 25d5 	CALL SUBOPT_0x69
00157e 23e5      	AND  R30,R21
00157f 2fae      	MOV  R26,R30
001580 2fe3      	MOV  R30,R19
001581 940e 27b8 	CALL __LSRB12
001583 87e9      	STD  Y+9,R30
001584 940e 25ec 	CALL SUBOPT_0x6C
001586 2e1e      	MOV  R1,R30
001587 2fe3      	MOV  R30,R19
001588 2fa5      	MOV  R26,R21
001589 940e 27b8 	CALL __LSRB12
00158b 95e0      	COM  R30
00158c 21e1      	AND  R30,R1
00158d 85a9      	LDD  R26,Y+9
00158e 2bea      	OR   R30,R26
00158f 87e9      	STD  Y+9,R30
001590 89aa      	LDD  R26,Y+18
001591 172a      	CP   R18,R26
001592 f430      	BRSH _0x2000069
001593 2fe0      	MOV  R30,R16
001594 95e6      	LSR  R30
001595 95e6      	LSR  R30
001596 95e6      	LSR  R30
001597 30ef      	CPI  R30,LOW(0xF)
001598 f040      	BRLO _0x2000068
                 _0x2000069:
001599 940e 25f4 	CALL SUBOPT_0x6D
00159b 93fa      	ST   -Y,R31
00159c 93ea      	ST   -Y,R30
00159d 85ac      	LDD  R26,Y+12
00159e 940e 221f 	CALL _glcd_writemem
0015a0 c029      	RJMP _0x2000067
                 _0x2000068:
0015a1 89aa      	LDD  R26,Y+18
0015a2 1ba1      	SUB  R26,R17
0015a3 30a8      	CPI  R26,LOW(0x8)
0015a4 f410      	BRSH _0x200006B
0015a5 85ec      	LDD  R30,Y+12
0015a6 87eb      	STD  Y+11,R30
                 _0x200006B:
0015a7 5f08      	SUBI R16,-LOW(8)
0015a8 930a      	ST   -Y,R16
0015a9 89ac      	LDD  R26,Y+20
0015aa 940e 25d5 	CALL SUBOPT_0x69
0015ac 85ab      	LDD  R26,Y+11
0015ad 23ea      	AND  R30,R26
0015ae 2fae      	MOV  R26,R30
0015af 2fe2      	MOV  R30,R18
0015b0 940e 27b0 	CALL __LSLB12
0015b2 87ea      	STD  Y+10,R30
0015b3 2fe2      	MOV  R30,R18
0015b4 85ab      	LDD  R26,Y+11
0015b5 940e 27b0 	CALL __LSLB12
0015b7 95e0      	COM  R30
0015b8 85a9      	LDD  R26,Y+9
0015b9 23ea      	AND  R30,R26
0015ba 85aa      	LDD  R26,Y+10
0015bb 2bea      	OR   R30,R26
0015bc 87ea      	STD  Y+10,R30
0015bd 940e 25f4 	CALL SUBOPT_0x6D
0015bf 9631      	ADIW R30,1
0015c0 83ef      	STD  Y+7,R30
0015c1 87f8      	STD  Y+7+1,R31
0015c2 9731      	SBIW R30,1
0015c3 93fa      	ST   -Y,R31
0015c4 93ea      	ST   -Y,R30
0015c5 85ad      	LDD  R26,Y+13
0015c6 940e 221f 	CALL _glcd_writemem
0015c8 5f18      	SUBI R17,-LOW(8)
0015c9 cfac      	RJMP _0x2000065
                 _0x2000067:
0015ca c03b      	RJMP _0x200006C
                 _0x2000064:
                 _0x200006D:
0015cb 89ea      	LDD  R30,Y+18
0015cc 171e      	CP   R17,R30
0015cd f5c0      	BRSH _0x200006F
0015ce 85ed      	LDD  R30,Y+13
0015cf 30e9      	CPI  R30,LOW(0x9)
0015d0 f011      	BREQ _0x2000074
0015d1 30ea      	CPI  R30,LOW(0xA)
0015d2 f409      	BRNE _0x2000076
                 _0x2000074:
0015d3 c00d      	RJMP _0x2000072
                 _0x2000076:
0015d4 940e 25f4 	CALL SUBOPT_0x6D
0015d6 9631      	ADIW R30,1
0015d7 83ef      	STD  Y+7,R30
0015d8 87f8      	STD  Y+7+1,R31
0015d9 9731      	SBIW R30,1
0015da 2766      	CLR  R22
0015db 2777      	CLR  R23
0015dc 01df      	MOVW R26,R30
0015dd 01cb      	MOVW R24,R22
0015de 940e 2200 	CALL _glcd_readmem
0015e0 87ea      	STD  Y+10,R30
                 _0x2000072:
0015e1 930a      	ST   -Y,R16
0015e2 89ec      	LDD  R30,Y+20
0015e3 93ea      	ST   -Y,R30
0015e4 2fe3      	MOV  R30,R19
0015e5 85ac      	LDD  R26,Y+12
0015e6 940e 27b0 	CALL __LSLB12
0015e8 93ea      	ST   -Y,R30
0015e9 935a      	ST   -Y,R21
0015ea 89a9      	LDD  R26,Y+17
0015eb de65      	RCALL _st7920_wrmasked_G100
0015ec 89aa      	LDD  R26,Y+18
0015ed 172a      	CP   R18,R26
0015ee f4b8      	BRSH _0x200006F
0015ef 2fe0      	MOV  R30,R16
0015f0 95e6      	LSR  R30
0015f1 95e6      	LSR  R30
0015f2 95e6      	LSR  R30
0015f3 30ef      	CPI  R30,LOW(0xF)
0015f4 f488      	BRSH _0x200006F
0015f5 1ba1      	SUB  R26,R17
0015f6 30a8      	CPI  R26,LOW(0x8)
0015f7 f410      	BRSH _0x2000079
0015f8 85ec      	LDD  R30,Y+12
0015f9 87eb      	STD  Y+11,R30
                 _0x2000079:
0015fa 5f08      	SUBI R16,-LOW(8)
0015fb 930a      	ST   -Y,R16
0015fc 89ec      	LDD  R30,Y+20
0015fd 93ea      	ST   -Y,R30
0015fe 2fe2      	MOV  R30,R18
0015ff 85ac      	LDD  R26,Y+12
001600 940e 27b8 	CALL __LSRB12
001602 940e 25f9 	CALL SUBOPT_0x6E
001604 5f18      	SUBI R17,-LOW(8)
001605 cfc5      	RJMP _0x200006D
                 _0x200006F:
                 _0x200006C:
001606 c03e      	RJMP _0x200007A
                 _0x2000063:
                +
001607 875b     +STD Y + 11 , R21
                 	__PUTBSR 21,11
                 _0x200007B:
001608 89ea      	LDD  R30,Y+18
001609 171e      	CP   R17,R30
00160a f5d0      	BRSH _0x200007D
00160b 89aa      	LDD  R26,Y+18
00160c 1ba1      	SUB  R26,R17
00160d 30a8      	CPI  R26,LOW(0x8)
00160e f410      	BRSH _0x200007E
00160f 85ec      	LDD  R30,Y+12
001610 87eb      	STD  Y+11,R30
                 _0x200007E:
001611 85ed      	LDD  R30,Y+13
001612 30e9      	CPI  R30,LOW(0x9)
001613 f011      	BREQ _0x2000083
001614 30ea      	CPI  R30,LOW(0xA)
001615 f409      	BRNE _0x2000085
                 _0x2000083:
001616 c009      	RJMP _0x2000081
                 _0x2000085:
001617 85ad      	LDD  R26,Y+13
001618 30a6      	CPI  R26,LOW(0x6)
001619 f419      	BRNE _0x2000087
00161a 85ab      	LDD  R26,Y+11
00161b 3faf      	CPI  R26,LOW(0xFF)
00161c f019      	BREQ _0x2000086
                 _0x2000087:
00161d 940e 25ec 	CALL SUBOPT_0x6C
00161f 87ea      	STD  Y+10,R30
                 _0x2000086:
                 _0x2000081:
001620 85ad      	LDD  R26,Y+13
001621 30a6      	CPI  R26,LOW(0x6)
001622 f4a1      	BRNE _0x2000089
001623 940e 25f4 	CALL SUBOPT_0x6D
001625 93fa      	ST   -Y,R31
001626 93ea      	ST   -Y,R30
001627 930a      	ST   -Y,R16
001628 89af      	LDD  R26,Y+23
001629 940e 25d5 	CALL SUBOPT_0x69
00162b 85ae      	LDD  R26,Y+14
00162c 23ea      	AND  R30,R26
00162d 2e0e      	MOV  R0,R30
00162e 85ee      	LDD  R30,Y+14
00162f 95e0      	COM  R30
001630 85ad      	LDD  R26,Y+13
001631 23ea      	AND  R30,R26
001632 29e0      	OR   R30,R0
001633 2fae      	MOV  R26,R30
001634 940e 221f 	CALL _glcd_writemem
001636 c006      	RJMP _0x200008A
                 _0x2000089:
001637 930a      	ST   -Y,R16
001638 89ec      	LDD  R30,Y+20
001639 93ea      	ST   -Y,R30
00163a 85ec      	LDD  R30,Y+12
00163b 940e 25f9 	CALL SUBOPT_0x6E
                 _0x200008A:
00163d 81ee      	LDD  R30,Y+6
00163e 81ff      	LDD  R31,Y+6+1
00163f 9631      	ADIW R30,1
001640 83ee      	STD  Y+6,R30
001641 83ff      	STD  Y+6+1,R31
001642 5f08      	SUBI R16,-LOW(8)
001643 5f18      	SUBI R17,-LOW(8)
001644 cfc3      	RJMP _0x200007B
                 _0x200007D:
                 _0x200007A:
001645 89eb      	LDD  R30,Y+19
001646 5fef      	SUBI R30,-LOW(1)
001647 8beb      	STD  Y+19,R30
001648 85e8      	LDD  R30,Y+8
001649 85ae      	LDD  R26,Y+14
00164a 85bf      	LDD  R27,Y+14+1
00164b e0f0      	LDI  R31,0
00164c 0fea      	ADD  R30,R26
00164d 1ffb      	ADC  R31,R27
00164e 87ee      	STD  Y+14,R30
00164f 87ff      	STD  Y+14+1,R31
001650 cf11      	RJMP _0x2000060
                 _0x2000062:
001651 c2d6      	RJMP _0x214000C
                 ; .FEND
                 _glcd_putcharcg:
                 ; .FSTART _glcd_putcharcg
001652 940e 277f 	CALL __SAVELOCR6
001654 2f3a      	MOV  R19,R26
001655 812e      	LDD  R18,Y+6
001656 815f      	LDD  R21,Y+7
001657 3150      	CPI  R21,16
001658 f008      	BRLO _0x200008D
001659 e05f      	LDI  R21,LOW(15)
                 _0x200008D:
00165a 3024      	CPI  R18,4
00165b f008      	BRLO _0x200008E
00165c e023      	LDI  R18,LOW(3)
                 _0x200008E:
00165d 2fe2      	MOV  R30,R18
00165e e0f0      	LDI  R31,0
00165f 55e6      	SUBI R30,LOW(-_st7920_base_y_G100*2)
001660 4ff9      	SBCI R31,HIGH(-_st7920_base_y_G100*2)
001661 91a4      	LPM  R26,Z
001662 2fe5      	MOV  R30,R21
001663 95e6      	LSR  R30
001664 2bea      	OR   R30,R26
001665 2f1e      	MOV  R17,R30
001666 940e 25b2 	CALL SUBOPT_0x64
001668 2fa1      	MOV  R26,R17
001669 dca8      	RCALL _st7920_wrcmd
00166a dca3      	RCALL _st7920_rddata
00166b ff50      	SBRS R21,0
00166c c002      	RJMP _0x200008F
00166d dca0      	RCALL _st7920_rddata
00166e 2f0e      	MOV  R16,R30
                 _0x200008F:
00166f 2fa1      	MOV  R26,R17
001670 dca1      	RCALL _st7920_wrcmd
001671 ff50      	SBRS R21,0
001672 c002      	RJMP _0x2000090
001673 2fa0      	MOV  R26,R16
001674 dc92      	RCALL _st7920_wrdata
                 _0x2000090:
001675 2fa3      	MOV  R26,R19
001676 dc90      	RCALL _st7920_wrdata
001677 c167      	RJMP _0x214000F
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
001678 940e 25ff 	CALL SUBOPT_0x6F
00167a f01c      	BRLT _0x2020003
00167b e0e0      	LDI  R30,LOW(0)
00167c e0f0      	LDI  R31,HIGH(0)
00167d c016      	RJMP _0x2140012
                 _0x2020003:
                +
00167e 3800     +CPI R16 , LOW ( 128 )
00167f e0e0     +LDI R30 , HIGH ( 128 )
001680 071e     +CPC R17 , R30
                 	__CPWRN 16,17,128
001681 f01c      	BRLT _0x2020004
001682 e7ef      	LDI  R30,LOW(127)
001683 e0f0      	LDI  R31,HIGH(127)
001684 c00f      	RJMP _0x2140012
                 _0x2020004:
001685 c00d      	RJMP _0x2140013
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
001686 940e 25ff 	CALL SUBOPT_0x6F
001688 f01c      	BRLT _0x2020005
001689 e0e0      	LDI  R30,LOW(0)
00168a e0f0      	LDI  R31,HIGH(0)
00168b c008      	RJMP _0x2140012
                 _0x2020005:
                +
00168c 3400     +CPI R16 , LOW ( 64 )
00168d e0e0     +LDI R30 , HIGH ( 64 )
00168e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,64
00168f f01c      	BRLT _0x2020006
001690 e3ef      	LDI  R30,LOW(63)
001691 e0f0      	LDI  R31,HIGH(63)
001692 c001      	RJMP _0x2140012
                 _0x2020006:
                 _0x2140013:
001693 01f8      	MOVW R30,R16
                 _0x2140012:
001694 9109      	LD   R16,Y+
001695 9119      	LD   R17,Y+
001696 9508      	RET
                 ; .FEND
                 _glcd_setpixel:
                 ; .FSTART _glcd_setpixel
001697 940e 25ad 	CALL SUBOPT_0x63
001699 930a      	ST   -Y,R16
00169a 931a      	ST   -Y,R17
00169b 91a0 06eb 	LDS  R26,_glcd_state
00169d dd78      	RCALL _glcd_putpixel
00169e c190      	RJMP _0x214000D
                 ; .FEND
                 _glcd_imagesize:
                 ; .FSTART _glcd_imagesize
00169f 940e 2781 	CALL __SAVELOCR4
0016a1 2f0a      	MOV  R16,R26
0016a2 813c      	LDD  R19,Y+4
0016a3 3831      	CPI  R19,129
0016a4 f410      	BRSH _0x2020008
0016a5 3401      	CPI  R16,65
0016a6 f018      	BRLO _0x2020007
                 _0x2020008:
0016a7 940e 2266 	CALL SUBOPT_0x2
0016a9 c017      	RJMP _0x2140011
                 _0x2020007:
0016aa 2fe3      	MOV  R30,R19
0016ab 70e7      	ANDI R30,LOW(0x7)
0016ac 2f1e      	MOV  R17,R30
0016ad 9536      	LSR  R19
0016ae 9536      	LSR  R19
0016af 9536      	LSR  R19
0016b0 3010      	CPI  R17,0
0016b1 f009      	BREQ _0x202000A
0016b2 5f3f      	SUBI R19,-1
                 _0x202000A:
0016b3 2fa3      	MOV  R26,R19
0016b4 27bb      	CLR  R27
0016b5 2788      	CLR  R24
0016b6 2799      	CLR  R25
0016b7 2fe0      	MOV  R30,R16
0016b8 27ff      	CLR  R31
0016b9 2766      	CLR  R22
0016ba 2777      	CLR  R23
0016bb 940e 27e6 	CALL __MULD12U
                +
0016bd 5fec     +SUBI R30 , LOW ( - 4 )
0016be 4fff     +SBCI R31 , HIGH ( - 4 )
0016bf 4f6f     +SBCI R22 , BYTE3 ( - 4 )
0016c0 4f7f     +SBCI R23 , BYTE4 ( - 4 )
                 	__ADDD1N 4
                 _0x2140011:
0016c1 940e 2788 	CALL __LOADLOCR4
0016c3 9625      	ADIW R28,5
0016c4 9508      	RET
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0016c5 93ba      	ST   -Y,R27
0016c6 93aa      	ST   -Y,R26
0016c7 9723      	SBIW R28,3
0016c8 940e 2606 	CALL SUBOPT_0x70
0016ca 018f      	MOVW R16,R30
0016cb 2e00      	MOV  R0,R16
0016cc 2a01      	OR   R0,R17
0016cd f419      	BRNE _0x202000B
0016ce e0e0      	LDI  R30,LOW(0)
0016cf e0f0      	LDI  R31,HIGH(0)
0016d0 c068      	RJMP _0x2140010
                 _0x202000B:
0016d1 940e 260c 	CALL SUBOPT_0x71
0016d3 820f      	STD  Y+7,R0
0016d4 940e 260c 	CALL SUBOPT_0x71
0016d6 820e      	STD  Y+6,R0
0016d7 940e 260c 	CALL SUBOPT_0x71
0016d9 8608      	STD  Y+8,R0
0016da 85eb      	LDD  R30,Y+11
0016db 85a8      	LDD  R26,Y+8
0016dc 17ea      	CP   R30,R26
0016dd f418      	BRSH _0x202000C
0016de e0e0      	LDI  R30,LOW(0)
0016df e0f0      	LDI  R31,HIGH(0)
0016e0 c058      	RJMP _0x2140010
                 _0x202000C:
0016e1 01f8      	MOVW R30,R16
                +
0016e2 5f0f     +SUBI R16 , LOW ( - 1 )
0016e3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0016e4 9154      	LPM  R21,Z
0016e5 85a8      	LDD  R26,Y+8
0016e6 27bb      	CLR  R27
0016e7 27ee      	CLR  R30
0016e8 0fa5      	ADD  R26,R21
0016e9 1fbe      	ADC  R27,R30
0016ea 85eb      	LDD  R30,Y+11
0016eb e0f0      	LDI  R31,0
0016ec 17ea      	CP   R30,R26
0016ed 07fb      	CPC  R31,R27
0016ee f018      	BRLO _0x202000D
0016ef e0e0      	LDI  R30,LOW(0)
0016f0 e0f0      	LDI  R31,HIGH(0)
0016f1 c047      	RJMP _0x2140010
                 _0x202000D:
0016f2 81ef      	LDD  R30,Y+7
0016f3 30e0      	CPI  R30,0
0016f4 f0e1      	BREQ _0x202000E
0016f5 85a9      	LDD  R26,Y+9
0016f6 85ba      	LDD  R27,Y+9+1
0016f7 93ec      	ST   X,R30
0016f8 95e6      	LSR  R30
0016f9 95e6      	LSR  R30
0016fa 95e6      	LSR  R30
0016fb 2f4e      	MOV  R20,R30
0016fc 81ef      	LDD  R30,Y+7
0016fd 70e7      	ANDI R30,LOW(0x7)
0016fe f009      	BREQ _0x202000F
0016ff 5f4f      	SUBI R20,-LOW(1)
                 _0x202000F:
001700 85a8      	LDD  R26,Y+8
001701 85eb      	LDD  R30,Y+11
001702 1bea      	SUB  R30,R26
001703 e0f0      	LDI  R31,0
001704 01df      	MOVW R26,R30
001705 81ee      	LDD  R30,Y+6
001706 e0f0      	LDI  R31,0
001707 940e 27de 	CALL __MULW12U
001709 01df      	MOVW R26,R30
00170a 2fe4      	MOV  R30,R20
00170b e0f0      	LDI  R31,0
00170c 940e 27de 	CALL __MULW12U
00170e 0fe0      	ADD  R30,R16
00170f 1ff1      	ADC  R31,R17
001710 c028      	RJMP _0x2140010
                 _0x202000E:
001711 0198      	MOVW R18,R16
001712 2fe5      	MOV  R30,R21
001713 e0f0      	LDI  R31,0
                +
001714 0f0e     +ADD R16 , R30
001715 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
001716 85a8      	LDD  R26,Y+8
001717 5faf      	SUBI R26,-LOW(1)
001718 87a8      	STD  Y+8,R26
001719 50a1      	SUBI R26,LOW(1)
00171a 85eb      	LDD  R30,Y+11
00171b 17ae      	CP   R26,R30
00171c f4b0      	BRSH _0x2020012
00171d 01f9      	MOVW R30,R18
00171e 91e4      	LPM  R30,Z
00171f 95e6      	LSR  R30
001720 95e6      	LSR  R30
001721 95e6      	LSR  R30
001722 2f4e      	MOV  R20,R30
001723 01f9      	MOVW R30,R18
                +
001724 5f2f     +SUBI R18 , LOW ( - 1 )
001725 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
001726 91e4      	LPM  R30,Z
001727 70e7      	ANDI R30,LOW(0x7)
001728 f009      	BREQ _0x2020013
001729 5f4f      	SUBI R20,-LOW(1)
                 _0x2020013:
00172a 81ae      	LDD  R26,Y+6
00172b 27bb      	CLR  R27
00172c 2fe4      	MOV  R30,R20
00172d e0f0      	LDI  R31,0
00172e 940e 27de 	CALL __MULW12U
                +
001730 0f0e     +ADD R16 , R30
001731 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
001732 cfe3      	RJMP _0x2020010
                 _0x2020012:
001733 01f9      	MOVW R30,R18
001734 91e4      	LPM  R30,Z
001735 85a9      	LDD  R26,Y+9
001736 85ba      	LDD  R27,Y+9+1
001737 93ec      	ST   X,R30
001738 01f8      	MOVW R30,R16
                 _0x2140010:
001739 940e 2786 	CALL __LOADLOCR6
00173b 962c      	ADIW R28,12
00173c 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
00173d e0e0      	LDI  R30,LOW(0)
                +
00173e 93e0 06ed+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
001740 91a0 06ee+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
001742 27bb      	CLR  R27
001743 940e 2611 	CALL SUBOPT_0x72
001745 e0f0      	LDI  R31,0
001746 0fae      	ADD  R26,R30
001747 1fbf      	ADC  R27,R31
                +
001748 91e0 06f2+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00174a e0f0      	LDI  R31,0
00174b 0fae      	ADD  R26,R30
00174c 1fbf      	ADC  R27,R31
00174d 940e 2618 	CALL SUBOPT_0x73
00174f 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
001750 93aa      	ST   -Y,R26
001751 9721      	SBIW R28,1
001752 940e 2606 	CALL SUBOPT_0x70
001754 9730      	SBIW R30,0
001755 f409      	BRNE PC+2
001756 c050      	RJMP _0x202003B
001757 81af      	LDD  R26,Y+7
001758 30aa      	CPI  R26,LOW(0xA)
001759 f409      	BRNE _0x202003C
00175a c049      	RJMP _0x202003D
                 _0x202003C:
00175b 81ef      	LDD  R30,Y+7
00175c 93ea      	ST   -Y,R30
00175d 01de      	MOVW R26,R28
00175e 9617      	ADIW R26,7
00175f df65      	RCALL _glcd_getcharw_G101
001760 01af      	MOVW R20,R30
001761 9730      	SBIW R30,0
001762 f409      	BRNE _0x202003E
001763 c07b      	RJMP _0x214000F
                 _0x202003E:
                +
001764 91e0 06f1+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
001766 81ae      	LDD  R26,Y+6
001767 0fea      	ADD  R30,R26
001768 2f3e      	MOV  R19,R30
                +
001769 91a0 06ed+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
00176b 27bb      	CLR  R27
00176c 940e 261d 	CALL SUBOPT_0x74
                +
00176e 3801     +CPI R16 , LOW ( 129 )
00176f e0e0     +LDI R30 , HIGH ( 129 )
001770 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
001771 f018      	BRLO _0x202003F
001772 2f03      	MOV  R16,R19
001773 2711      	CLR  R17
001774 dfc8      	RCALL _glcd_new_line_G101
                 _0x202003F:
001775 940e 2622 	CALL SUBOPT_0x75
001777 85e8      	LDD  R30,Y+8
001778 93ea      	ST   -Y,R30
001779 940e 2611 	CALL SUBOPT_0x72
00177b 93ea      	ST   -Y,R30
00177c e0e1      	LDI  R30,LOW(1)
00177d 93ea      	ST   -Y,R30
00177e 935a      	ST   -Y,R21
00177f 934a      	ST   -Y,R20
001780 e0a7      	LDI  R26,LOW(7)
001781 940e 2629 	CALL SUBOPT_0x76
001783 81ae      	LDD  R26,Y+6
001784 0fea      	ADD  R30,R26
001785 93ea      	ST   -Y,R30
                +
001786 91e0 06ee+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
001788 93ea      	ST   -Y,R30
                +
001789 91e0 06f1+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00178b 93ea      	ST   -Y,R30
00178c 940e 2611 	CALL SUBOPT_0x72
00178e 940e 262e 	CALL SUBOPT_0x77
001790 940e 2629 	CALL SUBOPT_0x76
001792 93ea      	ST   -Y,R30
                +
001793 91a0 06ee+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
001795 940e 2611 	CALL SUBOPT_0x72
001797 0fea      	ADD  R30,R26
001798 93ea      	ST   -Y,R30
001799 933a      	ST   -Y,R19
                +
00179a 91e0 06f2+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00179c 940e 262e 	CALL SUBOPT_0x77
00179e dcf6      	RCALL _glcd_block
00179f e8e0      	LDI  R30,LOW(128)
0017a0 e0f0      	LDI  R31,HIGH(128)
0017a1 17e0      	CP   R30,R16
0017a2 07f1      	CPC  R31,R17
0017a3 f411      	BRNE _0x2020040
                 _0x202003D:
0017a4 df98      	RCALL _glcd_new_line_G101
0017a5 c039      	RJMP _0x214000F
                 _0x2020040:
0017a6 c036      	RJMP _0x2020041
                 _0x202003B:
0017a7 81af      	LDD  R26,Y+7
0017a8 30aa      	CPI  R26,LOW(0xA)
0017a9 f151      	BREQ _0x2020043
                +
0017aa 91e0 06ed+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0017ac 95e6      	LSR  R30
0017ad 95e6      	LSR  R30
0017ae 95e6      	LSR  R30
0017af 2f3e      	MOV  R19,R30
                +
0017b0 91e0 06ee+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0017b2 95e2      	SWAP R30
0017b3 70ef      	ANDI R30,0xF
0017b4 2f2e      	MOV  R18,R30
0017b5 933a      	ST   -Y,R19
0017b6 932a      	ST   -Y,R18
0017b7 85a9      	LDD  R26,Y+9
0017b8 de99      	RCALL _glcd_putcharcg
0017b9 2fe3      	MOV  R30,R19
0017ba 0fee      	LSL  R30
0017bb 0fee      	LSL  R30
0017bc 0fee      	LSL  R30
                +
0017bd 93e0 06ed+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0017bf e1a0      	LDI  R26,LOW(16)
0017c0 9f2a      	MUL  R18,R26
0017c1 01f0      	MOVW R30,R0
                +
0017c2 93e0 06ee+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0017c4 940e 2622 	CALL SUBOPT_0x75
0017c6 e0e8      	LDI  R30,LOW(8)
0017c7 93ea      	ST   -Y,R30
0017c8 e1e0      	LDI  R30,LOW(16)
0017c9 940e 262e 	CALL SUBOPT_0x77
0017cb 940e 2629 	CALL SUBOPT_0x76
0017cd e0f0      	LDI  R31,0
0017ce 9638      	ADIW R30,8
0017cf 018f      	MOVW R16,R30
                +
0017d0 3800     +CPI R16 , LOW ( 128 )
0017d1 e0e0     +LDI R30 , HIGH ( 128 )
0017d2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,128
0017d3 f048      	BRLO _0x2020044
                 _0x2020043:
                +
0017d4 e000     +LDI R16 , LOW ( 0 )
0017d5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0017d6 91e0 06ee+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0017d8 e0f0      	LDI  R31,0
0017d9 9670      	ADIW R30,16
0017da 01df      	MOVW R26,R30
0017db 940e 2618 	CALL SUBOPT_0x73
                 _0x2020044:
                 _0x2020041:
                +
0017dd 9300 06ed+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x214000F:
0017df 940e 2786 	CALL __LOADLOCR6
0017e1 9628      	ADIW R28,8
0017e2 9508      	RET
                 ; .FEND
                 _glcd_putimagef:
                 ; .FSTART _glcd_putimagef
0017e3 940e 277f 	CALL __SAVELOCR6
0017e5 2f5a      	MOV  R21,R26
0017e6 8548      	LDD  R20,Y+8
0017e7 3055      	CPI  R21,5
0017e8 f500      	BRSH _0x2020067
0017e9 81ee      	LDD  R30,Y+6
0017ea 81ff      	LDD  R31,Y+6+1
0017eb 9105      	LPM  R16,Z+
0017ec 940e 2637 	CALL SUBOPT_0x78
0017ee 9115      	LPM  R17,Z+
0017ef 940e 2637 	CALL SUBOPT_0x78
0017f1 9125      	LPM  R18,Z+
0017f2 940e 2637 	CALL SUBOPT_0x78
0017f4 9135      	LPM  R19,Z+
0017f5 83ee      	STD  Y+6,R30
0017f6 83ff      	STD  Y+6+1,R31
0017f7 85e9      	LDD  R30,Y+9
0017f8 93ea      	ST   -Y,R30
0017f9 934a      	ST   -Y,R20
0017fa 930a      	ST   -Y,R16
0017fb 932a      	ST   -Y,R18
0017fc e0e1      	LDI  R30,LOW(1)
0017fd 93ea      	ST   -Y,R30
0017fe 85eb      	LDD  R30,Y+11
0017ff 85fc      	LDD  R31,Y+11+1
001800 93fa      	ST   -Y,R31
001801 93ea      	ST   -Y,R30
001802 2fa5      	MOV  R26,R21
001803 940e 1495 	CALL _glcd_block
001805 930a      	ST   -Y,R16
001806 2fa2      	MOV  R26,R18
001807 de97      	RCALL _glcd_imagesize
001808 c1fc      	RJMP _0x214000B
                 _0x2020067:
001809 940e 2266 	CALL SUBOPT_0x2
00180b c1f9      	RJMP _0x214000B
                 ; .FEND
                 _glcd_putpixelm_G101:
                 ; .FSTART _glcd_putpixelm_G101
00180c 940e 25c6 	CALL SUBOPT_0x67
00180e 930a      	ST   -Y,R16
                +
00180f 91e0 06f4+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
001811 23e1      	AND  R30,R17
001812 f019      	BREQ _0x202006D
001813 91e0 06eb 	LDS  R30,_glcd_state
001815 c002      	RJMP _0x202006E
                 _0x202006D:
                +
001816 91e0 06ec+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x202006E:
001818 2fae      	MOV  R26,R30
001819 940e 1416 	CALL _glcd_putpixel
00181b 0f11      	LSL  R17
00181c 3010      	CPI  R17,0
00181d f409      	BRNE _0x2020070
00181e e011      	LDI  R17,LOW(1)
                 _0x2020070:
00181f 2fe1      	MOV  R30,R17
                 _0x214000E:
001820 940e 2788 	CALL __LOADLOCR4
001822 9626      	ADIW R28,6
001823 9508      	RET
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
001824 940e 25ad 	CALL SUBOPT_0x63
001826 2fa0      	MOV  R26,R16
001827 27bb      	CLR  R27
001828 de4f      	RCALL _glcd_clipx
                +
001829 93e0 06ed+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00182b 2fa1      	MOV  R26,R17
00182c 27bb      	CLR  R27
00182d 940e 2618 	CALL SUBOPT_0x73
                 _0x214000D:
00182f 8119      	LDD  R17,Y+1
001830 8108      	LDD  R16,Y+0
001831 9623      	ADIW R28,3
001832 9508      	RET
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
001833 93aa      	ST   -Y,R26
001834 972b      	SBIW R28,11
001835 940e 277f 	CALL __SAVELOCR6
001837 89ac      	LDD  R26,Y+20
001838 27bb      	CLR  R27
001839 de3e      	RCALL _glcd_clipx
00183a 8bec      	STD  Y+20,R30
00183b 89aa      	LDD  R26,Y+18
00183c 27bb      	CLR  R27
00183d de3a      	RCALL _glcd_clipx
00183e 8bea      	STD  Y+18,R30
00183f 89ab      	LDD  R26,Y+19
001840 27bb      	CLR  R27
001841 de44      	RCALL _glcd_clipy
001842 8beb      	STD  Y+19,R30
001843 89a9      	LDD  R26,Y+17
001844 27bb      	CLR  R27
001845 de40      	RCALL _glcd_clipy
001846 8be9      	STD  Y+17,R30
001847 89ea      	LDD  R30,Y+18
                +
001848 93e0 06ed+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00184a 89e9      	LDD  R30,Y+17
                +
00184b 93e0 06ee+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00184d e0e1      	LDI  R30,LOW(1)
00184e 87e8      	STD  Y+8,R30
00184f 89e9      	LDD  R30,Y+17
001850 89ab      	LDD  R26,Y+19
001851 17ea      	CP   R30,R26
001852 f579      	BRNE _0x2020071
001853 891c      	LDD  R17,Y+20
001854 89aa      	LDD  R26,Y+18
001855 171a      	CP   R17,R26
001856 f431      	BRNE _0x2020072
001857 931a      	ST   -Y,R17
001858 89ec      	LDD  R30,Y+20
001859 93ea      	ST   -Y,R30
00185a e0a1      	LDI  R26,LOW(1)
00185b dfb0      	RCALL _glcd_putpixelm_G101
00185c c0cb      	RJMP _0x214000C
                 _0x2020072:
00185d 89aa      	LDD  R26,Y+18
00185e 171a      	CP   R17,R26
00185f f430      	BRSH _0x2020073
001860 89ea      	LDD  R30,Y+18
001861 1be1      	SUB  R30,R17
001862 2f0e      	MOV  R16,R30
                +
001863 e041     +LDI R20 , LOW ( 1 )
001864 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
001865 c006      	RJMP _0x2020074
                 _0x2020073:
001866 89aa      	LDD  R26,Y+18
001867 2fe1      	MOV  R30,R17
001868 1bea      	SUB  R30,R26
001869 2f0e      	MOV  R16,R30
                +
00186a ef4f     +LDI R20 , LOW ( - 1 )
00186b ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2020074:
                 _0x2020076:
00186c 893b      	LDD  R19,Y+19
                +
00186d 91e0 06f3+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00186f 83ee      	STD  Y+6,R30
                 _0x2020078:
001870 940e 263a 	CALL SUBOPT_0x79
001872 f039      	BREQ _0x202007A
001873 931a      	ST   -Y,R17
001874 933a      	ST   -Y,R19
001875 9533      	INC  R19
001876 85aa      	LDD  R26,Y+10
001877 df94      	RCALL _glcd_putpixelm_G101
001878 83ef      	STD  Y+7,R30
001879 cff6      	RJMP _0x2020078
                 _0x202007A:
00187a 81ef      	LDD  R30,Y+7
00187b 87e8      	STD  Y+8,R30
00187c 0f14      	ADD  R17,R20
00187d 2fe0      	MOV  R30,R16
00187e 5001      	SUBI R16,1
00187f 30e0      	CPI  R30,0
001880 f759      	BRNE _0x2020076
001881 c0a6      	RJMP _0x202007B
                 _0x2020071:
001882 89ea      	LDD  R30,Y+18
001883 89ac      	LDD  R26,Y+20
001884 17ea      	CP   R30,R26
001885 f541      	BRNE _0x202007C
001886 893b      	LDD  R19,Y+19
001887 89a9      	LDD  R26,Y+17
001888 173a      	CP   R19,R26
001889 f430      	BRSH _0x202007D
00188a 89e9      	LDD  R30,Y+17
00188b 1be3      	SUB  R30,R19
00188c 2f2e      	MOV  R18,R30
00188d e0e1      	LDI  R30,LOW(1)
00188e e0f0      	LDI  R31,HIGH(1)
00188f c006      	RJMP _0x202018C
                 _0x202007D:
001890 89a9      	LDD  R26,Y+17
001891 2fe3      	MOV  R30,R19
001892 1bea      	SUB  R30,R26
001893 2f2e      	MOV  R18,R30
001894 efef      	LDI  R30,LOW(65535)
001895 efff      	LDI  R31,HIGH(65535)
                 _0x202018C:
001896 87ed      	STD  Y+13,R30
001897 87fe      	STD  Y+13+1,R31
                 _0x2020080:
001898 891c      	LDD  R17,Y+20
                +
001899 91e0 06f3+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00189b 83ee      	STD  Y+6,R30
                 _0x2020082:
00189c 940e 263a 	CALL SUBOPT_0x79
00189e f031      	BREQ _0x2020084
00189f 931a      	ST   -Y,R17
0018a0 9513      	INC  R17
0018a1 940e 263f 	CALL SUBOPT_0x7A
0018a3 83ef      	STD  Y+7,R30
0018a4 cff7      	RJMP _0x2020082
                 _0x2020084:
0018a5 81ef      	LDD  R30,Y+7
0018a6 87e8      	STD  Y+8,R30
0018a7 85ed      	LDD  R30,Y+13
0018a8 0f3e      	ADD  R19,R30
0018a9 2fe2      	MOV  R30,R18
0018aa 5021      	SUBI R18,1
0018ab 30e0      	CPI  R30,0
0018ac f759      	BRNE _0x2020080
0018ad c07a      	RJMP _0x2020085
                 _0x202007C:
                +
0018ae 91e0 06f3+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0018b0 83ee      	STD  Y+6,R30
                 _0x2020086:
0018b1 940e 263a 	CALL SUBOPT_0x79
0018b3 f409      	BRNE PC+2
0018b4 c073      	RJMP _0x2020088
0018b5 891c      	LDD  R17,Y+20
0018b6 893b      	LDD  R19,Y+19
0018b7 e0e1      	LDI  R30,LOW(1)
0018b8 2f2e      	MOV  R18,R30
0018b9 2f0e      	MOV  R16,R30
0018ba 89aa      	LDD  R26,Y+18
0018bb 27bb      	CLR  R27
0018bc 89ec      	LDD  R30,Y+20
0018bd e0f0      	LDI  R31,0
0018be 1bae      	SUB  R26,R30
0018bf 0bbf      	SBC  R27,R31
0018c0 01ad      	MOVW R20,R26
0018c1 2355      	TST  R21
0018c2 f42a      	BRPL _0x2020089
0018c3 ef0f      	LDI  R16,LOW(255)
0018c4 01fa      	MOVW R30,R20
0018c5 940e 27a4 	CALL __ANEGW1
0018c7 01af      	MOVW R20,R30
                 _0x2020089:
0018c8 01fa      	MOVW R30,R20
0018c9 0fee      	LSL  R30
0018ca 1fff      	ROL  R31
0018cb 87ef      	STD  Y+15,R30
0018cc 8bf8      	STD  Y+15+1,R31
0018cd 89a9      	LDD  R26,Y+17
0018ce 27bb      	CLR  R27
0018cf 89eb      	LDD  R30,Y+19
0018d0 e0f0      	LDI  R31,0
0018d1 1bae      	SUB  R26,R30
0018d2 0bbf      	SBC  R27,R31
0018d3 87ad      	STD  Y+13,R26
0018d4 87be      	STD  Y+13+1,R27
0018d5 85ae      	LDD  R26,Y+14
0018d6 23aa      	TST  R26
0018d7 f43a      	BRPL _0x202008A
0018d8 ef2f      	LDI  R18,LOW(255)
0018d9 85ed      	LDD  R30,Y+13
0018da 85fe      	LDD  R31,Y+13+1
0018db 940e 27a4 	CALL __ANEGW1
0018dd 87ed      	STD  Y+13,R30
0018de 87fe      	STD  Y+13+1,R31
                 _0x202008A:
0018df 85ed      	LDD  R30,Y+13
0018e0 85fe      	LDD  R31,Y+13+1
0018e1 0fee      	LSL  R30
0018e2 1fff      	ROL  R31
0018e3 87eb      	STD  Y+11,R30
0018e4 87fc      	STD  Y+11+1,R31
0018e5 931a      	ST   -Y,R17
0018e6 933a      	ST   -Y,R19
0018e7 e0a1      	LDI  R26,LOW(1)
0018e8 df23      	RCALL _glcd_putpixelm_G101
0018e9 87e8      	STD  Y+8,R30
0018ea e0e0      	LDI  R30,LOW(0)
0018eb 87e9      	STD  Y+9,R30
0018ec 87ea      	STD  Y+9+1,R30
0018ed 85ad      	LDD  R26,Y+13
0018ee 85be      	LDD  R27,Y+13+1
0018ef 174a      	CP   R20,R26
0018f0 075b      	CPC  R21,R27
0018f1 f0bc      	BRLT _0x202008B
                 _0x202008D:
0018f2 0f10      	ADD  R17,R16
0018f3 85eb      	LDD  R30,Y+11
0018f4 85fc      	LDD  R31,Y+11+1
0018f5 940e 2643 	CALL SUBOPT_0x7B
0018f7 85a9      	LDD  R26,Y+9
0018f8 85ba      	LDD  R27,Y+9+1
0018f9 174a      	CP   R20,R26
0018fa 075b      	CPC  R21,R27
0018fb f42c      	BRGE _0x202008F
0018fc 0f32      	ADD  R19,R18
0018fd 85af      	LDD  R26,Y+15
0018fe 89b8      	LDD  R27,Y+15+1
0018ff 940e 264a 	CALL SUBOPT_0x7C
                 _0x202008F:
001901 931a      	ST   -Y,R17
001902 940e 263f 	CALL SUBOPT_0x7A
001904 87e8      	STD  Y+8,R30
001905 89ea      	LDD  R30,Y+18
001906 17e1      	CP   R30,R17
001907 f751      	BRNE _0x202008D
001908 c018      	RJMP _0x2020090
                 _0x202008B:
                 _0x2020092:
001909 0f32      	ADD  R19,R18
00190a 85ef      	LDD  R30,Y+15
00190b 89f8      	LDD  R31,Y+15+1
00190c 940e 2643 	CALL SUBOPT_0x7B
00190e 85ed      	LDD  R30,Y+13
00190f 85fe      	LDD  R31,Y+13+1
001910 85a9      	LDD  R26,Y+9
001911 85ba      	LDD  R27,Y+9+1
001912 17ea      	CP   R30,R26
001913 07fb      	CPC  R31,R27
001914 f42c      	BRGE _0x2020094
001915 0f10      	ADD  R17,R16
001916 85ab      	LDD  R26,Y+11
001917 85bc      	LDD  R27,Y+11+1
001918 940e 264a 	CALL SUBOPT_0x7C
                 _0x2020094:
00191a 931a      	ST   -Y,R17
00191b 940e 263f 	CALL SUBOPT_0x7A
00191d 87e8      	STD  Y+8,R30
00191e 89e9      	LDD  R30,Y+17
00191f 17e3      	CP   R30,R19
001920 f741      	BRNE _0x2020092
                 _0x2020090:
001921 89eb      	LDD  R30,Y+19
001922 5fef      	SUBI R30,-LOW(1)
001923 8beb      	STD  Y+19,R30
001924 89e9      	LDD  R30,Y+17
001925 5fef      	SUBI R30,-LOW(1)
001926 8be9      	STD  Y+17,R30
001927 cf89      	RJMP _0x2020086
                 _0x2020088:
                 _0x2020085:
                 _0x202007B:
                 _0x214000C:
001928 940e 2786 	CALL __LOADLOCR6
00192a 9665      	ADIW R28,21
00192b 9508      	RET
                 ; .FEND
                 _glcd_rectround:
                 ; .FSTART _glcd_rectround
00192c 93aa      	ST   -Y,R26
00192d 9722      	SBIW R28,2
00192e 940e 277f 	CALL __SAVELOCR6
001930 85aa      	LDD  R26,Y+10
001931 30a1      	CPI  R26,LOW(0x1)
001932 f419      	BRNE _0x2020098
001933 85a9      	LDD  R26,Y+9
001934 30a1      	CPI  R26,LOW(0x1)
001935 f009      	BREQ _0x2020099
                 _0x2020098:
001936 c005      	RJMP _0x2020097
                 _0x2020099:
001937 85ec      	LDD  R30,Y+12
001938 93ea      	ST   -Y,R30
001939 85ac      	LDD  R26,Y+12
00193a dd5c      	RCALL _glcd_setpixel
00193b c064      	RJMP _0x202009A
                 _0x2020097:
00193c 85ea      	LDD  R30,Y+10
00193d 30e0      	CPI  R30,0
00193e f019      	BREQ _0x202009C
00193f 85e9      	LDD  R30,Y+9
001940 30e0      	CPI  R30,0
001941 f409      	BRNE _0x202009D
                 _0x202009C:
001942 c05d      	RJMP _0x202009B
                 _0x202009D:
001943 85e8      	LDD  R30,Y+8
001944 85ac      	LDD  R26,Y+12
001945 0fea      	ADD  R30,R26
001946 2f1e      	MOV  R17,R30
001947 85e8      	LDD  R30,Y+8
001948 85ab      	LDD  R26,Y+11
001949 0fea      	ADD  R30,R26
00194a 2f2e      	MOV  R18,R30
                +
00194b 91e0 06f3+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00194d 50e1      	SUBI R30,LOW(1)
00194e 83ef      	STD  Y+7,R30
00194f 85ea      	LDD  R30,Y+10
001950 85ac      	LDD  R26,Y+12
001951 0fae      	ADD  R26,R30
001952 50a1      	SUBI R26,LOW(1)
001953 2f3a      	MOV  R19,R26
001954 85a8      	LDD  R26,Y+8
001955 2fe3      	MOV  R30,R19
001956 1bea      	SUB  R30,R26
001957 2f0e      	MOV  R16,R30
001958 81af      	LDD  R26,Y+7
001959 1b3a      	SUB  R19,R26
00195a 85e9      	LDD  R30,Y+9
00195b 85ab      	LDD  R26,Y+11
00195c 0fae      	ADD  R26,R30
00195d 50a1      	SUBI R26,LOW(1)
00195e 2f4a      	MOV  R20,R26
00195f 85a8      	LDD  R26,Y+8
001960 2fe4      	MOV  R30,R20
001961 1bea      	SUB  R30,R26
001962 2f5e      	MOV  R21,R30
001963 81af      	LDD  R26,Y+7
001964 1b4a      	SUB  R20,R26
                +
001965 91e0 06f4+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
001967 83ee      	STD  Y+6,R30
001968 efef      	LDI  R30,LOW(255)
                +
001969 93e0 06f4+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00196b 931a      	ST   -Y,R17
00196c 85ec      	LDD  R30,Y+12
00196d 93ea      	ST   -Y,R30
00196e 2fe0      	MOV  R30,R16
00196f 50e1      	SUBI R30,LOW(1)
001970 93ea      	ST   -Y,R30
001971 85ae      	LDD  R26,Y+14
001972 dec0      	RCALL _glcd_line
001973 930a      	ST   -Y,R16
001974 932a      	ST   -Y,R18
001975 85ea      	LDD  R30,Y+10
001976 93ea      	ST   -Y,R30
001977 e8a1      	LDI  R26,LOW(129)
001978 d214      	RCALL _glcd_quadrant_G101
001979 933a      	ST   -Y,R19
00197a 932a      	ST   -Y,R18
00197b 933a      	ST   -Y,R19
00197c 2fa5      	MOV  R26,R21
00197d 50a1      	SUBI R26,LOW(1)
00197e deb4      	RCALL _glcd_line
00197f 930a      	ST   -Y,R16
001980 935a      	ST   -Y,R21
001981 85ea      	LDD  R30,Y+10
001982 93ea      	ST   -Y,R30
001983 e8a8      	LDI  R26,LOW(136)
001984 d208      	RCALL _glcd_quadrant_G101
001985 930a      	ST   -Y,R16
001986 934a      	ST   -Y,R20
001987 931a      	ST   -Y,R17
001988 2fa4      	MOV  R26,R20
001989 dea9      	RCALL _glcd_line
00198a 931a      	ST   -Y,R17
00198b 935a      	ST   -Y,R21
00198c 85ea      	LDD  R30,Y+10
00198d 93ea      	ST   -Y,R30
00198e e8a4      	LDI  R26,LOW(132)
00198f d1fd      	RCALL _glcd_quadrant_G101
001990 85ec      	LDD  R30,Y+12
001991 93ea      	ST   -Y,R30
001992 935a      	ST   -Y,R21
001993 85ee      	LDD  R30,Y+14
001994 93ea      	ST   -Y,R30
001995 2fa2      	MOV  R26,R18
001996 de9c      	RCALL _glcd_line
001997 931a      	ST   -Y,R17
001998 932a      	ST   -Y,R18
001999 85ea      	LDD  R30,Y+10
00199a 93ea      	ST   -Y,R30
00199b e8a2      	LDI  R26,LOW(130)
00199c d1f0      	RCALL _glcd_quadrant_G101
00199d 81ee      	LDD  R30,Y+6
                +
00199e 93e0 06f4+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
                 _0x202009B:
                 _0x202009A:
0019a0 940e 2786 	CALL __LOADLOCR6
0019a2 962d      	ADIW R28,13
0019a3 9508      	RET
                 ; .FEND
                 _glcd_fillrectround:
                 ; .FSTART _glcd_fillrectround
0019a4 940e 277f 	CALL __SAVELOCR6
0019a6 2f4a      	MOV  R20,R26
0019a7 81af      	LDD  R26,Y+7
0019a8 30a1      	CPI  R26,LOW(0x1)
0019a9 f419      	BRNE _0x202009F
0019aa 81ae      	LDD  R26,Y+6
0019ab 30a1      	CPI  R26,LOW(0x1)
0019ac f009      	BREQ _0x20200A0
                 _0x202009F:
0019ad c007      	RJMP _0x202009E
                 _0x20200A0:
0019ae 940e 2651 	CALL SUBOPT_0x7D
                +
0019b0 91a0 06fb+LDS R26 , _glcd_state + ( 16 )
                 	__GETB2MN _glcd_state,16
0019b2 940e 1416 	CALL _glcd_putpixel
0019b4 c050      	RJMP _0x20200A1
                 _0x202009E:
0019b5 81ef      	LDD  R30,Y+7
0019b6 30e0      	CPI  R30,0
0019b7 f019      	BREQ _0x20200A3
0019b8 81ee      	LDD  R30,Y+6
0019b9 30e0      	CPI  R30,0
0019ba f409      	BRNE _0x20200A4
                 _0x20200A3:
0019bb c049      	RJMP _0x20200A2
                 _0x20200A4:
0019bc 9100 06eb 	LDS  R16,_glcd_state
                +
0019be 9150 06f3+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                +
0019c0 91e0 06fb+LDS R30 , _glcd_state + ( 16 )
                 	__GETB1MN _glcd_state,16
0019c2 93e0 06eb 	STS  _glcd_state,R30
0019c4 e0e1      	LDI  R30,LOW(1)
                +
0019c5 93e0 06f3+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0019c7 940e 2651 	CALL SUBOPT_0x7D
0019c9 940e 2651 	CALL SUBOPT_0x7D
0019cb 2fa4      	MOV  R26,R20
0019cc df5f      	RCALL _glcd_rectround
0019cd 81ef      	LDD  R30,Y+7
0019ce 95e6      	LSR  R30
0019cf 85a9      	LDD  R26,Y+9
0019d0 0fea      	ADD  R30,R26
0019d1 2f1e      	MOV  R17,R30
0019d2 81ee      	LDD  R30,Y+6
0019d3 1be4      	SUB  R30,R20
0019d4 1be4      	SUB  R30,R20
0019d5 2f2e      	MOV  R18,R30
0019d6 2733      	CLR  R19
0019d7 81af      	LDD  R26,Y+7
0019d8 30a3      	CPI  R26,LOW(0x3)
0019d9 f020      	BRLO _0x20200A6
0019da 2400      	CLR  R0
0019db 1602      	CP   R0,R18
0019dc 0603      	CPC  R0,R19
0019dd f00c      	BRLT _0x20200A7
                 _0x20200A6:
0019de c013      	RJMP _0x20200A5
                 _0x20200A7:
0019df 85e9      	LDD  R30,Y+9
0019e0 5fef      	SUBI R30,-LOW(1)
0019e1 93ea      	ST   -Y,R30
0019e2 2fe4      	MOV  R30,R20
0019e3 85a9      	LDD  R26,Y+9
0019e4 0fea      	ADD  R30,R26
0019e5 93ea      	ST   -Y,R30
0019e6 85e9      	LDD  R30,Y+9
0019e7 50e2      	SUBI R30,LOW(2)
0019e8 93ea      	ST   -Y,R30
0019e9 2fa2      	MOV  R26,R18
0019ea d1f9      	RCALL _glcd_barrel
0019eb 931a      	ST   -Y,R17
0019ec 85e9      	LDD  R30,Y+9
0019ed 5fef      	SUBI R30,-LOW(1)
0019ee 93ea      	ST   -Y,R30
0019ef 91a0 06eb 	LDS  R26,_glcd_state
0019f1 d22c      	RCALL _glcd_floodfill
                 _0x20200A5:
0019f2 81ee      	LDD  R30,Y+6
0019f3 85a8      	LDD  R26,Y+8
0019f4 0fae      	ADD  R26,R30
0019f5 50a2      	SUBI R26,LOW(2)
0019f6 2f2a      	MOV  R18,R26
0019f7 2733      	CLR  R19
0019f8 2400      	CLR  R0
0019f9 1602      	CP   R0,R18
0019fa 0603      	CPC  R0,R19
0019fb f42c      	BRGE _0x20200A8
0019fc 931a      	ST   -Y,R17
0019fd 932a      	ST   -Y,R18
0019fe 91a0 06eb 	LDS  R26,_glcd_state
001a00 d21d      	RCALL _glcd_floodfill
                 _0x20200A8:
001a01 9300 06eb 	STS  _glcd_state,R16
                +
001a03 9350 06f3+STS _glcd_state + ( 8 ) , R21
                 	__PUTBMRN _glcd_state,8,21
                 _0x20200A2:
                 _0x20200A1:
                 _0x214000B:
001a05 940e 2786 	CALL __LOADLOCR6
001a07 962a      	ADIW R28,10
001a08 9508      	RET
                 ; .FEND
                 _glcd_plot8_G101:
                 ; .FSTART _glcd_plot8_G101
001a09 93ba      	ST   -Y,R27
001a0a 93aa      	ST   -Y,R26
001a0b 9723      	SBIW R28,3
001a0c 940e 277f 	CALL __SAVELOCR6
001a0e 85ed      	LDD  R30,Y+13
001a0f 87e8      	STD  Y+8,R30
                +
001a10 91e0 06f3+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
001a12 83ef      	STD  Y+7,R30
001a13 91e0 06eb 	LDS  R30,_glcd_state
001a15 83ee      	STD  Y+6,R30
001a16 89aa      	LDD  R26,Y+18
001a17 27bb      	CLR  R27
001a18 85ef      	LDD  R30,Y+15
001a19 940e 261d 	CALL SUBOPT_0x74
001a1b 89a9      	LDD  R26,Y+17
001a1c 27bb      	CLR  R27
001a1d 89e8      	LDD  R30,Y+16
001a1e 940e 2656 	CALL SUBOPT_0x7E
001a20 89e8      	LDD  R30,Y+16
001a21 940e 265d 	CALL SUBOPT_0x7F
001a23 f071      	BREQ _0x20200B0
001a24 85e8      	LDD  R30,Y+8
001a25 78e0      	ANDI R30,LOW(0x80)
001a26 f4f1      	BRNE _0x20200B2
001a27 85ad      	LDD  R26,Y+13
001a28 85be      	LDD  R27,Y+13+1
001a29 e5ea      	LDI  R30,LOW(90)
001a2a e0f0      	LDI  R31,HIGH(90)
001a2b 940e 2665 	CALL SUBOPT_0x80
001a2d f01c      	BRLT _0x20200B4
001a2e 940e 266e 	CALL SUBOPT_0x81
001a30 f40c      	BRGE _0x20200B5
                 _0x20200B4:
001a31 c013      	RJMP _0x20200B3
                 _0x20200B5:
                 _0x20200B0:
001a32 2333      	TST  R19
001a33 f012      	BRMI _0x20200B6
001a34 940e 2673 	CALL SUBOPT_0x82
                 _0x20200B6:
001a36 81af      	LDD  R26,Y+7
001a37 30a2      	CPI  R26,LOW(0x2)
001a38 f020      	BRLO _0x20200B8
                +
001a39 3022     +CPI R18 , LOW ( 2 )
001a3a e0e0     +LDI R30 , HIGH ( 2 )
001a3b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
001a3c f40c      	BRGE _0x20200B9
                 _0x20200B8:
001a3d c007      	RJMP _0x20200B7
                 _0x20200B9:
001a3e 940e 2677 	CALL SUBOPT_0x83
001a40 f421      	BRNE _0x20200BA
001a41 930a      	ST   -Y,R16
001a42 2fa2      	MOV  R26,R18
001a43 50a1      	SUBI R26,LOW(1)
001a44 dc52      	RCALL _glcd_setpixel
                 _0x20200BA:
                 _0x20200B7:
                 _0x20200B3:
                 _0x20200B2:
001a45 85e8      	LDD  R30,Y+8
001a46 78e8      	ANDI R30,LOW(0x88)
001a47 38e8      	CPI  R30,LOW(0x88)
001a48 f091      	BREQ _0x20200BC
001a49 85e8      	LDD  R30,Y+8
001a4a 78e0      	ANDI R30,LOW(0x80)
001a4b f4c9      	BRNE _0x20200BE
001a4c 85ad      	LDD  R26,Y+13
001a4d 85be      	LDD  R27,Y+13+1
001a4e 5fa2      	SUBI R26,LOW(-270)
001a4f 4fbe      	SBCI R27,HIGH(-270)
001a50 940e 2680 	CALL SUBOPT_0x84
001a52 f03c      	BRLT _0x20200C0
001a53 85ad      	LDD  R26,Y+13
001a54 85be      	LDD  R27,Y+13+1
001a55 5fa2      	SUBI R26,LOW(-270)
001a56 4fbe      	SBCI R27,HIGH(-270)
001a57 940e 2685 	CALL SUBOPT_0x85
001a59 f40c      	BRGE _0x20200C1
                 _0x20200C0:
001a5a c00a      	RJMP _0x20200BF
                 _0x20200C1:
                 _0x20200BC:
001a5b 940e 268a 	CALL SUBOPT_0x86
001a5d f038      	BRLO _0x20200C2
001a5e 940e 2691 	CALL SUBOPT_0x87
001a60 f421      	BRNE _0x20200C3
001a61 930a      	ST   -Y,R16
001a62 2fa4      	MOV  R26,R20
001a63 5faf      	SUBI R26,-LOW(1)
001a64 dc32      	RCALL _glcd_setpixel
                 _0x20200C3:
                 _0x20200C2:
                 _0x20200BF:
                 _0x20200BE:
001a65 89aa      	LDD  R26,Y+18
001a66 27bb      	CLR  R27
001a67 85ef      	LDD  R30,Y+15
001a68 e0f0      	LDI  R31,0
001a69 1bae      	SUB  R26,R30
001a6a 0bbf      	SBC  R27,R31
001a6b 018d      	MOVW R16,R26
001a6c 2311      	TST  R17
001a6d f40a      	BRPL PC+2
001a6e c045      	RJMP _0x20200C4
001a6f 85e8      	LDD  R30,Y+8
001a70 78e2      	ANDI R30,LOW(0x82)
001a71 38e2      	CPI  R30,LOW(0x82)
001a72 f091      	BREQ _0x20200C6
001a73 85e8      	LDD  R30,Y+8
001a74 78e0      	ANDI R30,LOW(0x80)
001a75 f511      	BRNE _0x20200C8
001a76 85ad      	LDD  R26,Y+13
001a77 85be      	LDD  R27,Y+13+1
001a78 5aa6      	SUBI R26,LOW(-90)
001a79 4fbf      	SBCI R27,HIGH(-90)
001a7a 940e 2680 	CALL SUBOPT_0x84
001a7c f03c      	BRLT _0x20200CA
001a7d 85ad      	LDD  R26,Y+13
001a7e 85be      	LDD  R27,Y+13+1
001a7f 5aa6      	SUBI R26,LOW(-90)
001a80 4fbf      	SBCI R27,HIGH(-90)
001a81 940e 2685 	CALL SUBOPT_0x85
001a83 f40c      	BRGE _0x20200CB
                 _0x20200CA:
001a84 c013      	RJMP _0x20200C9
                 _0x20200CB:
                 _0x20200C6:
001a85 2333      	TST  R19
001a86 f012      	BRMI _0x20200CC
001a87 940e 2673 	CALL SUBOPT_0x82
                 _0x20200CC:
001a89 81af      	LDD  R26,Y+7
001a8a 30a2      	CPI  R26,LOW(0x2)
001a8b f020      	BRLO _0x20200CE
                +
001a8c 3022     +CPI R18 , LOW ( 2 )
001a8d e0e0     +LDI R30 , HIGH ( 2 )
001a8e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
001a8f f40c      	BRGE _0x20200CF
                 _0x20200CE:
001a90 c007      	RJMP _0x20200CD
                 _0x20200CF:
001a91 940e 2677 	CALL SUBOPT_0x83
001a93 f421      	BRNE _0x20200D0
001a94 930a      	ST   -Y,R16
001a95 2fa2      	MOV  R26,R18
001a96 50a1      	SUBI R26,LOW(1)
001a97 dbff      	RCALL _glcd_setpixel
                 _0x20200D0:
                 _0x20200CD:
                 _0x20200C9:
                 _0x20200C8:
001a98 85e8      	LDD  R30,Y+8
001a99 78e4      	ANDI R30,LOW(0x84)
001a9a 38e4      	CPI  R30,LOW(0x84)
001a9b f071      	BREQ _0x20200D2
001a9c 85e8      	LDD  R30,Y+8
001a9d 78e0      	ANDI R30,LOW(0x80)
001a9e f4a9      	BRNE _0x20200D4
001a9f 85ad      	LDD  R26,Y+13
001aa0 85be      	LDD  R27,Y+13+1
001aa1 e0ee      	LDI  R30,LOW(270)
001aa2 e0f1      	LDI  R31,HIGH(270)
001aa3 940e 2665 	CALL SUBOPT_0x80
001aa5 f01c      	BRLT _0x20200D6
001aa6 940e 266e 	CALL SUBOPT_0x81
001aa8 f40c      	BRGE _0x20200D7
                 _0x20200D6:
001aa9 c00a      	RJMP _0x20200D5
                 _0x20200D7:
                 _0x20200D2:
001aaa 940e 268a 	CALL SUBOPT_0x86
001aac f038      	BRLO _0x20200D8
001aad 940e 2691 	CALL SUBOPT_0x87
001aaf f421      	BRNE _0x20200D9
001ab0 930a      	ST   -Y,R16
001ab1 2fa4      	MOV  R26,R20
001ab2 5faf      	SUBI R26,-LOW(1)
001ab3 dbe3      	RCALL _glcd_setpixel
                 _0x20200D9:
                 _0x20200D8:
                 _0x20200D5:
                 _0x20200D4:
                 _0x20200C4:
001ab4 89aa      	LDD  R26,Y+18
001ab5 27bb      	CLR  R27
001ab6 89e8      	LDD  R30,Y+16
001ab7 940e 261d 	CALL SUBOPT_0x74
001ab9 89a9      	LDD  R26,Y+17
001aba 27bb      	CLR  R27
001abb 85ef      	LDD  R30,Y+15
001abc 940e 2656 	CALL SUBOPT_0x7E
001abe 85ef      	LDD  R30,Y+15
001abf 940e 265d 	CALL SUBOPT_0x7F
001ac1 f081      	BREQ _0x20200DB
001ac2 85e8      	LDD  R30,Y+8
001ac3 78e0      	ANDI R30,LOW(0x80)
001ac4 f4f1      	BRNE _0x20200DD
001ac5 85eb      	LDD  R30,Y+11
001ac6 85fc      	LDD  R31,Y+11+1
001ac7 85ad      	LDD  R26,Y+13
001ac8 85be      	LDD  R27,Y+13+1
001ac9 17ae      	CP   R26,R30
001aca 07bf      	CPC  R27,R31
001acb f02c      	BRLT _0x20200DF
001acc 85e9      	LDD  R30,Y+9
001acd 85fa      	LDD  R31,Y+9+1
001ace 17ea      	CP   R30,R26
001acf 07fb      	CPC  R31,R27
001ad0 f40c      	BRGE _0x20200E0
                 _0x20200DF:
001ad1 c011      	RJMP _0x20200DE
                 _0x20200E0:
                 _0x20200DB:
001ad2 2333      	TST  R19
001ad3 f07a      	BRMI _0x20200E1
001ad4 940e 2673 	CALL SUBOPT_0x82
001ad6 81af      	LDD  R26,Y+7
001ad7 30a2      	CPI  R26,LOW(0x2)
001ad8 f050      	BRLO _0x20200E2
001ad9 2fe0      	MOV  R30,R16
001ada 5fee      	SUBI R30,-LOW(2)
001adb 940e 269a 	CALL SUBOPT_0x88
001add f429      	BRNE _0x20200E3
001ade 2fe0      	MOV  R30,R16
001adf 5fef      	SUBI R30,-LOW(1)
001ae0 93ea      	ST   -Y,R30
001ae1 2fa2      	MOV  R26,R18
001ae2 dbb4      	RCALL _glcd_setpixel
                 _0x20200E3:
                 _0x20200E2:
                 _0x20200E1:
                 _0x20200DE:
                 _0x20200DD:
001ae3 85e8      	LDD  R30,Y+8
001ae4 78e8      	ANDI R30,LOW(0x88)
001ae5 38e8      	CPI  R30,LOW(0x88)
001ae6 f071      	BREQ _0x20200E5
001ae7 85e8      	LDD  R30,Y+8
001ae8 78e0      	ANDI R30,LOW(0x80)
001ae9 f4c1      	BRNE _0x20200E7
001aea 85ad      	LDD  R26,Y+13
001aeb 85be      	LDD  R27,Y+13+1
001aec e6e8      	LDI  R30,LOW(360)
001aed e0f1      	LDI  R31,HIGH(360)
001aee 940e 2665 	CALL SUBOPT_0x80
001af0 f01c      	BRLT _0x20200E9
001af1 940e 266e 	CALL SUBOPT_0x81
001af3 f40c      	BRGE _0x20200EA
                 _0x20200E9:
001af4 c00d      	RJMP _0x20200E8
                 _0x20200EA:
                 _0x20200E5:
001af5 940e 268a 	CALL SUBOPT_0x86
001af7 f050      	BRLO _0x20200EB
001af8 2fe0      	MOV  R30,R16
001af9 5fee      	SUBI R30,-LOW(2)
001afa 940e 26a2 	CALL SUBOPT_0x89
001afc f429      	BRNE _0x20200EC
001afd 2fe0      	MOV  R30,R16
001afe 5fef      	SUBI R30,-LOW(1)
001aff 93ea      	ST   -Y,R30
001b00 2fa4      	MOV  R26,R20
001b01 db95      	RCALL _glcd_setpixel
                 _0x20200EC:
                 _0x20200EB:
                 _0x20200E8:
                 _0x20200E7:
001b02 89aa      	LDD  R26,Y+18
001b03 27bb      	CLR  R27
001b04 89e8      	LDD  R30,Y+16
001b05 e0f0      	LDI  R31,0
001b06 1bae      	SUB  R26,R30
001b07 0bbf      	SBC  R27,R31
001b08 018d      	MOVW R16,R26
001b09 2311      	TST  R17
001b0a f40a      	BRPL PC+2
001b0b c050      	RJMP _0x20200ED
001b0c 85e8      	LDD  R30,Y+8
001b0d 78e2      	ANDI R30,LOW(0x82)
001b0e 38e2      	CPI  R30,LOW(0x82)
001b0f f071      	BREQ _0x20200EF
001b10 85e8      	LDD  R30,Y+8
001b11 78e0      	ANDI R30,LOW(0x80)
001b12 f509      	BRNE _0x20200F1
001b13 85ad      	LDD  R26,Y+13
001b14 85be      	LDD  R27,Y+13+1
001b15 ebe4      	LDI  R30,LOW(180)
001b16 e0f0      	LDI  R31,HIGH(180)
001b17 940e 2665 	CALL SUBOPT_0x80
001b19 f01c      	BRLT _0x20200F3
001b1a 940e 266e 	CALL SUBOPT_0x81
001b1c f40c      	BRGE _0x20200F4
                 _0x20200F3:
001b1d c016      	RJMP _0x20200F2
                 _0x20200F4:
                 _0x20200EF:
001b1e 2333      	TST  R19
001b1f f0a2      	BRMI _0x20200F5
001b20 940e 2673 	CALL SUBOPT_0x82
001b22 81af      	LDD  R26,Y+7
001b23 30a2      	CPI  R26,LOW(0x2)
001b24 f020      	BRLO _0x20200F7
                +
001b25 3002     +CPI R16 , LOW ( 2 )
001b26 e0e0     +LDI R30 , HIGH ( 2 )
001b27 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
001b28 f40c      	BRGE _0x20200F8
                 _0x20200F7:
001b29 c00a      	RJMP _0x20200F6
                 _0x20200F8:
001b2a 2fe0      	MOV  R30,R16
001b2b 50e2      	SUBI R30,LOW(2)
001b2c 940e 269a 	CALL SUBOPT_0x88
001b2e f429      	BRNE _0x20200F9
001b2f 2fe0      	MOV  R30,R16
001b30 50e1      	SUBI R30,LOW(1)
001b31 93ea      	ST   -Y,R30
001b32 2fa2      	MOV  R26,R18
001b33 db63      	RCALL _glcd_setpixel
                 _0x20200F9:
                 _0x20200F6:
                 _0x20200F5:
                 _0x20200F2:
                 _0x20200F1:
001b34 85e8      	LDD  R30,Y+8
001b35 78e4      	ANDI R30,LOW(0x84)
001b36 38e4      	CPI  R30,LOW(0x84)
001b37 f091      	BREQ _0x20200FB
001b38 85e8      	LDD  R30,Y+8
001b39 78e0      	ANDI R30,LOW(0x80)
001b3a f509      	BRNE _0x20200FD
001b3b 85ad      	LDD  R26,Y+13
001b3c 85be      	LDD  R27,Y+13+1
001b3d 54ac      	SUBI R26,LOW(-180)
001b3e 4fbf      	SBCI R27,HIGH(-180)
001b3f 940e 2680 	CALL SUBOPT_0x84
001b41 f03c      	BRLT _0x20200FF
001b42 85ad      	LDD  R26,Y+13
001b43 85be      	LDD  R27,Y+13+1
001b44 54ac      	SUBI R26,LOW(-180)
001b45 4fbf      	SBCI R27,HIGH(-180)
001b46 940e 2685 	CALL SUBOPT_0x85
001b48 f40c      	BRGE _0x2020100
                 _0x20200FF:
001b49 c012      	RJMP _0x20200FE
                 _0x2020100:
                 _0x20200FB:
001b4a 940e 268a 	CALL SUBOPT_0x86
001b4c f020      	BRLO _0x2020102
                +
001b4d 3002     +CPI R16 , LOW ( 2 )
001b4e e0e0     +LDI R30 , HIGH ( 2 )
001b4f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
001b50 f40c      	BRGE _0x2020103
                 _0x2020102:
001b51 c00a      	RJMP _0x2020101
                 _0x2020103:
001b52 2fe0      	MOV  R30,R16
001b53 50e2      	SUBI R30,LOW(2)
001b54 940e 26a2 	CALL SUBOPT_0x89
001b56 f429      	BRNE _0x2020104
001b57 2fe0      	MOV  R30,R16
001b58 50e1      	SUBI R30,LOW(1)
001b59 93ea      	ST   -Y,R30
001b5a 2fa4      	MOV  R26,R20
001b5b db3b      	RCALL _glcd_setpixel
                 _0x2020104:
                 _0x2020101:
                 _0x20200FE:
                 _0x20200FD:
                 _0x20200ED:
001b5c 940e 2786 	CALL __LOADLOCR6
001b5e 9663      	ADIW R28,19
001b5f 9508      	RET
                 ; .FEND
                 _glcd_line2_G101:
                 ; .FSTART _glcd_line2_G101
001b60 940e 277f 	CALL __SAVELOCR6
001b62 2f5a      	MOV  R21,R26
001b63 814e      	LDD  R20,Y+6
001b64 85a8      	LDD  R26,Y+8
001b65 27bb      	CLR  R27
001b66 2fe4      	MOV  R30,R20
001b67 e0f0      	LDI  R31,0
001b68 1bae      	SUB  R26,R30
001b69 0bbf      	SBC  R27,R31
001b6a db0d      	RCALL _glcd_clipx
001b6b 2f1e      	MOV  R17,R30
001b6c 85a8      	LDD  R26,Y+8
001b6d 27bb      	CLR  R27
001b6e 27ee      	CLR  R30
001b6f 0fa4      	ADD  R26,R20
001b70 1fbe      	ADC  R27,R30
001b71 db06      	RCALL _glcd_clipx
001b72 2f0e      	MOV  R16,R30
001b73 81af      	LDD  R26,Y+7
001b74 27bb      	CLR  R27
001b75 2fe5      	MOV  R30,R21
001b76 e0f0      	LDI  R31,0
001b77 1bae      	SUB  R26,R30
001b78 0bbf      	SBC  R27,R31
001b79 db0c      	RCALL _glcd_clipy
001b7a 2f3e      	MOV  R19,R30
001b7b 81af      	LDD  R26,Y+7
001b7c 27bb      	CLR  R27
001b7d 27ee      	CLR  R30
001b7e 0fa5      	ADD  R26,R21
001b7f 1fbe      	ADC  R27,R30
001b80 db05      	RCALL _glcd_clipy
001b81 2f2e      	MOV  R18,R30
001b82 931a      	ST   -Y,R17
001b83 933a      	ST   -Y,R19
001b84 930a      	ST   -Y,R16
001b85 2fa3      	MOV  R26,R19
001b86 dcac      	RCALL _glcd_line
001b87 931a      	ST   -Y,R17
001b88 932a      	ST   -Y,R18
001b89 930a      	ST   -Y,R16
001b8a 2fa2      	MOV  R26,R18
001b8b dca7      	RCALL _glcd_line
001b8c c08d      	RJMP _0x214000A
                 ; .FEND
                 _glcd_quadrant_G101:
                 ; .FSTART _glcd_quadrant_G101
001b8d 940e 277f 	CALL __SAVELOCR6
001b8f 2f4a      	MOV  R20,R26
001b90 85a8      	LDD  R26,Y+8
001b91 38a0      	CPI  R26,LOW(0x80)
001b92 f418      	BRSH _0x2020106
001b93 81af      	LDD  R26,Y+7
001b94 34a0      	CPI  R26,LOW(0x40)
001b95 f008      	BRLO _0x2020105
                 _0x2020106:
001b96 c083      	RJMP _0x214000A
                 _0x2020105:
                +
001b97 9150 06f3+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                 _0x2020108:
001b99 2fe5      	MOV  R30,R21
001b9a 5051      	SUBI R21,1
001b9b 30e0      	CPI  R30,0
001b9c f409      	BRNE PC+2
001b9d c045      	RJMP _0x202010A
001b9e 81ee      	LDD  R30,Y+6
001b9f 30e0      	CPI  R30,0
001ba0 f409      	BRNE _0x202010B
001ba1 c078      	RJMP _0x214000A
                 _0x202010B:
001ba2 940e 263a 	CALL SUBOPT_0x79
001ba4 2f0e      	MOV  R16,R30
001ba5 e0f0      	LDI  R31,0
001ba6 e0a5      	LDI  R26,LOW(5)
001ba7 e0b0      	LDI  R27,HIGH(5)
001ba8 1bae      	SUB  R26,R30
001ba9 0bbf      	SBC  R27,R31
001baa 01fd      	MOVW R30,R26
001bab 940e 27c4 	CALL __LSLW2
001bad 940e 27c9 	CALL __ASRW2
001baf 019f      	MOVW R18,R30
001bb0 e010      	LDI  R17,LOW(0)
                 _0x202010D:
001bb1 3440      	CPI  R20,64
001bb2 f459      	BRNE _0x202010F
001bb3 940e 26aa 	CALL SUBOPT_0x8A
001bb5 931a      	ST   -Y,R17
001bb6 2fa0      	MOV  R26,R16
001bb7 dfa8      	RCALL _glcd_line2_G101
001bb8 940e 26aa 	CALL SUBOPT_0x8A
001bba 930a      	ST   -Y,R16
001bbb 2fa1      	MOV  R26,R17
001bbc dfa3      	RCALL _glcd_line2_G101
001bbd c00f      	RJMP _0x2020110
                 _0x202010F:
001bbe 940e 26aa 	CALL SUBOPT_0x8A
001bc0 931a      	ST   -Y,R17
001bc1 930a      	ST   -Y,R16
001bc2 2fe4      	MOV  R30,R20
001bc3 e0f0      	LDI  R31,0
001bc4 93fa      	ST   -Y,R31
001bc5 93ea      	ST   -Y,R30
001bc6 e0e0      	LDI  R30,LOW(0)
001bc7 e0f0      	LDI  R31,HIGH(0)
001bc8 93fa      	ST   -Y,R31
001bc9 93ea      	ST   -Y,R30
001bca e0a0      	LDI  R26,LOW(0)
001bcb e0b0      	LDI  R27,0
001bcc de3c      	RCALL _glcd_plot8_G101
                 _0x2020110:
001bcd 5f1f      	SUBI R17,-1
001bce 2333      	TST  R19
001bcf f41a      	BRPL _0x2020111
001bd0 2fe1      	MOV  R30,R17
001bd1 e0f0      	LDI  R31,0
001bd2 c008      	RJMP _0x202018D
                 _0x2020111:
001bd3 5001      	SUBI R16,1
001bd4 2fa1      	MOV  R26,R17
001bd5 27bb      	CLR  R27
001bd6 2fe0      	MOV  R30,R16
001bd7 e0f0      	LDI  R31,0
001bd8 1bae      	SUB  R26,R30
001bd9 0bbf      	SBC  R27,R31
001bda 01fd      	MOVW R30,R26
                 _0x202018D:
001bdb 0fee      	LSL  R30
001bdc 1fff      	ROL  R31
001bdd 9631      	ADIW R30,1
                +
001bde 0f2e     +ADD R18 , R30
001bdf 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
001be0 1701      	CP   R16,R17
001be1 f678      	BRSH _0x202010D
001be2 cfb6      	RJMP _0x2020108
                 _0x202010A:
001be3 c036      	RJMP _0x214000A
                 ; .FEND
                 _glcd_barrel:
                 ; .FSTART _glcd_barrel
001be4 940e 277f 	CALL __SAVELOCR6
001be6 2f5a      	MOV  R21,R26
001be7 814e      	LDD  R20,Y+6
001be8 85a8      	LDD  R26,Y+8
001be9 38a0      	CPI  R26,LOW(0x80)
001bea f418      	BRSH _0x202012A
001beb 81af      	LDD  R26,Y+7
001bec 34a0      	CPI  R26,LOW(0x40)
001bed f008      	BRLO _0x2020129
                 _0x202012A:
001bee c02b      	RJMP _0x214000A
                 _0x2020129:
001bef 3040      	CPI  R20,0
001bf0 f011      	BREQ _0x202012D
001bf1 3050      	CPI  R21,0
001bf2 f409      	BRNE _0x202012E
                 _0x202012D:
001bf3 c026      	RJMP _0x202012C
                 _0x202012E:
001bf4 813f      	LDD  R19,Y+7
001bf5 0f53      	ADD  R21,R19
001bf6 85e8      	LDD  R30,Y+8
001bf7 0f4e      	ADD  R20,R30
                 _0x202012F:
001bf8 1735      	CP   R19,R21
001bf9 f500      	BRSH _0x2020131
001bfa 2fe5      	MOV  R30,R21
001bfb 1be3      	SUB  R30,R19
001bfc 2f2e      	MOV  R18,R30
001bfd 3029      	CPI  R18,9
001bfe f008      	BRLO _0x2020132
001bff e028      	LDI  R18,LOW(8)
                 _0x2020132:
001c00 8518      	LDD  R17,Y+8
                 _0x2020133:
001c01 1714      	CP   R17,R20
001c02 f4a8      	BRSH _0x2020135
001c03 2fe4      	MOV  R30,R20
001c04 1be1      	SUB  R30,R17
001c05 2f0e      	MOV  R16,R30
001c06 3009      	CPI  R16,9
001c07 f008      	BRLO _0x2020136
001c08 e008      	LDI  R16,LOW(8)
                 _0x2020136:
001c09 931a      	ST   -Y,R17
001c0a 933a      	ST   -Y,R19
001c0b 930a      	ST   -Y,R16
001c0c 932a      	ST   -Y,R18
001c0d e0e0      	LDI  R30,LOW(0)
001c0e 93ea      	ST   -Y,R30
                +
001c0f efec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
001c10 e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
001c11 93fa      	ST   -Y,R31
001c12 93ea      	ST   -Y,R30
001c13 e0a8      	LDI  R26,LOW(8)
001c14 940e 1495 	CALL _glcd_block
001c16 0f10      	ADD  R17,R16
001c17 cfe9      	RJMP _0x2020133
                 _0x2020135:
001c18 0f32      	ADD  R19,R18
001c19 cfde      	RJMP _0x202012F
                 _0x2020131:
                 _0x202012C:
                 _0x214000A:
001c1a 940e 2786 	CALL __LOADLOCR6
001c1c 9629      	ADIW R28,9
001c1d 9508      	RET
                 ; .FEND
                 _glcd_floodfill:
                 ; .FSTART _glcd_floodfill
001c1e 92ff      	PUSH R15
001c1f 93aa      	ST   -Y,R26
001c20 97e0      	SBIW R28,48
001c21 940e 277f 	CALL __SAVELOCR6
001c23 ada8      	LDD  R26,Y+56
001c24 38a0      	CPI  R26,LOW(0x80)
001c25 f418      	BRSH _0x2020138
001c26 a9af      	LDD  R26,Y+55
001c27 34a0      	CPI  R26,LOW(0x40)
001c28 f008      	BRLO _0x2020137
                 _0x2020138:
001c29 c07b      	RJMP _0x2140009
                 _0x2020137:
                +
001c2a 91e0 06fb+LDS R30 , _glcd_state + ( 16 )
                 	__GETB1MN _glcd_state,16
001c2c 2f4e      	MOV  R20,R30
001c2d 2fae      	MOV  R26,R30
001c2e a9ee      	LDD  R30,Y+54
001c2f 17ea      	CP   R30,R26
001c30 f009      	BREQ _0x202013A
001c31 c073      	RJMP _0x2140009
                 _0x202013A:
001c32 01fe      	MOVW R30,R28
001c33 9636      	ADIW R30,6
001c34 018f      	MOVW R16,R30
001c35 ade8      	LDD  R30,Y+56
001c36 940e 26af 	CALL SUBOPT_0x8B
001c38 a9ef      	LDD  R30,Y+55
001c39 940e 26af 	CALL SUBOPT_0x8B
                 _0x202013B:
001c3b 01fe      	MOVW R30,R28
001c3c 9636      	ADIW R30,6
001c3d 17e0      	CP   R30,R16
001c3e 07f1      	CPC  R31,R17
001c3f f008      	BRLO PC+2
001c40 c064      	RJMP _0x202013D
                +
001c41 5001     +SUBI R16 , LOW ( 1 )
001c42 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
001c43 01d8      	MOVW R26,R16
001c44 91ec      	LD   R30,X
001c45 abef      	STD  Y+55,R30
                +
001c46 5001     +SUBI R16 , LOW ( 1 )
001c47 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
001c48 01d8      	MOVW R26,R16
001c49 91ec      	LD   R30,X
001c4a afe8      	STD  Y+56,R30
001c4b ad38      	LDD  R19,Y+56
                 _0x202013E:
001c4c 3031      	CPI  R19,1
001c4d f040      	BRLO _0x2020140
001c4e 940e 26b4 	CALL SUBOPT_0x8C
001c50 f011      	BREQ _0x2020142
001c51 1745      	CP   R20,R21
001c52 f409      	BRNE _0x2020141
                 _0x2020142:
001c53 c002      	RJMP _0x2020140
                 _0x2020141:
001c54 5031      	SUBI R19,LOW(1)
001c55 cff6      	RJMP _0x202013E
                 _0x2020140:
001c56 94e8      	CLT
001c57 f8f0      	BLD  R15,0
001c58 f8f1      	BLD  R15,1
                 _0x2020144:
001c59 5f3f      	SUBI R19,-LOW(1)
001c5a 3830      	CPI  R19,128
001c5b f008      	BRLO PC+2
001c5c c047      	RJMP _0x2020146
001c5d 940e 26b4 	CALL SUBOPT_0x8C
001c5f f011      	BREQ _0x2020148
001c60 1745      	CP   R20,R21
001c61 f409      	BRNE _0x2020147
                 _0x2020148:
001c62 c041      	RJMP _0x2020146
                 _0x2020147:
001c63 933a      	ST   -Y,R19
001c64 ade8      	LDD  R30,Y+56
001c65 93ea      	ST   -Y,R30
001c66 2fa4      	MOV  R26,R20
001c67 940e 1416 	CALL _glcd_putpixel
001c69 a9af      	LDD  R26,Y+55
001c6a 30a1      	CPI  R26,LOW(0x1)
001c6b f0d0      	BRLO _0x202014A
001c6c a9ef      	LDD  R30,Y+55
001c6d 50e1      	SUBI R30,LOW(1)
001c6e 940e 26bc 	CALL SUBOPT_0x8D
001c70 f011      	BREQ _0x202014C
001c71 1745      	CP   R20,R21
001c72 f409      	BRNE _0x202014D
                 _0x202014C:
001c73 c010      	RJMP _0x202014B
                 _0x202014D:
001c74 fcf0      	SBRC R15,0
001c75 c00d      	RJMP _0x202014E
001c76 01fe      	MOVW R30,R28
001c77 96f6      	ADIW R30,54
001c78 170e      	CP   R16,R30
001c79 071f      	CPC  R17,R31
001c7a f550      	BRSH _0x2140009
001c7b 2fe3      	MOV  R30,R19
001c7c 940e 26af 	CALL SUBOPT_0x8B
001c7e 2fe2      	MOV  R30,R18
001c7f 940e 26af 	CALL SUBOPT_0x8B
001c81 9468      	SET
001c82 f8f0      	BLD  R15,0
                 _0x202014E:
001c83 c002      	RJMP _0x2020150
                 _0x202014B:
001c84 94e8      	CLT
001c85 f8f0      	BLD  R15,0
                 _0x2020150:
                 _0x202014A:
001c86 a9af      	LDD  R26,Y+55
001c87 33af      	CPI  R26,LOW(0x3F)
001c88 f4d0      	BRSH _0x2020151
001c89 a9ef      	LDD  R30,Y+55
001c8a 5fef      	SUBI R30,-LOW(1)
001c8b 940e 26bc 	CALL SUBOPT_0x8D
001c8d f011      	BREQ _0x2020153
001c8e 1745      	CP   R20,R21
001c8f f409      	BRNE _0x2020154
                 _0x2020153:
001c90 c010      	RJMP _0x2020152
                 _0x2020154:
001c91 fcf1      	SBRC R15,1
001c92 c00d      	RJMP _0x2020155
001c93 01fe      	MOVW R30,R28
001c94 96f6      	ADIW R30,54
001c95 170e      	CP   R16,R30
001c96 071f      	CPC  R17,R31
001c97 f468      	BRSH _0x2140009
001c98 2fe3      	MOV  R30,R19
001c99 940e 26af 	CALL SUBOPT_0x8B
001c9b 2fe2      	MOV  R30,R18
001c9c 940e 26af 	CALL SUBOPT_0x8B
001c9e 9468      	SET
001c9f f8f1      	BLD  R15,1
                 _0x2020155:
001ca0 c002      	RJMP _0x2020157
                 _0x2020152:
001ca1 94e8      	CLT
001ca2 f8f1      	BLD  R15,1
                 _0x2020157:
                 _0x2020151:
001ca3 cfb5      	RJMP _0x2020144
                 _0x2020146:
001ca4 cf96      	RJMP _0x202013B
                 _0x202013D:
                 _0x2140009:
001ca5 940e 2786 	CALL __LOADLOCR6
001ca7 96e9      	ADIW R28,57
001ca8 90ff      	POP  R15
001ca9 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __ftoe_G103:
                 ; .FSTART __ftoe_G103
001caa 9724      	SBIW R28,4
001cab e0e0      	LDI  R30,LOW(0)
001cac 83e8      	ST   Y,R30
001cad 83e9      	STD  Y+1,R30
001cae e8e0      	LDI  R30,LOW(128)
001caf 83ea      	STD  Y+2,R30
001cb0 e3ef      	LDI  R30,LOW(63)
001cb1 83eb      	STD  Y+3,R30
001cb2 940e 277f 	CALL __SAVELOCR6
001cb4 01ad      	MOVW R20,R26
001cb5 852a      	LDD  R18,Y+10
001cb6 85ee      	LDD  R30,Y+14
001cb7 85ff      	LDD  R31,Y+14+1
001cb8 3fef      	CPI  R30,LOW(0xFFFF)
001cb9 efaf      	LDI  R26,HIGH(0xFFFF)
001cba 07fa      	CPC  R31,R26
001cbb f439      	BRNE _0x2060019
001cbc 935a      	ST   -Y,R21
001cbd 934a      	ST   -Y,R20
                +
001cbe e4a4     +LDI R26 , LOW ( 2 * _0x2060000 + ( 0 ) )
001cbf e0ba     +LDI R27 , HIGH ( 2 * _0x2060000 + ( 0 ) )
                 	__POINTW2FN _0x2060000,0
001cc0 940e 20a5 	CALL _strcpyf
001cc2 c0ab      	RJMP _0x2140008
                 _0x2060019:
001cc3 3fef      	CPI  R30,LOW(0x7FFF)
001cc4 e7af      	LDI  R26,HIGH(0x7FFF)
001cc5 07fa      	CPC  R31,R26
001cc6 f439      	BRNE _0x2060018
001cc7 935a      	ST   -Y,R21
001cc8 934a      	ST   -Y,R20
                +
001cc9 e4a5     +LDI R26 , LOW ( 2 * _0x2060000 + ( 1 ) )
001cca e0ba     +LDI R27 , HIGH ( 2 * _0x2060000 + ( 1 ) )
                 	__POINTW2FN _0x2060000,1
001ccb 940e 20a5 	CALL _strcpyf
001ccd c0a0      	RJMP _0x2140008
                 _0x2060018:
001cce 85ab      	LDD  R26,Y+11
001ccf 30a7      	CPI  R26,LOW(0x7)
001cd0 f010      	BRLO _0x206001B
001cd1 e0e6      	LDI  R30,LOW(6)
001cd2 87eb      	STD  Y+11,R30
                 _0x206001B:
001cd3 851b      	LDD  R17,Y+11
                 _0x206001C:
001cd4 2fe1      	MOV  R30,R17
001cd5 5011      	SUBI R17,1
001cd6 30e0      	CPI  R30,0
001cd7 f019      	BREQ _0x206001E
001cd8 940e 26c5 	CALL SUBOPT_0x8E
001cda cff9      	RJMP _0x206001C
                 _0x206001E:
                +
001cdb 85ec     +LDD R30 , Y + 12
001cdc 85fd     +LDD R31 , Y + 12 + 1
001cdd 856e     +LDD R22 , Y + 12 + 2
001cde 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
001cdf 940e 28e2 	CALL __CPD10
001ce1 f421      	BRNE _0x206001F
001ce2 e030      	LDI  R19,LOW(0)
001ce3 940e 26c5 	CALL SUBOPT_0x8E
001ce5 c029      	RJMP _0x2060020
                 _0x206001F:
001ce6 853b      	LDD  R19,Y+11
001ce7 940e 26d1 	CALL SUBOPT_0x8F
001ce9 f009      	BREQ PC+2
001cea f408      	BRCC PC+2
001ceb c009      	RJMP _0x2060021
001cec 940e 26c5 	CALL SUBOPT_0x8E
                 _0x2060022:
001cee 940e 26d1 	CALL SUBOPT_0x8F
001cf0 f018      	BRLO _0x2060024
001cf1 940e 26d9 	CALL SUBOPT_0x90
001cf3 cffa      	RJMP _0x2060022
                 _0x2060024:
001cf4 c00d      	RJMP _0x2060025
                 _0x2060021:
                 _0x2060026:
001cf5 940e 26d1 	CALL SUBOPT_0x8F
001cf7 f440      	BRSH _0x2060028
001cf8 940e 23e3 	CALL SUBOPT_0x2E
001cfa 940e 26e3 	CALL SUBOPT_0x91
001cfc 940e 23d2 	CALL SUBOPT_0x2C
001cfe 5031      	SUBI R19,LOW(1)
001cff cff5      	RJMP _0x2060026
                 _0x2060028:
001d00 940e 26c5 	CALL SUBOPT_0x8E
                 _0x2060025:
                +
001d02 85ec     +LDD R30 , Y + 12
001d03 85fd     +LDD R31 , Y + 12 + 1
001d04 856e     +LDD R22 , Y + 12 + 2
001d05 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
001d06 940e 26ea 	CALL SUBOPT_0x92
001d08 940e 23d2 	CALL SUBOPT_0x2C
001d0a 940e 26d1 	CALL SUBOPT_0x8F
001d0c f010      	BRLO _0x2060029
001d0d 940e 26d9 	CALL SUBOPT_0x90
                 _0x2060029:
                 _0x2060020:
001d0f e010      	LDI  R17,LOW(0)
                 _0x206002A:
001d10 85eb      	LDD  R30,Y+11
001d11 17e1      	CP   R30,R17
001d12 f168      	BRLO _0x206002C
001d13 940e 26f1 	CALL SUBOPT_0x93
001d15 940e 26ea 	CALL SUBOPT_0x92
001d17 940e 26f9 	CALL SUBOPT_0x94
001d19 940e 23e3 	CALL SUBOPT_0x2E
001d1b 940e 2a4a 	CALL __DIVF21
001d1d 940e 293a 	CALL __CFD1U
001d1f 2f0e      	MOV  R16,R30
001d20 935f      	PUSH R21
001d21 934f      	PUSH R20
                +
001d22 5f4f     +SUBI R20 , LOW ( - 1 )
001d23 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d24 5de0      	SUBI R30,-LOW(48)
001d25 91af      	POP  R26
001d26 91bf      	POP  R27
001d27 93ec      	ST   X,R30
001d28 2fe0      	MOV  R30,R16
001d29 27ff      	CLR  R31
001d2a 2766      	CLR  R22
001d2b 2777      	CLR  R23
001d2c 940e 2973 	CALL __CDF1
001d2e 940e 2702 	CALL SUBOPT_0x95
001d30 940e 23e3 	CALL SUBOPT_0x2E
001d32 940e 2706 	CALL SUBOPT_0x96
001d34 940e 23d2 	CALL SUBOPT_0x2C
001d36 2fe1      	MOV  R30,R17
001d37 5f1f      	SUBI R17,-1
001d38 30e0      	CPI  R30,0
001d39 f6b1      	BRNE _0x206002A
001d3a 01da      	MOVW R26,R20
                +
001d3b 5f4f     +SUBI R20 , LOW ( - 1 )
001d3c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d3d e2ee      	LDI  R30,LOW(46)
001d3e 93ec      	ST   X,R30
001d3f cfd0      	RJMP _0x206002A
                 _0x206002C:
001d40 935f      	PUSH R21
001d41 934f      	PUSH R20
                +
001d42 5f4f     +SUBI R20 , LOW ( - 1 )
001d43 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d44 2fe2      	MOV  R30,R18
001d45 91af      	POP  R26
001d46 91bf      	POP  R27
001d47 93ec      	ST   X,R30
001d48 3030      	CPI  R19,0
001d49 f424      	BRGE _0x206002E
001d4a 9531      	NEG  R19
001d4b 01da      	MOVW R26,R20
001d4c e2ed      	LDI  R30,LOW(45)
001d4d c002      	RJMP _0x206014C
                 _0x206002E:
001d4e 01da      	MOVW R26,R20
001d4f e2eb      	LDI  R30,LOW(43)
                 _0x206014C:
001d50 93ec      	ST   X,R30
                +
001d51 5f4f     +SUBI R20 , LOW ( - 1 )
001d52 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d53 935f      	PUSH R21
001d54 934f      	PUSH R20
                +
001d55 5f4f     +SUBI R20 , LOW ( - 1 )
001d56 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d57 2fa3      	MOV  R26,R19
001d58 e0ea      	LDI  R30,LOW(10)
001d59 940e 281f 	CALL __DIVB21
001d5b 5de0      	SUBI R30,-LOW(48)
001d5c 91af      	POP  R26
001d5d 91bf      	POP  R27
001d5e 93ec      	ST   X,R30
001d5f 935f      	PUSH R21
001d60 934f      	PUSH R20
                +
001d61 5f4f     +SUBI R20 , LOW ( - 1 )
001d62 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
001d63 2fa3      	MOV  R26,R19
001d64 e0ea      	LDI  R30,LOW(10)
001d65 940e 2848 	CALL __MODB21
001d67 5de0      	SUBI R30,-LOW(48)
001d68 91af      	POP  R26
001d69 91bf      	POP  R27
001d6a 93ec      	ST   X,R30
001d6b 01da      	MOVW R26,R20
001d6c e0e0      	LDI  R30,LOW(0)
001d6d 93ec      	ST   X,R30
                 _0x2140008:
001d6e 940e 2786 	CALL __LOADLOCR6
001d70 9660      	ADIW R28,16
001d71 9508      	RET
                 ; .FEND
                 __print_G103:
                 ; .FSTART __print_G103
001d72 93ba      	ST   -Y,R27
001d73 93aa      	ST   -Y,R26
001d74 97ef      	SBIW R28,63
001d75 9761      	SBIW R28,17
001d76 940e 277f 	CALL __SAVELOCR6
001d78 e010      	LDI  R17,0
                +
001d79 01fe     +MOVW R30 , R28
001d7a 5ae8     +SUBI R30 , LOW ( - 88 )
001d7b 4fff     +SBCI R31 , HIGH ( - 88 )
001d7c 940e 288b+CALL __GETW1Z
                 	__GETW1SX 88
001d7e 87e8      	STD  Y+8,R30
001d7f 87f9      	STD  Y+8+1,R31
                +
001d80 01fe     +MOVW R30 , R28
001d81 5aea     +SUBI R30 , LOW ( - 86 )
001d82 4fff     +SBCI R31 , HIGH ( - 86 )
001d83 940e 288b+CALL __GETW1Z
                 	__GETW1SX 86
001d85 83ee      	STD  Y+6,R30
001d86 83ff      	STD  Y+6+1,R31
001d87 81ae      	LDD  R26,Y+6
001d88 81bf      	LDD  R27,Y+6+1
001d89 e0e0      	LDI  R30,LOW(0)
001d8a e0f0      	LDI  R31,HIGH(0)
001d8b 93ed      	ST   X+,R30
001d8c 93fc      	ST   X,R31
                 _0x2060030:
001d8d 01de      	MOVW R26,R28
001d8e 5aa4      	SUBI R26,LOW(-(92))
001d8f 4fbf      	SBCI R27,HIGH(-(92))
001d90 91ed      	LD   R30,X+
001d91 91fd      	LD   R31,X+
001d92 9631      	ADIW R30,1
001d93 93fe      	ST   -X,R31
001d94 93ee      	ST   -X,R30
001d95 9731      	SBIW R30,1
001d96 91e4      	LPM  R30,Z
001d97 2f2e      	MOV  R18,R30
001d98 30e0      	CPI  R30,0
001d99 f409      	BRNE PC+2
001d9a c1f3      	RJMP _0x2060032
001d9b 2fe1      	MOV  R30,R17
001d9c 30e0      	CPI  R30,0
001d9d f439      	BRNE _0x2060036
001d9e 3225      	CPI  R18,37
001d9f f411      	BRNE _0x2060037
001da0 e011      	LDI  R17,LOW(1)
001da1 c002      	RJMP _0x2060038
                 _0x2060037:
001da2 940e 270b 	CALL SUBOPT_0x97
                 _0x2060038:
001da4 c1e8      	RJMP _0x2060035
                 _0x2060036:
001da5 30e1      	CPI  R30,LOW(0x1)
001da6 f4c1      	BRNE _0x2060039
001da7 3225      	CPI  R18,37
001da8 f419      	BRNE _0x206003A
001da9 940e 270b 	CALL SUBOPT_0x97
001dab c1e0      	RJMP _0x206014D
                 _0x206003A:
001dac e012      	LDI  R17,LOW(2)
001dad e0e0      	LDI  R30,LOW(0)
001dae 8bed      	STD  Y+21,R30
001daf e000      	LDI  R16,LOW(0)
001db0 322d      	CPI  R18,45
001db1 f411      	BRNE _0x206003B
001db2 e001      	LDI  R16,LOW(1)
001db3 c1d9      	RJMP _0x2060035
                 _0x206003B:
001db4 322b      	CPI  R18,43
001db5 f419      	BRNE _0x206003C
001db6 e2eb      	LDI  R30,LOW(43)
001db7 8bed      	STD  Y+21,R30
001db8 c1d4      	RJMP _0x2060035
                 _0x206003C:
001db9 3220      	CPI  R18,32
001dba f419      	BRNE _0x206003D
001dbb e2e0      	LDI  R30,LOW(32)
001dbc 8bed      	STD  Y+21,R30
001dbd c1cf      	RJMP _0x2060035
                 _0x206003D:
001dbe c002      	RJMP _0x206003E
                 _0x2060039:
001dbf 30e2      	CPI  R30,LOW(0x2)
001dc0 f439      	BRNE _0x206003F
                 _0x206003E:
001dc1 e050      	LDI  R21,LOW(0)
001dc2 e013      	LDI  R17,LOW(3)
001dc3 3320      	CPI  R18,48
001dc4 f411      	BRNE _0x2060040
001dc5 6800      	ORI  R16,LOW(128)
001dc6 c1c6      	RJMP _0x2060035
                 _0x2060040:
001dc7 c002      	RJMP _0x2060041
                 _0x206003F:
001dc8 30e3      	CPI  R30,LOW(0x3)
001dc9 f491      	BRNE _0x2060042
                 _0x2060041:
001dca 3320      	CPI  R18,48
001dcb f010      	BRLO _0x2060044
001dcc 332a      	CPI  R18,58
001dcd f008      	BRLO _0x2060045
                 _0x2060044:
001dce c007      	RJMP _0x2060043
                 _0x2060045:
001dcf e0aa      	LDI  R26,LOW(10)
001dd0 9f5a      	MUL  R21,R26
001dd1 2d50      	MOV  R21,R0
001dd2 2fe2      	MOV  R30,R18
001dd3 53e0      	SUBI R30,LOW(48)
001dd4 0f5e      	ADD  R21,R30
001dd5 c1b7      	RJMP _0x2060035
                 _0x2060043:
001dd6 e040      	LDI  R20,LOW(0)
001dd7 322e      	CPI  R18,46
001dd8 f411      	BRNE _0x2060046
001dd9 e014      	LDI  R17,LOW(4)
001dda c1b2      	RJMP _0x2060035
                 _0x2060046:
001ddb c00f      	RJMP _0x2060047
                 _0x2060042:
001ddc 30e4      	CPI  R30,LOW(0x4)
001ddd f499      	BRNE _0x2060049
001dde 3320      	CPI  R18,48
001ddf f010      	BRLO _0x206004B
001de0 332a      	CPI  R18,58
001de1 f008      	BRLO _0x206004C
                 _0x206004B:
001de2 c008      	RJMP _0x206004A
                 _0x206004C:
001de3 6200      	ORI  R16,LOW(32)
001de4 e0aa      	LDI  R26,LOW(10)
001de5 9f4a      	MUL  R20,R26
001de6 2d40      	MOV  R20,R0
001de7 2fe2      	MOV  R30,R18
001de8 53e0      	SUBI R30,LOW(48)
001de9 0f4e      	ADD  R20,R30
001dea c1a2      	RJMP _0x2060035
                 _0x206004A:
                 _0x2060047:
001deb 362c      	CPI  R18,108
001dec f419      	BRNE _0x206004D
001ded 6002      	ORI  R16,LOW(2)
001dee e015      	LDI  R17,LOW(5)
001def c19d      	RJMP _0x2060035
                 _0x206004D:
001df0 c003      	RJMP _0x206004E
                 _0x2060049:
001df1 30e5      	CPI  R30,LOW(0x5)
001df2 f009      	BREQ PC+2
001df3 c199      	RJMP _0x2060035
                 _0x206004E:
001df4 2fe2      	MOV  R30,R18
001df5 36e3      	CPI  R30,LOW(0x63)
001df6 f459      	BRNE _0x2060053
001df7 940e 2712 	CALL SUBOPT_0x98
001df9 940e 2718 	CALL SUBOPT_0x99
001dfb 940e 2712 	CALL SUBOPT_0x98
001dfd 81a4      	LDD  R26,Z+4
001dfe 93aa      	ST   -Y,R26
001dff 940e 271f 	CALL SUBOPT_0x9A
001e01 c18a      	RJMP _0x2060054
                 _0x2060053:
001e02 34e5      	CPI  R30,LOW(0x45)
001e03 f011      	BREQ _0x2060057
001e04 36e5      	CPI  R30,LOW(0x65)
001e05 f409      	BRNE _0x2060058
                 _0x2060057:
001e06 c003      	RJMP _0x2060059
                 _0x2060058:
001e07 36e6      	CPI  R30,LOW(0x66)
001e08 f009      	BREQ PC+2
001e09 c048      	RJMP _0x206005A
                 _0x2060059:
001e0a 01fe      	MOVW R30,R28
001e0b 9676      	ADIW R30,22
001e0c 87ee      	STD  Y+14,R30
001e0d 87ff      	STD  Y+14+1,R31
001e0e 940e 2725 	CALL SUBOPT_0x9B
001e10 940e 287c 	CALL __GETD1P_INC
001e12 940e 272b 	CALL SUBOPT_0x9C
001e14 940e 2730 	CALL SUBOPT_0x9D
001e16 85ad      	LDD  R26,Y+13
001e17 23aa      	TST  R26
001e18 f032      	BRMI _0x206005B
001e19 89ad      	LDD  R26,Y+21
001e1a 32ab      	CPI  R26,LOW(0x2B)
001e1b f059      	BREQ _0x206005D
001e1c 32a0      	CPI  R26,LOW(0x20)
001e1d f081      	BREQ _0x206005F
001e1e c017      	RJMP _0x2060060
                 _0x206005B:
001e1f 940e 2732 	CALL SUBOPT_0x9E
001e21 940e 2907 	CALL __ANEGF1
001e23 940e 272b 	CALL SUBOPT_0x9C
001e25 e2ed      	LDI  R30,LOW(45)
001e26 8bed      	STD  Y+21,R30
                 _0x206005D:
001e27 ff07      	SBRS R16,7
001e28 c005      	RJMP _0x2060061
001e29 89ed      	LDD  R30,Y+21
001e2a 93ea      	ST   -Y,R30
001e2b 940e 271f 	CALL SUBOPT_0x9A
001e2d c008      	RJMP _0x2060062
                 _0x2060061:
                 _0x206005F:
001e2e 85ee      	LDD  R30,Y+14
001e2f 85ff      	LDD  R31,Y+14+1
001e30 9631      	ADIW R30,1
001e31 87ee      	STD  Y+14,R30
001e32 87ff      	STD  Y+14+1,R31
001e33 9731      	SBIW R30,1
001e34 89ad      	LDD  R26,Y+21
001e35 83a0      	STD  Z+0,R26
                 _0x2060062:
                 _0x2060060:
001e36 ff05      	SBRS R16,5
001e37 e046      	LDI  R20,LOW(6)
001e38 3626      	CPI  R18,102
001e39 f451      	BRNE _0x2060064
001e3a 940e 2732 	CALL SUBOPT_0x9E
001e3c 940e 28a6 	CALL __PUTPARD1
001e3e 934a      	ST   -Y,R20
001e3f 89ab      	LDD  R26,Y+19
001e40 89bc      	LDD  R27,Y+19+1
001e41 940e 1fd4 	CALL _ftoa
001e43 c009      	RJMP _0x2060065
                 _0x2060064:
001e44 940e 2732 	CALL SUBOPT_0x9E
001e46 940e 28a6 	CALL __PUTPARD1
001e48 934a      	ST   -Y,R20
001e49 932a      	ST   -Y,R18
001e4a 89ac      	LDD  R26,Y+20
001e4b 89bd      	LDD  R27,Y+20+1
001e4c de5d      	RCALL __ftoe_G103
                 _0x2060065:
001e4d 01fe      	MOVW R30,R28
001e4e 9676      	ADIW R30,22
001e4f 940e 2737 	CALL SUBOPT_0x9F
001e51 c024      	RJMP _0x2060066
                 _0x206005A:
001e52 37e3      	CPI  R30,LOW(0x73)
001e53 f451      	BRNE _0x2060068
001e54 940e 2730 	CALL SUBOPT_0x9D
001e56 940e 2725 	CALL SUBOPT_0x9B
001e58 9614      	ADIW R26,4
001e59 91ed      	LD   R30,X+
001e5a 91fd      	LD   R31,X+
001e5b 940e 2737 	CALL SUBOPT_0x9F
001e5d c011      	RJMP _0x2060069
                 _0x2060068:
001e5e 37e0      	CPI  R30,LOW(0x70)
001e5f f4d9      	BRNE _0x206006B
001e60 940e 2730 	CALL SUBOPT_0x9D
001e62 940e 2725 	CALL SUBOPT_0x9B
001e64 9614      	ADIW R26,4
001e65 91ed      	LD   R30,X+
001e66 91fd      	LD   R31,X+
001e67 87ee      	STD  Y+14,R30
001e68 87ff      	STD  Y+14+1,R31
001e69 85ae      	LDD  R26,Y+14
001e6a 85bf      	LDD  R27,Y+14+1
001e6b 940e 20be 	CALL _strlenf
001e6d 2f1e      	MOV  R17,R30
001e6e 6008      	ORI  R16,LOW(8)
                 _0x2060069:
001e6f 770f      	ANDI R16,LOW(127)
001e70 3040      	CPI  R20,0
001e71 f011      	BREQ _0x206006D
001e72 1741      	CP   R20,R17
001e73 f008      	BRLO _0x206006E
                 _0x206006D:
001e74 c001      	RJMP _0x206006C
                 _0x206006E:
001e75 2f14      	MOV  R17,R20
                 _0x206006C:
                 _0x2060066:
001e76 e040      	LDI  R20,LOW(0)
001e77 e0e0      	LDI  R30,LOW(0)
001e78 8bec      	STD  Y+20,R30
001e79 e030      	LDI  R19,LOW(0)
001e7a c073      	RJMP _0x206006F
                 _0x206006B:
001e7b 36e4      	CPI  R30,LOW(0x64)
001e7c f011      	BREQ _0x2060072
001e7d 36e9      	CPI  R30,LOW(0x69)
001e7e f411      	BRNE _0x2060073
                 _0x2060072:
001e7f 6004      	ORI  R16,LOW(4)
001e80 c002      	RJMP _0x2060074
                 _0x2060073:
001e81 37e5      	CPI  R30,LOW(0x75)
001e82 f4a1      	BRNE _0x2060075
                 _0x2060074:
001e83 e0ea      	LDI  R30,LOW(10)
001e84 8bec      	STD  Y+20,R30
001e85 ff01      	SBRS R16,1
001e86 c008      	RJMP _0x2060076
                +
001e87 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
001e88 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
001e89 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
001e8a e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
001e8b 940e 23ac 	CALL SUBOPT_0x27
001e8d e01a      	LDI  R17,LOW(10)
001e8e c022      	RJMP _0x2060077
                 _0x2060076:
                +
001e8f e1e0     +LDI R30 , LOW ( 0x2710 )
001e90 e2f7     +LDI R31 , HIGH ( 0x2710 )
001e91 e060     +LDI R22 , BYTE3 ( 0x2710 )
001e92 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
001e93 940e 23ac 	CALL SUBOPT_0x27
001e95 e015      	LDI  R17,LOW(5)
001e96 c01a      	RJMP _0x2060077
                 _0x2060075:
001e97 35e8      	CPI  R30,LOW(0x58)
001e98 f411      	BRNE _0x2060079
001e99 6008      	ORI  R16,LOW(8)
001e9a c003      	RJMP _0x206007A
                 _0x2060079:
001e9b 37e8      	CPI  R30,LOW(0x78)
001e9c f009      	BREQ PC+2
001e9d c0ee      	RJMP _0x20600B8
                 _0x206007A:
001e9e e1e0      	LDI  R30,LOW(16)
001e9f 8bec      	STD  Y+20,R30
001ea0 ff01      	SBRS R16,1
001ea1 c008      	RJMP _0x206007C
                +
001ea2 e0e0     +LDI R30 , LOW ( 0x10000000 )
001ea3 e0f0     +LDI R31 , HIGH ( 0x10000000 )
001ea4 e060     +LDI R22 , BYTE3 ( 0x10000000 )
001ea5 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
001ea6 940e 23ac 	CALL SUBOPT_0x27
001ea8 e018      	LDI  R17,LOW(8)
001ea9 c007      	RJMP _0x2060077
                 _0x206007C:
                +
001eaa e0e0     +LDI R30 , LOW ( 0x1000 )
001eab e1f0     +LDI R31 , HIGH ( 0x1000 )
001eac e060     +LDI R22 , BYTE3 ( 0x1000 )
001ead e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
001eae 940e 23ac 	CALL SUBOPT_0x27
001eb0 e014      	LDI  R17,LOW(4)
                 _0x2060077:
001eb1 3040      	CPI  R20,0
001eb2 f011      	BREQ _0x206007D
001eb3 770f      	ANDI R16,LOW(127)
001eb4 c001      	RJMP _0x206007E
                 _0x206007D:
001eb5 e041      	LDI  R20,LOW(1)
                 _0x206007E:
001eb6 ff01      	SBRS R16,1
001eb7 c008      	RJMP _0x206007F
001eb8 940e 2730 	CALL SUBOPT_0x9D
001eba 940e 2725 	CALL SUBOPT_0x9B
001ebc 9614      	ADIW R26,4
001ebd 940e 2876 	CALL __GETD1P
001ebf c015      	RJMP _0x206014E
                 _0x206007F:
001ec0 ff02      	SBRS R16,2
001ec1 c00a      	RJMP _0x2060081
001ec2 940e 2730 	CALL SUBOPT_0x9D
001ec4 940e 2725 	CALL SUBOPT_0x9B
001ec6 9614      	ADIW R26,4
001ec7 940e 2872 	CALL __GETW1P
001ec9 940e 27d4 	CALL __CWD1
001ecb c009      	RJMP _0x206014E
                 _0x2060081:
001ecc 940e 2730 	CALL SUBOPT_0x9D
001ece 940e 2725 	CALL SUBOPT_0x9B
001ed0 9614      	ADIW R26,4
001ed1 940e 2872 	CALL __GETW1P
001ed3 2766      	CLR  R22
001ed4 2777      	CLR  R23
                 _0x206014E:
                +
001ed5 87ea     +STD Y + 10 , R30
001ed6 87fb     +STD Y + 10 + 1 , R31
001ed7 876c     +STD Y + 10 + 2 , R22
001ed8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
001ed9 ff02      	SBRS R16,2
001eda c012      	RJMP _0x2060083
001edb 85ad      	LDD  R26,Y+13
001edc 23aa      	TST  R26
001edd f442      	BRPL _0x2060084
001ede 940e 2732 	CALL SUBOPT_0x9E
001ee0 940e 27a8 	CALL __ANEGD1
001ee2 940e 272b 	CALL SUBOPT_0x9C
001ee4 e2ed      	LDI  R30,LOW(45)
001ee5 8bed      	STD  Y+21,R30
                 _0x2060084:
001ee6 89ed      	LDD  R30,Y+21
001ee7 30e0      	CPI  R30,0
001ee8 f019      	BREQ _0x2060085
001ee9 5f1f      	SUBI R17,-LOW(1)
001eea 5f4f      	SUBI R20,-LOW(1)
001eeb c001      	RJMP _0x2060086
                 _0x2060085:
001eec 7f0b      	ANDI R16,LOW(251)
                 _0x2060086:
                 _0x2060083:
001eed 2f34      	MOV  R19,R20
                 _0x206006F:
001eee fd00      	SBRC R16,0
001eef c014      	RJMP _0x2060087
                 _0x2060088:
001ef0 1715      	CP   R17,R21
001ef1 f410      	BRSH _0x206008B
001ef2 1735      	CP   R19,R21
001ef3 f008      	BRLO _0x206008C
                 _0x206008B:
001ef4 c00f      	RJMP _0x206008A
                 _0x206008C:
001ef5 ff07      	SBRS R16,7
001ef6 c008      	RJMP _0x206008D
001ef7 ff02      	SBRS R16,2
001ef8 c004      	RJMP _0x206008E
001ef9 7f0b      	ANDI R16,LOW(251)
001efa 892d      	LDD  R18,Y+21
001efb 5011      	SUBI R17,LOW(1)
001efc c001      	RJMP _0x206008F
                 _0x206008E:
001efd e320      	LDI  R18,LOW(48)
                 _0x206008F:
001efe c001      	RJMP _0x2060090
                 _0x206008D:
001eff e220      	LDI  R18,LOW(32)
                 _0x2060090:
001f00 940e 270b 	CALL SUBOPT_0x97
001f02 5051      	SUBI R21,LOW(1)
001f03 cfec      	RJMP _0x2060088
                 _0x206008A:
                 _0x2060087:
                 _0x2060091:
001f04 1714      	CP   R17,R20
001f05 f490      	BRSH _0x2060093
001f06 6100      	ORI  R16,LOW(16)
001f07 ff02      	SBRS R16,2
001f08 c006      	RJMP _0x2060094
001f09 940e 273f 	CALL SUBOPT_0xA0
001f0b f009      	BREQ _0x2060095
001f0c 5051      	SUBI R21,LOW(1)
                 _0x2060095:
001f0d 5011      	SUBI R17,LOW(1)
001f0e 5041      	SUBI R20,LOW(1)
                 _0x2060094:
001f0f e3e0      	LDI  R30,LOW(48)
001f10 93ea      	ST   -Y,R30
001f11 940e 271f 	CALL SUBOPT_0x9A
001f13 3050      	CPI  R21,0
001f14 f009      	BREQ _0x2060096
001f15 5051      	SUBI R21,LOW(1)
                 _0x2060096:
001f16 5041      	SUBI R20,LOW(1)
001f17 cfec      	RJMP _0x2060091
                 _0x2060093:
001f18 2f31      	MOV  R19,R17
001f19 89ec      	LDD  R30,Y+20
001f1a 30e0      	CPI  R30,0
001f1b f4b9      	BRNE _0x2060097
                 _0x2060098:
001f1c 3030      	CPI  R19,0
001f1d f0a1      	BREQ _0x206009A
001f1e ff03      	SBRS R16,3
001f1f c006      	RJMP _0x206009B
001f20 85ee      	LDD  R30,Y+14
001f21 85ff      	LDD  R31,Y+14+1
001f22 9125      	LPM  R18,Z+
001f23 87ee      	STD  Y+14,R30
001f24 87ff      	STD  Y+14+1,R31
001f25 c005      	RJMP _0x206009C
                 _0x206009B:
001f26 85ae      	LDD  R26,Y+14
001f27 85bf      	LDD  R27,Y+14+1
001f28 912d      	LD   R18,X+
001f29 87ae      	STD  Y+14,R26
001f2a 87bf      	STD  Y+14+1,R27
                 _0x206009C:
001f2b 940e 270b 	CALL SUBOPT_0x97
001f2d 3050      	CPI  R21,0
001f2e f009      	BREQ _0x206009D
001f2f 5051      	SUBI R21,LOW(1)
                 _0x206009D:
001f30 5031      	SUBI R19,LOW(1)
001f31 cfea      	RJMP _0x2060098
                 _0x206009A:
001f32 c04f      	RJMP _0x206009E
                 _0x2060097:
                 _0x20600A0:
001f33 940e 247f 	CALL SUBOPT_0x3E
001f35 940e 232b 	CALL SUBOPT_0x1C
001f37 940e 2824 	CALL __DIVD21U
001f39 2f2e      	MOV  R18,R30
001f3a 302a      	CPI  R18,10
001f3b f030      	BRLO _0x20600A2
001f3c ff03      	SBRS R16,3
001f3d c002      	RJMP _0x20600A3
001f3e 5c29      	SUBI R18,-LOW(55)
001f3f c001      	RJMP _0x20600A4
                 _0x20600A3:
001f40 5a29      	SUBI R18,-LOW(87)
                 _0x20600A4:
001f41 c001      	RJMP _0x20600A5
                 _0x20600A2:
001f42 5d20      	SUBI R18,-LOW(48)
                 _0x20600A5:
001f43 fd04      	SBRC R16,4
001f44 c01f      	RJMP _0x20600A7
001f45 3321      	CPI  R18,49
001f46 f450      	BRSH _0x20600A9
001f47 940e 23cd 	CALL SUBOPT_0x2B
                +
001f49 30a1     +CPI R26 , LOW ( 0x1 )
001f4a e0e0     +LDI R30 , HIGH ( 0x1 )
001f4b 07be     +CPC R27 , R30
001f4c e0e0     +LDI R30 , BYTE3 ( 0x1 )
001f4d 078e     +CPC R24 , R30
001f4e e0e0     +LDI R30 , BYTE4 ( 0x1 )
001f4f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
001f50 f409      	BRNE _0x20600A8
                 _0x20600A9:
001f51 c00b      	RJMP _0x20600AB
                 _0x20600A8:
001f52 1743      	CP   R20,R19
001f53 f440      	BRSH _0x206014F
001f54 1753      	CP   R21,R19
001f55 f010      	BRLO _0x20600AE
001f56 ff00      	SBRS R16,0
001f57 c001      	RJMP _0x20600AF
                 _0x20600AE:
001f58 c010      	RJMP _0x20600AD
                 _0x20600AF:
001f59 e220      	LDI  R18,LOW(32)
001f5a ff07      	SBRS R16,7
001f5b c008      	RJMP _0x20600B0
                 _0x206014F:
001f5c e320      	LDI  R18,LOW(48)
                 _0x20600AB:
001f5d 6100      	ORI  R16,LOW(16)
001f5e ff02      	SBRS R16,2
001f5f c004      	RJMP _0x20600B1
001f60 940e 273f 	CALL SUBOPT_0xA0
001f62 f009      	BREQ _0x20600B2
001f63 5051      	SUBI R21,LOW(1)
                 _0x20600B2:
                 _0x20600B1:
                 _0x20600B0:
                 _0x20600A7:
001f64 940e 270b 	CALL SUBOPT_0x97
001f66 3050      	CPI  R21,0
001f67 f009      	BREQ _0x20600B3
001f68 5051      	SUBI R21,LOW(1)
                 _0x20600B3:
                 _0x20600AD:
001f69 5031      	SUBI R19,LOW(1)
001f6a 940e 247f 	CALL SUBOPT_0x3E
001f6c 940e 232b 	CALL SUBOPT_0x1C
001f6e 940e 2854 	CALL __MODD21U
001f70 940e 272b 	CALL SUBOPT_0x9C
001f72 89ec      	LDD  R30,Y+20
001f73 940e 23cd 	CALL SUBOPT_0x2B
001f75 27ff      	CLR  R31
001f76 2766      	CLR  R22
001f77 2777      	CLR  R23
001f78 940e 2824 	CALL __DIVD21U
001f7a 940e 23ac 	CALL SUBOPT_0x27
001f7c 940e 247f 	CALL SUBOPT_0x3E
001f7e 940e 28e2 	CALL __CPD10
001f80 f009      	BREQ _0x20600A1
001f81 cfb1      	RJMP _0x20600A0
                 _0x20600A1:
                 _0x206009E:
001f82 ff00      	SBRS R16,0
001f83 c008      	RJMP _0x20600B4
                 _0x20600B5:
001f84 3050      	CPI  R21,0
001f85 f031      	BREQ _0x20600B7
001f86 5051      	SUBI R21,LOW(1)
001f87 e2e0      	LDI  R30,LOW(32)
001f88 93ea      	ST   -Y,R30
001f89 940e 271f 	CALL SUBOPT_0x9A
001f8b cff8      	RJMP _0x20600B5
                 _0x20600B7:
                 _0x20600B4:
                 _0x20600B8:
                 _0x2060054:
                 _0x206014D:
001f8c e010      	LDI  R17,LOW(0)
                 _0x2060035:
001f8d cdff      	RJMP _0x2060030
                 _0x2060032:
001f8e 81ae      	LDD  R26,Y+6
001f8f 81bf      	LDD  R27,Y+6+1
001f90 91ed      	LD   R30,X+
001f91 91fd      	LD   R31,X+
001f92 940e 2786 	CALL __LOADLOCR6
001f94 96ef      	ADIW R28,63
001f95 966f      	ADIW R28,31
001f96 9508      	RET
                 ; .FEND
                 _put_glcd_G103:
                 ; .FSTART _put_glcd_G103
001f97 940e 2781 	CALL __SAVELOCR4
001f99 018d      	MOVW R16,R26
001f9a 813c      	LDD  R19,Y+4
001f9b 2fa3      	MOV  R26,R19
001f9c 940e 1750 	CALL _glcd_putchar
001f9e 01d8      	MOVW R26,R16
001f9f 91ed      	LD   R30,X+
001fa0 91fd      	LD   R31,X+
001fa1 9631      	ADIW R30,1
001fa2 93fe      	ST   -X,R31
001fa3 93ee      	ST   -X,R30
001fa4 940c 221b 	JMP  _0x2140001
                 ; .FEND
                 _glcd_printfxy:
                 ; .FSTART _glcd_printfxy
001fa6 92ff      	PUSH R15
001fa7 2ef8      	MOV  R15,R24
001fa8 9726      	SBIW R28,6
001fa9 940e 2781 	CALL __SAVELOCR4
001fab 01fe      	MOVW R30,R28
001fac 940e 278d 	CALL __ADDW1R15
001fae 8534      	LDD  R19,Z+12
001faf 8525      	LDD  R18,Z+13
001fb0 01de      	MOVW R26,R28
001fb1 9616      	ADIW R26,6
001fb2 940e 2791 	CALL __ADDW2R15
001fb4 018d      	MOVW R16,R26
001fb5 e0e0      	LDI  R30,LOW(0)
001fb6 83ee      	STD  Y+6,R30
001fb7 83ef      	STD  Y+6+1,R30
001fb8 87e8      	STD  Y+8,R30
001fb9 87e9      	STD  Y+8+1,R30
001fba 932a      	ST   -Y,R18
001fbb 2fa3      	MOV  R26,R19
001fbc 940e 1824 	CALL _glcd_moveto
001fbe 01de      	MOVW R26,R28
001fbf 961a      	ADIW R26,10
001fc0 940e 2791 	CALL __ADDW2R15
001fc2 91ed      	LD   R30,X+
001fc3 91fd      	LD   R31,X+
001fc4 93fa      	ST   -Y,R31
001fc5 93ea      	ST   -Y,R30
001fc6 931a      	ST   -Y,R17
001fc7 930a      	ST   -Y,R16
001fc8 e9e7      	LDI  R30,LOW(_put_glcd_G103)
001fc9 e1ff      	LDI  R31,HIGH(_put_glcd_G103)
001fca 93fa      	ST   -Y,R31
001fcb 93ea      	ST   -Y,R30
001fcc 01de      	MOVW R26,R28
001fcd 961a      	ADIW R26,10
001fce dda3      	RCALL __print_G103
001fcf 940e 2788 	CALL __LOADLOCR4
001fd1 962a      	ADIW R28,10
001fd2 90ff      	POP  R15
001fd3 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
001fd4 9724      	SBIW R28,4
001fd5 e0e0      	LDI  R30,LOW(0)
001fd6 83e8      	ST   Y,R30
001fd7 83e9      	STD  Y+1,R30
001fd8 83ea      	STD  Y+2,R30
001fd9 e3ef      	LDI  R30,LOW(63)
001fda 83eb      	STD  Y+3,R30
001fdb 940e 277f 	CALL __SAVELOCR6
001fdd 019d      	MOVW R18,R26
001fde 855a      	LDD  R21,Y+10
001fdf 85ed      	LDD  R30,Y+13
001fe0 85fe      	LDD  R31,Y+13+1
001fe1 3fef      	CPI  R30,LOW(0xFFFF)
001fe2 efaf      	LDI  R26,HIGH(0xFFFF)
001fe3 07fa      	CPC  R31,R26
001fe4 f439      	BRNE _0x208000D
001fe5 933a      	ST   -Y,R19
001fe6 932a      	ST   -Y,R18
                +
001fe7 e4ac     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
001fe8 e0ba     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW2FN _0x2080000,0
001fe9 940e 20a5 	CALL _strcpyf
001feb c0a5      	RJMP _0x2140007
                 _0x208000D:
001fec 3fef      	CPI  R30,LOW(0x7FFF)
001fed e7af      	LDI  R26,HIGH(0x7FFF)
001fee 07fa      	CPC  R31,R26
001fef f439      	BRNE _0x208000C
001ff0 933a      	ST   -Y,R19
001ff1 932a      	ST   -Y,R18
                +
001ff2 e4ad     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
001ff3 e0ba     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW2FN _0x2080000,1
001ff4 940e 20a5 	CALL _strcpyf
001ff6 c09a      	RJMP _0x2140007
                 _0x208000C:
001ff7 85ae      	LDD  R26,Y+14
001ff8 23aa      	TST  R26
001ff9 f46a      	BRPL _0x208000F
                +
001ffa 85eb     +LDD R30 , Y + 11
001ffb 85fc     +LDD R31 , Y + 11 + 1
001ffc 856d     +LDD R22 , Y + 11 + 2
001ffd 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
001ffe 940e 2907 	CALL __ANEGF1
002000 940e 274f 	CALL SUBOPT_0xA1
002002 01d9      	MOVW R26,R18
                +
002003 5f2f     +SUBI R18 , LOW ( - 1 )
002004 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
002005 e2ed      	LDI  R30,LOW(45)
002006 93ec      	ST   X,R30
                 _0x208000F:
002007 3057      	CPI  R21,7
002008 f008      	BRLO _0x2080010
002009 e056      	LDI  R21,LOW(6)
                 _0x2080010:
00200a 2f15      	MOV  R17,R21
                 _0x2080011:
00200b 2fe1      	MOV  R30,R17
00200c 5011      	SUBI R17,1
00200d 30e0      	CPI  R30,0
00200e f029      	BREQ _0x2080013
00200f 940e 26f1 	CALL SUBOPT_0x93
002011 940e 2754 	CALL SUBOPT_0xA2
002013 cff7      	RJMP _0x2080011
                 _0x2080013:
002014 940e 2759 	CALL SUBOPT_0xA3
002016 940e 29ad 	CALL __ADDF12
002018 940e 274f 	CALL SUBOPT_0xA1
00201a e010      	LDI  R17,LOW(0)
                +
00201b e0e0     +LDI R30 , LOW ( 0x3F800000 )
00201c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00201d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00201e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00201f 940e 2754 	CALL SUBOPT_0xA2
                 _0x2080014:
002021 940e 2759 	CALL SUBOPT_0xA3
002023 940e 2a8e 	CALL __CMPF12
002025 f068      	BRLO _0x2080016
002026 940e 26c5 	CALL SUBOPT_0x8E
002028 5f1f      	SUBI R17,-LOW(1)
002029 3217      	CPI  R17,39
00202a f038      	BRLO _0x2080017
00202b 933a      	ST   -Y,R19
00202c 932a      	ST   -Y,R18
                +
00202d e5a1     +LDI R26 , LOW ( 2 * _0x2080000 + ( 5 ) )
00202e e0ba     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW2FN _0x2080000,5
00202f 940e 20a5 	CALL _strcpyf
002031 c05f      	RJMP _0x2140007
                 _0x2080017:
002032 cfee      	RJMP _0x2080014
                 _0x2080016:
002033 3010      	CPI  R17,0
002034 f431      	BRNE _0x2080018
002035 01d9      	MOVW R26,R18
                +
002036 5f2f     +SUBI R18 , LOW ( - 1 )
002037 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
002038 e3e0      	LDI  R30,LOW(48)
002039 93ec      	ST   X,R30
00203a c028      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
00203b 2fe1      	MOV  R30,R17
00203c 5011      	SUBI R17,1
00203d 30e0      	CPI  R30,0
00203e f121      	BREQ _0x208001C
00203f 940e 26f1 	CALL SUBOPT_0x93
002041 940e 26ea 	CALL SUBOPT_0x92
002043 940e 26f9 	CALL SUBOPT_0x94
002045 940e 2762 	CALL SUBOPT_0xA4
002047 940e 2a4a 	CALL __DIVF21
002049 940e 293a 	CALL __CFD1U
00204b 2f0e      	MOV  R16,R30
00204c 933f      	PUSH R19
00204d 932f      	PUSH R18
                +
00204e 5f2f     +SUBI R18 , LOW ( - 1 )
00204f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
002050 5de0      	SUBI R30,-LOW(48)
002051 91af      	POP  R26
002052 91bf      	POP  R27
002053 93ec      	ST   X,R30
002054 2fe0      	MOV  R30,R16
002055 e0f0      	LDI  R31,0
002056 940e 2330 	CALL SUBOPT_0x1D
002058 940e 2767 	CALL SUBOPT_0xA5
00205a 940e 29fc 	CALL __MULF12
00205c 940e 2762 	CALL SUBOPT_0xA4
00205e 940e 2706 	CALL SUBOPT_0x96
002060 940e 274f 	CALL SUBOPT_0xA1
002062 cfd8      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
002063 3050      	CPI  R21,0
002064 f149      	BREQ _0x2140006
002065 01d9      	MOVW R26,R18
                +
002066 5f2f     +SUBI R18 , LOW ( - 1 )
002067 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
002068 e2ee      	LDI  R30,LOW(46)
002069 93ec      	ST   X,R30
                 _0x208001E:
00206a 2fe5      	MOV  R30,R21
00206b 5051      	SUBI R21,1
00206c 30e0      	CPI  R30,0
00206d f101      	BREQ _0x2080020
00206e 940e 2762 	CALL SUBOPT_0xA4
002070 940e 26e3 	CALL SUBOPT_0x91
002072 940e 274f 	CALL SUBOPT_0xA1
                +
002074 85eb     +LDD R30 , Y + 11
002075 85fc     +LDD R31 , Y + 11 + 1
002076 856d     +LDD R22 , Y + 11 + 2
002077 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
002078 940e 293a 	CALL __CFD1U
00207a 2f0e      	MOV  R16,R30
00207b 933f      	PUSH R19
00207c 932f      	PUSH R18
                +
00207d 5f2f     +SUBI R18 , LOW ( - 1 )
00207e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00207f 5de0      	SUBI R30,-LOW(48)
002080 91af      	POP  R26
002081 91bf      	POP  R27
002082 93ec      	ST   X,R30
002083 2fe0      	MOV  R30,R16
002084 e0f0      	LDI  R31,0
002085 940e 2762 	CALL SUBOPT_0xA4
002087 940e 2767 	CALL SUBOPT_0xA5
002089 940e 2706 	CALL SUBOPT_0x96
00208b 940e 274f 	CALL SUBOPT_0xA1
00208d cfdc      	RJMP _0x208001E
                 _0x2080020:
                 _0x2140006:
00208e 01d9      	MOVW R26,R18
00208f e0e0      	LDI  R30,LOW(0)
002090 93ec      	ST   X,R30
                 _0x2140007:
002091 940e 2786 	CALL __LOADLOCR6
002093 962f      	ADIW R28,15
002094 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
002095 93ba      	ST   -Y,R27
002096 93aa      	ST   -Y,R26
002097 81b9          ldd  r27,y+1
002098 81a8          ld   r26,y
002099 9610          adiw r26,0
00209a f031          breq memset1
00209b 81fc          ldd  r31,y+4
00209c 81eb          ldd  r30,y+3
00209d 816a          ldd  r22,y+2
                 memset0:
00209e 9361          st   z+,r22
00209f 9711          sbiw r26,1
0020a0 f7e9          brne memset0
                 memset1:
0020a1 81eb          ldd  r30,y+3
0020a2 81fc          ldd  r31,y+4
0020a3 940c 221d 	JMP  _0x2140002
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
0020a5 93ba      	ST   -Y,R27
0020a6 93aa      	ST   -Y,R26
0020a7 91e9          ld   r30,y+
0020a8 91f9          ld   r31,y+
0020a9 91a9          ld   r26,y+
0020aa 91b9          ld   r27,y+
0020ab 01cd          movw r24,r26
                 strcpyf0:
0020ac 9005      	lpm  r0,z+
0020ad 920d          st   x+,r0
0020ae 2000          tst  r0
0020af f7e1          brne strcpyf0
0020b0 01fc          movw r30,r24
0020b1 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0020b2 93ba      	ST   -Y,R27
0020b3 93aa      	ST   -Y,R26
0020b4 91a9          ld   r26,y+
0020b5 91b9          ld   r27,y+
0020b6 27ee          clr  r30
0020b7 27ff          clr  r31
                 strlen0:
0020b8 916d          ld   r22,x+
0020b9 2366          tst  r22
0020ba f011          breq strlen1
0020bb 9631          adiw r30,1
0020bc cffb          rjmp strlen0
                 strlen1:
0020bd 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0020be 93ba      	ST   -Y,R27
0020bf 93aa      	ST   -Y,R26
0020c0 27aa          clr  r26
0020c1 27bb          clr  r27
0020c2 91e9          ld   r30,y+
0020c3 91f9          ld   r31,y+
                 strlenf0:
0020c4 9005      	lpm  r0,z+
0020c5 2000          tst  r0
0020c6 f011          breq strlenf1
0020c7 9611          adiw r26,1
0020c8 cffb          rjmp strlenf0
                 strlenf1:
0020c9 01fd          movw r30,r26
0020ca 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _eeprom_read_block:
                 ; .FSTART _eeprom_read_block
0020cb 940e 2541 	CALL SUBOPT_0x57
                +
0020cd 8548     +LDD R20 , Y + 8
0020ce 8559     +LDD R21 , Y + 8 + 1
                 	__GETWRS 20,21,8
                +
0020cf 850a     +LDD R16 , Y + 10
0020d0 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
0020d1 8528     +LDD R18 , Y + 8
0020d2 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x20C0003:
0020d3 940e 276c 	CALL SUBOPT_0xA6
0020d5 f069      	BREQ _0x20C0005
0020d6 931f      	PUSH R17
0020d7 930f      	PUSH R16
                +
0020d8 5f0f     +SUBI R16 , LOW ( - 1 )
0020d9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0020da 01d9      	MOVW R26,R18
                +
0020db 5f2f     +SUBI R18 , LOW ( - 1 )
0020dc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0020dd 940e 28c5 	CALL __EEPROMRDB
0020df 91af      	POP  R26
0020e0 91bf      	POP  R27
0020e1 93ec      	ST   X,R30
0020e2 cff0      	RJMP _0x20C0003
                 _0x20C0005:
0020e3 c018      	RJMP _0x2140005
                 ; .FEND
                 _eeprom_write_block:
                 ; .FSTART _eeprom_write_block
0020e4 940e 2541 	CALL SUBOPT_0x57
                +
0020e6 8548     +LDD R20 , Y + 8
0020e7 8559     +LDD R21 , Y + 8 + 1
                 	__GETWRS 20,21,8
                +
0020e8 8508     +LDD R16 , Y + 8
0020e9 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
0020ea 852a     +LDD R18 , Y + 10
0020eb 853b     +LDD R19 , Y + 10 + 1
                 	__GETWRS 18,19,10
                 _0x20C0006:
0020ec 940e 276c 	CALL SUBOPT_0xA6
0020ee f069      	BREQ _0x20C0008
0020ef 931f      	PUSH R17
0020f0 930f      	PUSH R16
                +
0020f1 5f0f     +SUBI R16 , LOW ( - 1 )
0020f2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0020f3 01d9      	MOVW R26,R18
                +
0020f4 5f2f     +SUBI R18 , LOW ( - 1 )
0020f5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0020f6 91ec      	LD   R30,X
0020f7 91af      	POP  R26
0020f8 91bf      	POP  R27
0020f9 940e 28d1 	CALL __EEPROMWRB
0020fb cff0      	RJMP _0x20C0006
                 _0x20C0008:
                 _0x2140005:
0020fc 940e 2786 	CALL __LOADLOCR6
0020fe 962c      	ADIW R28,12
0020ff 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
002100 940e 28ab 	CALL __PUTPARD2
002102 817b         ldd  r23,y+3
002103 816a         ldd  r22,y+2
002104 81f9         ldd  r31,y+1
002105 81e8         ld   r30,y
002106 fb77         bst  r23,7
002107 0f77         lsl  r23
002108 fd67         sbrc r22,7
002109 6071         sbr  r23,1
00210a 2f97         mov  r25,r23
00210b 579e         subi r25,0x7e
00210c f081         breq __ftrunc0
00210d f078         brcs __ftrunc0
00210e 3198         cpi  r25,24
00210f f490         brsh __ftrunc1
002110 27aa         clr  r26
002111 27bb         clr  r27
002112 2788         clr  r24
                 __ftrunc2:
002113 9408         sec
002114 9587         ror  r24
002115 95b7         ror  r27
002116 95a7         ror  r26
002117 959a         dec  r25
002118 f7d1         brne __ftrunc2
002119 23ea         and  r30,r26
00211a 23fb         and  r31,r27
00211b 2368         and  r22,r24
00211c c005         rjmp __ftrunc1
                 __ftrunc0:
00211d 94e8         clt
00211e 2777         clr  r23
00211f 27ee         clr  r30
002120 27ff         clr  r31
002121 2766         clr  r22
                 __ftrunc1:
002122 776f         cbr  r22,0x80
002123 9576         lsr  r23
002124 f408         brcc __ftrunc3
002125 6860         sbr  r22,0x80
                 __ftrunc3:
002126 f977         bld  r23,7
002127 91a9         ld   r26,y+
002128 91b9         ld   r27,y+
002129 9189         ld   r24,y+
00212a 9199         ld   r25,y+
00212b 17ea         cp   r30,r26
00212c 07fb         cpc  r31,r27
00212d 0768         cpc  r22,r24
00212e 0779         cpc  r23,r25
00212f fb97         bst  r25,7
002130 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
002131 940e 28ab 	CALL __PUTPARD2
002133 940e 289c 	CALL __GETD2S0
002135 940e 2100 	CALL _ftrunc
002137 940e 28a1 	CALL __PUTD1S0
002139 f419          brne __floor1
                 __floor0:
00213a 940e 2897 	CALL __GETD1S0
00213c c005      	RJMP _0x2140004
                 __floor1:
00213d f7e6          brtc __floor0
00213e 940e 2897 	CALL __GETD1S0
002140 940e 2773 	CALL SUBOPT_0xA7
                 _0x2140004:
002142 9624      	ADIW R28,4
002143 9508      	RET
                 ; .FEND
                 _log:
                 ; .FSTART _log
002144 940e 28ab 	CALL __PUTPARD2
002146 9724      	SBIW R28,4
002147 931a      	ST   -Y,R17
002148 930a      	ST   -Y,R16
002149 940e 2330 	CALL SUBOPT_0x1D
00214b 940e 28e6 	CALL __CPD02
00214d f02c      	BRLT _0x20E000C
                +
00214e efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00214f efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
002150 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
002151 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
002152 c075      	RJMP _0x2140003
                 _0x20E000C:
002153 940e 277a 	CALL SUBOPT_0xA8
002155 940e 28a6 	CALL __PUTPARD1
002157 b7ad      	IN   R26,SPL
002158 b7be      	IN   R27,SPH
002159 9711      	SBIW R26,1
00215a 931f      	PUSH R17
00215b 930f      	PUSH R16
00215c 940e 28f6 	CALL _frexp
00215e 910f      	POP  R16
00215f 911f      	POP  R17
002160 940e 2754 	CALL SUBOPT_0xA2
002162 940e 2330 	CALL SUBOPT_0x1D
                +
002164 efe3     +LDI R30 , LOW ( 0x3F3504F3 )
002165 e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
002166 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
002167 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
002168 940e 2a8e 	CALL __CMPF12
00216a f450      	BRSH _0x20E000D
00216b 940e 277a 	CALL SUBOPT_0xA8
00216d 940e 2330 	CALL SUBOPT_0x1D
00216f 940e 29ad 	CALL __ADDF12
002171 940e 2754 	CALL SUBOPT_0xA2
                +
002173 5001     +SUBI R16 , LOW ( 1 )
002174 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x20E000D:
002175 940e 277a 	CALL SUBOPT_0xA8
002177 940e 2773 	CALL SUBOPT_0xA7
002179 937f      	PUSH R23
00217a 936f      	PUSH R22
00217b 93ff      	PUSH R31
00217c 93ef      	PUSH R30
00217d 940e 277a 	CALL SUBOPT_0xA8
00217f 940e 250f 	CALL SUBOPT_0x50
002181 91af      	POP  R26
002182 91bf      	POP  R27
002183 918f      	POP  R24
002184 919f      	POP  R25
002185 940e 2a4a 	CALL __DIVF21
002187 940e 2754 	CALL SUBOPT_0xA2
002189 940e 277a 	CALL SUBOPT_0xA8
00218b 940e 2702 	CALL SUBOPT_0x95
                +
00218d 83ea     +STD Y + 2 , R30
00218e 83fb     +STD Y + 2 + 1 , R31
00218f 836c     +STD Y + 2 + 2 , R22
002190 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
002191 e2a6     +LDI R26 , LOW ( 0x3F654226 )
002192 e4b2     +LDI R27 , HIGH ( 0x3F654226 )
002193 e685     +LDI R24 , BYTE3 ( 0x3F654226 )
002194 e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
002195 940e 29fc 	CALL __MULF12
002197 01df      	MOVW R26,R30
002198 01cb      	MOVW R24,R22
                +
002199 e4ee     +LDI R30 , LOW ( 0x4054114E )
00219a e1f1     +LDI R31 , HIGH ( 0x4054114E )
00219b e564     +LDI R22 , BYTE3 ( 0x4054114E )
00219c e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
00219d 940e 2706 	CALL SUBOPT_0x96
00219f 940e 2702 	CALL SUBOPT_0x95
0021a1 937f      	PUSH R23
0021a2 936f      	PUSH R22
0021a3 93ff      	PUSH R31
0021a4 93ef      	PUSH R30
                +
0021a5 81ea     +LDD R30 , Y + 2
0021a6 81fb     +LDD R31 , Y + 2 + 1
0021a7 816c     +LDD R22 , Y + 2 + 2
0021a8 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0021a9 e4ad     +LDI R26 , LOW ( 0x3FD4114D )
0021aa e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
0021ab ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
0021ac e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
0021ad 940e 29a6 	CALL __SUBF12
0021af 91af      	POP  R26
0021b0 91bf      	POP  R27
0021b1 918f      	POP  R24
0021b2 919f      	POP  R25
0021b3 940e 2a4a 	CALL __DIVF21
0021b5 937f      	PUSH R23
0021b6 936f      	PUSH R22
0021b7 93ff      	PUSH R31
0021b8 93ef      	PUSH R30
0021b9 01f8      	MOVW R30,R16
0021ba 940e 2767 	CALL SUBOPT_0xA5
                +
0021bc e1a8     +LDI R26 , LOW ( 0x3F317218 )
0021bd e7b2     +LDI R27 , HIGH ( 0x3F317218 )
0021be e381     +LDI R24 , BYTE3 ( 0x3F317218 )
0021bf e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
0021c0 940e 29fc 	CALL __MULF12
0021c2 91af      	POP  R26
0021c3 91bf      	POP  R27
0021c4 918f      	POP  R24
0021c5 919f      	POP  R25
0021c6 940e 29ad 	CALL __ADDF12
                 _0x2140003:
0021c8 8119      	LDD  R17,Y+1
0021c9 8108      	LDD  R16,Y+0
0021ca 962a      	ADIW R28,10
0021cb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0021cc 940e 25ad 	CALL SUBOPT_0x63
0021ce 2fe1      	MOV  R30,R17
0021cf e0f0      	LDI  R31,0
0021d0 56e0      	SUBI R30,LOW(-__glcd_mask*2)
0021d1 4ff9      	SBCI R31,HIGH(-__glcd_mask*2)
0021d2 91a4      	LPM  R26,Z
0021d3 2fe0      	MOV  R30,R16
0021d4 940e 27b0 	CALL __LSLB12
0021d6 8119      	LDD  R17,Y+1
0021d7 8108      	LDD  R16,Y+0
0021d8 9623      	ADIW R28,3
0021d9 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0021da 940e 2781 	CALL __SAVELOCR4
0021dc 2f0a      	MOV  R16,R26
0021dd 813c      	LDD  R19,Y+4
0021de 2fe0      	MOV  R30,R16
0021df 30e7      	CPI  R30,LOW(0x7)
0021e0 f011      	BREQ _0x2100007
0021e1 30ea      	CPI  R30,LOW(0xA)
0021e2 f419      	BRNE _0x2100008
                 _0x2100007:
0021e3 9110 06eb 	LDS  R17,_glcd_state
0021e5 c009      	RJMP _0x2100009
                 _0x2100008:
0021e6 30e9      	CPI  R30,LOW(0x9)
0021e7 f419      	BRNE _0x210000B
                +
0021e8 9110 06ec+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0021ea c004      	RJMP _0x2100009
                 _0x210000B:
0021eb 30e8      	CPI  R30,LOW(0x8)
0021ec f489      	BRNE _0x2100005
                +
0021ed 9110 06fb+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
0021ef 91e0 06ec+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0021f1 30e0      	CPI  R30,0
0021f2 f039      	BREQ _0x210000E
0021f3 3010      	CPI  R17,0
0021f4 f011      	BREQ _0x210000F
0021f5 efef      	LDI  R30,LOW(255)
0021f6 c024      	RJMP _0x2140001
                 _0x210000F:
0021f7 2fe3      	MOV  R30,R19
0021f8 95e0      	COM  R30
0021f9 c021      	RJMP _0x2140001
                 _0x210000E:
0021fa 3010      	CPI  R17,0
0021fb f411      	BRNE _0x2100011
0021fc e0e0      	LDI  R30,LOW(0)
0021fd c01d      	RJMP _0x2140001
                 _0x2100011:
                 _0x2100005:
0021fe 2fe3      	MOV  R30,R19
0021ff c01b      	RJMP _0x2140001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
002200 940e 2781 	CALL __SAVELOCR4
002202 018d      	MOVW R16,R26
002203 813c      	LDD  R19,Y+4
002204 2fe3      	MOV  R30,R19
002205 30e1      	CPI  R30,LOW(0x1)
002206 f419      	BRNE _0x2100015
002207 01f8      	MOVW R30,R16
002208 91e4      	LPM  R30,Z
002209 c011      	RJMP _0x2140001
                 _0x2100015:
00220a 30e2      	CPI  R30,LOW(0x2)
00220b f421      	BRNE _0x2100016
00220c 01d8      	MOVW R26,R16
00220d 940e 28c5 	CALL __EEPROMRDB
00220f c00b      	RJMP _0x2140001
                 _0x2100016:
002210 30e3      	CPI  R30,LOW(0x3)
002211 f439      	BRNE _0x2100018
002212 01d8      	MOVW R26,R16
                +
002213 91e0 0704+LDS R30 , _glcd_state + ( 25 )
002215 91f0 0705+LDS R31 , _glcd_state + ( 25 ) + 1
002217 9509     +ICALL
                 	__CALL1MN _glcd_state,25
002218 c002      	RJMP _0x2140001
                 _0x2100018:
002219 01d8      	MOVW R26,R16
00221a 91ec      	LD   R30,X
                 _0x2140001:
00221b 940e 2788 	CALL __LOADLOCR4
                 _0x2140002:
00221d 9625      	ADIW R28,5
00221e 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00221f 940e 2781 	CALL __SAVELOCR4
002221 2f1a      	MOV  R17,R26
                +
002222 812c     +LDD R18 , Y + 4
002223 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
002224 810e      	LDD  R16,Y+6
002225 2fe0      	MOV  R30,R16
002226 30e0      	CPI  R30,0
002227 f421      	BRNE _0x210001C
002228 2fe1      	MOV  R30,R17
002229 01d9      	MOVW R26,R18
00222a 93ec      	ST   X,R30
00222b c011      	RJMP _0x210001B
                 _0x210001C:
00222c 30e2      	CPI  R30,LOW(0x2)
00222d f429      	BRNE _0x210001D
00222e 2fe1      	MOV  R30,R17
00222f 01d9      	MOVW R26,R18
002230 940e 28d1 	CALL __EEPROMWRB
002232 c00a      	RJMP _0x210001B
                 _0x210001D:
002233 30e3      	CPI  R30,LOW(0x3)
002234 f441      	BRNE _0x210001B
002235 933a      	ST   -Y,R19
002236 932a      	ST   -Y,R18
002237 2fa1      	MOV  R26,R17
                +
002238 91e0 0706+LDS R30 , _glcd_state + ( 27 )
00223a 91f0 0707+LDS R31 , _glcd_state + ( 27 ) + 1
00223c 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
00223d 940e 2788 	CALL __LOADLOCR4
00223f 9627      	ADIW R28,7
002240 9508      	RET
                 ; .FEND
                 _glcd_revbits:
                 ; .FSTART _glcd_revbits
002241 93aa      	ST   -Y,R26
002242 91a9          ld  r26,y+
002243 fba0          bst r26,0
002244 f9e7          bld r30,7
                 
002245 fba1          bst r26,1
002246 f9e6          bld r30,6
                 
002247 fba2          bst r26,2
002248 f9e5          bld r30,5
                 
002249 fba3          bst r26,3
00224a f9e4          bld r30,4
                 
00224b fba4          bst r26,4
00224c f9e3          bld r30,3
                 
00224d fba5          bst r26,5
00224e f9e2          bld r30,2
                 
00224f fba6          bst r26,6
002250 f9e1          bld r30,1
                 
002251 fba7          bst r26,7
002252 f9e0          bld r30,0
002253 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
0006eb           	.BYTE 0x1D
                 _time_zero:
000708           	.BYTE 0x4
                 _clapan_out_monitor:
00070c           	.BYTE 0x1
                 _boiler_state_str:
00070d           	.BYTE 0xC
                 _start_sequence_stage_str:
000719           	.BYTE 0x16
                 _boiler_role_str:
00072f           	.BYTE 0xE
                 _weather_dep_str:
00073d           	.BYTE 0x6
                 _errors_str:
000743           	.BYTE 0x14
                 _boiler:
000757           	.BYTE 0x3C
                 _main_page:
000793           	.BYTE 0xE
                 _tick_ms:
0007a1           	.BYTE 0x4
                 _DirectVolt:
0007a5           	.BYTE 0x4
                 _DirectADC:
0007a9           	.BYTE 0x2
                 
                 	.ESEG
                 _eeinit_data:
000000           	.BYTE 0xC
                 
                 	.DSEG
                 _eedefault:
0007ab           	.BYTE 0xC
                 _nvm_cache:
0007b7           	.BYTE 0xC
                 _oneminute_counter_S0010004000:
0007c3           	.BYTE 0x4
                 _air_k1:
0007c7           	.BYTE 0x4
                 _air_b1:
0007cb           	.BYTE 0x4
                 _air_k2:
0007cf           	.BYTE 0x4
                 _air_b2:
0007d3           	.BYTE 0x4
                 _air_c:
0007d7           	.BYTE 0x4
                 _water_k1:
0007db           	.BYTE 0x4
                 _water_b1:
0007df           	.BYTE 0x4
                 _water_k2:
0007e3           	.BYTE 0x4
                 _water_b2:
0007e7           	.BYTE 0x4
                 _water_c:
0007eb           	.BYTE 0x4
                 _data_S0040003000:
0007ef           	.BYTE 0x2
                 _prev_index_S0040003000:
0007f1           	.BYTE 0x4
                 _prev_index_1stline_S0040003000:
0007f5           	.BYTE 0x4
                 _prev_activePage_S0040003000:
0007f9           	.BYTE 0x2
                 _pressed_S0050001000:
0007fb           	.BYTE 0x1
                 _time_pressed_S0050001000:
0007fc           	.BYTE 0x4
                 _time_emitted_S0050001000:
000800           	.BYTE 0x4
                 _main_page_list:
000804           	.BYTE 0xCB
                 _buttonCallbacks:
0008cf           	.BYTE 0xA
                 _time_S0070001000:
0008d9           	.BYTE 0x4
                 _time_S0070003000:
0008dd           	.BYTE 0x4
                 _br_str_S0070003000:
0008e1           	.BYTE 0x2
                 _time_S0070004000:
0008e3           	.BYTE 0x4
                 _drawn_S0070004000:
0008e7           	.BYTE 0x1
                 _time_S0070005000:
0008e8           	.BYTE 0x4
                 _j_S0070005000:
0008ec           	.BYTE 0x4
                 _time_S0070006000:
0008f0           	.BYTE 0x4
                 _drawn_S0070006000:
0008f4           	.BYTE 0x1
                 _time_S007000D000:
0008f5           	.BYTE 0x4
                 _time_S007000E000:
0008f9           	.BYTE 0x4
                 _state_S007000F000:
0008fd           	.BYTE 0x1
                 _st7920_graphics_on_G100:
0008fe           	.BYTE 0x1
                 _st7920_bits8_15_G100:
0008ff           	.BYTE 0x1
                 _xt_G100:
000900           	.BYTE 0x1
                 _yt_G100:
000901           	.BYTE 0x1
                 __seed_G104:
000902           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
002254 91e0 07a1 	LDS  R30,_tick_ms
002256 91f0 07a2 	LDS  R31,_tick_ms+1
002258 9160 07a3 	LDS  R22,_tick_ms+2
00225a 9170 07a4 	LDS  R23,_tick_ms+3
00225c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1:
00225d 940e 287c 	CALL __GETD1P_INC
                +
00225f 5fef     +SUBI R30 , LOW ( - 1 )
002260 4fff     +SBCI R31 , HIGH ( - 1 )
002261 4f6f     +SBCI R22 , BYTE3 ( - 1 )
002262 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
002263 940e 2886 	CALL __PUTDP1_DEC
002265 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
                +
002266 e0e0     +LDI R30 , LOW ( 0x0 )
002267 e0f0     +LDI R31 , HIGH ( 0x0 )
002268 e060     +LDI R22 , BYTE3 ( 0x0 )
002269 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00226a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x3:
                +
00226b 93e0 0789+STS _boiler + ( 50 ) , R30
00226d 93f0 078a+STS _boiler + ( 50 ) + 1 , R31
00226f 9360 078b+STS _boiler + ( 50 ) + 2 , R22
002271 9370 078c+STS _boiler + ( 50 ) + 3 , R23
                 	__PUTD1MN _boiler,50
002273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
002274 ebe7      	LDI  R30,LOW(_nvm_cache)
002275 e0f7      	LDI  R31,HIGH(_nvm_cache)
002276 93fa      	ST   -Y,R31
002277 93ea      	ST   -Y,R30
002278 e0e0      	LDI  R30,LOW(_eeinit_data)
002279 e0f0      	LDI  R31,HIGH(_eeinit_data)
00227a 93fa      	ST   -Y,R31
00227b 93ea      	ST   -Y,R30
00227c e0ac      	LDI  R26,LOW(12)
00227d e0b0      	LDI  R27,0
00227e 940c 20cb 	JMP  _eeprom_read_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
002280 93fa      	ST   -Y,R31
002281 93ea      	ST   -Y,R30
002282 e0e0      	LDI  R30,LOW(_eeinit_data)
002283 e0f0      	LDI  R31,HIGH(_eeinit_data)
002284 93fa      	ST   -Y,R31
002285 93ea      	ST   -Y,R30
002286 e0ac      	LDI  R26,LOW(12)
002287 e0b0      	LDI  R27,0
002288 940c 20e4 	JMP  _eeprom_write_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
                +
00228a 93e0 0761+STS _boiler + ( 10 ) , R30
00228c 93f0 0762+STS _boiler + ( 10 ) + 1 , R31
00228e 9360 0763+STS _boiler + ( 10 ) + 2 , R22
002290 9370 0764+STS _boiler + ( 10 ) + 3 , R23
                 	__PUTD1MN _boiler,10
002292 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
002293 940e 2a4a 	CALL __DIVF21
                +
002295 93e0 077d+STS _boiler + ( 38 ) , R30
002297 93f0 077e+STS _boiler + ( 38 ) + 1 , R31
002299 9360 077f+STS _boiler + ( 38 ) + 2 , R22
00229b 9370 0780+STS _boiler + ( 38 ) + 3 , R23
                 	__PUTD1MN _boiler,38
00229d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
00229e 81e9     +LDD R30 , Y + 1
00229f 81fa     +LDD R31 , Y + 1 + 1
0022a0 816b     +LDD R22 , Y + 1 + 2
0022a1 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
0022a2 940e 28e2 	CALL __CPD10
0022a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
0022a5 940e 27d9 	CALL __LNEGB1
0022a7 27ff      	CLR  R31
0022a8 2766      	CLR  R22
0022a9 2777      	CLR  R23
0022aa 01df      	MOVW R26,R30
0022ab 01cb      	MOVW R24,R22
0022ac 940e 0763 	CALL _check_reset_error
0022ae 30e0      	CPI  R30,0
0022af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xA:
                +
0022b0 91a0 0769+LDS R26 , _boiler + ( 18 )
0022b2 91b0 076a+LDS R27 , _boiler + ( 18 ) + 1
0022b4 9180 076b+LDS R24 , _boiler + ( 18 ) + 2
0022b6 9190 076c+LDS R25 , _boiler + ( 18 ) + 3
                 	__GETD2MN _boiler,18
0022b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB:
                +
0022b9 91e0 0790+LDS R30 , _boiler + ( 57 )
                 	__GETB1MN _boiler,57
0022bb e0f0      	LDI  R31,0
0022bc 9730      	SBIW R30,0
0022bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
                +
0022be 91e0 0791+LDS R30 , _boiler + ( 58 )
                 	__GETB1MN _boiler,58
0022c0 e0f0      	LDI  R31,0
0022c1 9730      	SBIW R30,0
0022c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD:
                +
0022c3 91e0 0783+LDS R30 , _boiler + ( 44 )
0022c5 91f0 0784+LDS R31 , _boiler + ( 44 ) + 1
                 	__GETW1MN _boiler,44
0022c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
0022c8 91a0 0781+LDS R26 , _boiler + ( 42 )
0022ca 91b0 0782+LDS R27 , _boiler + ( 42 ) + 1
                 	__GETW2MN _boiler,42
0022cc 1bea      	SUB  R30,R26
0022cd 0bfb      	SBC  R31,R27
0022ce cfe1      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF:
0022cf 940e 27d4 	CALL __CWD1
0022d1 940e 2973 	CALL __CDF1
0022d3 940e 2a8e 	CALL __CMPF12
0022d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
0022d6 940e 0674 	CALL _GetTick_ms
0022d8 cf92      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x11:
0022d9 940e 0674 	CALL _GetTick_ms
0022db 01df      	MOVW R26,R30
0022dc 01cb      	MOVW R24,R22
                +
0022dd 91e0 0789+LDS R30 , _boiler + ( 50 )
0022df 91f0 078a+LDS R31 , _boiler + ( 50 ) + 1
0022e1 9160 078b+LDS R22 , _boiler + ( 50 ) + 2
0022e3 9170 078c+LDS R23 , _boiler + ( 50 ) + 3
                 	__GETD1MN _boiler,50
0022e5 940e 279f 	CALL __SUBD21
0022e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
                +
0022e8 32a1     +CPI R26 , LOW ( 0x4E21 )
0022e9 e4ee     +LDI R30 , HIGH ( 0x4E21 )
0022ea 07be     +CPC R27 , R30
0022eb e0e0     +LDI R30 , BYTE3 ( 0x4E21 )
0022ec 078e     +CPC R24 , R30
0022ed e0e0     +LDI R30 , BYTE4 ( 0x4E21 )
0022ee 079e     +CPC R25 , R30
                 	__CPD2N 0x4E21
0022ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
                +
0022f0 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
0022f2 cfe3      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
                +
0022f3 3ba8     +CPI R26 , LOW ( 0xBB8 )
0022f4 e0eb     +LDI R30 , HIGH ( 0xBB8 )
0022f5 07be     +CPC R27 , R30
0022f6 e0e0     +LDI R30 , BYTE3 ( 0xBB8 )
0022f7 078e     +CPC R24 , R30
0022f8 e0e0     +LDI R30 , BYTE4 ( 0xBB8 )
0022f9 079e     +CPC R25 , R30
                 	__CPD2N 0xBB8
0022fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
0022fb 9892      	CBI  0x12,2
0022fc e0e0      	LDI  R30,LOW(0)
                +
0022fd 93e0 0791+STS _boiler + ( 58 ) , R30
                 	__PUTB1MN _boiler,58
0022ff e0e2      	LDI  R30,LOW(2)
                +
002300 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
002302 cfd3      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
                +
002303 93e0 078e+STS _boiler + ( 55 ) , R30
                 	__PUTB1MN _boiler,55
002305 cfd0      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x17:
002306 e0e0      	LDI  R30,LOW(0)
002307 93e0 07c3 	STS  _oneminute_counter_S0010004000,R30
002309 93e0 07c4 	STS  _oneminute_counter_S0010004000+1,R30
00230b 93e0 07c5 	STS  _oneminute_counter_S0010004000+2,R30
00230d 93e0 07c6 	STS  _oneminute_counter_S0010004000+3,R30
00230f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
002310 9892      	CBI  0x12,2
002311 9894      	CBI  0x12,4
002312 9896      	CBI  0x12,6
002313 9897      	CBI  0x12,7
002314 cfc4      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
                +
002315 3ba9     +CPI R26 , LOW ( 0xBB9 )
002316 e0eb     +LDI R30 , HIGH ( 0xBB9 )
002317 07be     +CPC R27 , R30
002318 e0e0     +LDI R30 , BYTE3 ( 0xBB9 )
002319 078e     +CPC R24 , R30
00231a e0e0     +LDI R30 , BYTE4 ( 0xBB9 )
00231b 079e     +CPC R25 , R30
                 	__CPD2N 0xBB9
00231c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00231d 2766      	CLR  R22
00231e 2777      	CLR  R23
00231f 940e 2973 	CALL __CDF1
002321 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
002322 940e 29ad 	CALL __ADDF12
                +
002324 8da8     +LDD R26 , Y + 24
002325 8db9     +LDD R27 , Y + 24 + 1
002326 8d8a     +LDD R24 , Y + 24 + 2
002327 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
002328 940e 29fc 	CALL __MULF12
00232a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
                +
00232b 85aa     +LDD R26 , Y + 10
00232c 85bb     +LDD R27 , Y + 10 + 1
00232d 858c     +LDD R24 , Y + 10 + 2
00232e 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00232f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1D:
                +
002330 81ae     +LDD R26 , Y + 6
002331 81bf     +LDD R27 , Y + 6 + 1
002332 8588     +LDD R24 , Y + 6 + 2
002333 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
002334 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
002335 91e0 0761+LDS R30 , _boiler + ( 10 )
002337 91f0 0762+LDS R31 , _boiler + ( 10 ) + 1
002339 9160 0763+LDS R22 , _boiler + ( 10 ) + 2
00233b 9170 0764+LDS R23 , _boiler + ( 10 ) + 3
                 	__GETD1MN _boiler,10
00233d 940e 28a6 	CALL __PUTPARD1
00233f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
002340 91a0 0761+LDS R26 , _boiler + ( 10 )
002342 91b0 0762+LDS R27 , _boiler + ( 10 ) + 1
002344 9180 0763+LDS R24 , _boiler + ( 10 ) + 2
002346 9190 0764+LDS R25 , _boiler + ( 10 ) + 3
                 	__GETD2MN _boiler,10
002348 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
002349 940e 2a4a 	CALL __DIVF21
00234b 01df      	MOVW R26,R30
00234c 01cb      	MOVW R24,R22
                +
00234d e0e0     +LDI R30 , LOW ( 0x3F800000 )
00234e e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00234f e860     +LDI R22 , BYTE3 ( 0x3F800000 )
002350 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
002351 940e 28b8 	CALL __SWAPD12
002353 940e 29a6 	CALL __SUBF12
002355 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x21:
002356 940e 2144 	CALL _log
002358 940e 28a1 	CALL __PUTD1S0
                +
00235a eba7     +LDI R26 , LOW ( 0x340388B7 )
00235b e8b8     +LDI R27 , HIGH ( 0x340388B7 )
00235c e083     +LDI R24 , BYTE3 ( 0x340388B7 )
00235d e394     +LDI R25 , BYTE4 ( 0x340388B7 )
                 	__GETD2N 0x340388B7
00235e 940e 29fc 	CALL __MULF12
002360 940e 289c 	CALL __GETD2S0
002362 940e 29fc 	CALL __MULF12
                +
002364 e0a6     +LDI R26 , LOW ( 0x394D2906 )
002365 e2b9     +LDI R27 , HIGH ( 0x394D2906 )
002366 e48d     +LDI R24 , BYTE3 ( 0x394D2906 )
002367 e399     +LDI R25 , BYTE4 ( 0x394D2906 )
                 	__GETD2N 0x394D2906
002368 940e 29ad 	CALL __ADDF12
00236a 940e 289c 	CALL __GETD2S0
00236c 940e 29fc 	CALL __MULF12
                +
00236e e2a6     +LDI R26 , LOW ( 0x3A8FD526 )
00236f edb5     +LDI R27 , HIGH ( 0x3A8FD526 )
002370 e88f     +LDI R24 , BYTE3 ( 0x3A8FD526 )
002371 e39a     +LDI R25 , BYTE4 ( 0x3A8FD526 )
                 	__GETD2N 0x3A8FD526
002372 940e 29ad 	CALL __ADDF12
                +
002374 e0a0     +LDI R26 , LOW ( 0x3F800000 )
002375 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
002376 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
002377 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
002378 940e 2a4a 	CALL __DIVF21
                +
00237a ecad     +LDI R26 , LOW ( 0xBE4CCCCD )
00237b ecbc     +LDI R27 , HIGH ( 0xBE4CCCCD )
00237c e48c     +LDI R24 , BYTE3 ( 0xBE4CCCCD )
00237d eb9e     +LDI R25 , BYTE4 ( 0xBE4CCCCD )
                 	__GETD2N 0xBE4CCCCD
00237e 940e 29ad 	CALL __ADDF12
                +
002380 e3a3     +LDI R26 , LOW ( 0xC3889333 )
002381 e9b3     +LDI R27 , HIGH ( 0xC3889333 )
002382 e888     +LDI R24 , BYTE3 ( 0xC3889333 )
002383 ec93     +LDI R25 , BYTE4 ( 0xC3889333 )
                 	__GETD2N 0xC3889333
002384 940e 29ad 	CALL __ADDF12
002386 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
002387 d3f9      	RCALL __SAVELOCR4
002388 2f1a      	MOV  R17,R26
                +
002389 812c     +LDD R18 , Y + 4
00238a 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
00238b 2fe1      	MOV  R30,R17
00238c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
00238d 01d8      	MOVW R26,R16
00238e 91ec      	LD   R30,X
                +
00238f 81aa     +LDD R26 , Y + 2
002390 81bb     +LDD R27 , Y + 2 + 1
002391 961c     +ADIW R26 , 12
002392 93ec     +ST X , R30
                 	__PUTB1SNS 2,12
002393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x24:
002394 01d8      	MOVW R26,R16
002395 940e 287c 	CALL __GETD1P_INC
                +
002397 81aa     +LDD R26 , Y + 2
002398 81bb     +LDD R27 , Y + 2 + 1
002399 961c     +ADIW R26 , 12
00239a 940e 2881+CALL __PUTDP1
                 	__PUTD1SNS 2,12
00239c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
00239d 8da3      	LDD  R26,Z+27
00239e 8db4      	LDD  R27,Z+28
00239f 01fd      	MOVW R30,R26
0023a0 70e4      	ANDI R30,LOW(0x4)
0023a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x26:
0023a2 01f3      	MOVW R30,R6
                +
0023a3 81a6     +LDD R26 , Z + 6
0023a4 81b7     +LDD R27 , Z + 6 + 1
0023a5 8580     +LDD R24 , Z + 6 + 2
0023a6 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
                +
0023a7 e0e3     +LDI R30 , LOW ( 0x3 )
0023a8 e0f0     +LDI R31 , HIGH ( 0x3 )
0023a9 e060     +LDI R22 , BYTE3 ( 0x3 )
0023aa e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0023ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x27:
                +
0023ac 8be8     +STD Y + 16 , R30
0023ad 8bf9     +STD Y + 16 + 1 , R31
0023ae 8b6a     +STD Y + 16 + 2 , R22
0023af 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0023b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
0023b1 91e0 07f5 	LDS  R30,_prev_index_1stline_S0040003000
0023b3 91f0 07f6 	LDS  R31,_prev_index_1stline_S0040003000+1
0023b5 9160 07f7 	LDS  R22,_prev_index_1stline_S0040003000+2
0023b7 9170 07f8 	LDS  R23,_prev_index_1stline_S0040003000+3
                +
0023b9 89a8     +LDD R26 , Y + 16
0023ba 89b9     +LDD R27 , Y + 16 + 1
0023bb 898a     +LDD R24 , Y + 16 + 2
0023bc 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0023bd 940e 28ec 	CALL __CPD12
0023bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0023c0 91a0 07f9 	LDS  R26,_prev_activePage_S0040003000
0023c2 91b0 07fa 	LDS  R27,_prev_activePage_S0040003000+1
0023c4 166a      	CP   R6,R26
0023c5 067b      	CPC  R7,R27
0023c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
0023c7 81ae      	LDD  R26,Y+6
0023c8 81bf      	LDD  R27,Y+6+1
0023c9 0fea      	ADD  R30,R26
0023ca 1ffb      	ADC  R31,R27
0023cb 01af      	MOVW R20,R30
0023cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
                +
0023cd 89a8     +LDD R26 , Y + 16
0023ce 89b9     +LDD R27 , Y + 16 + 1
0023cf 898a     +LDD R24 , Y + 16 + 2
0023d0 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0023d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
                +
0023d2 87ec     +STD Y + 12 , R30
0023d3 87fd     +STD Y + 12 + 1 , R31
0023d4 876e     +STD Y + 12 + 2 , R22
0023d5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0023d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D:
0023d7 01d3      	MOVW R26,R6
0023d8 91ed      	LD   R30,X+
0023d9 91fd      	LD   R31,X+
0023da 01df      	MOVW R26,R30
0023db 85ec      	LDD  R30,Y+12
0023dc 85fd      	LDD  R31,Y+12+1
0023dd 01bd      	MOVW R22,R26
0023de e1ad      	LDI  R26,LOW(29)
0023df e0b0      	LDI  R27,HIGH(29)
0023e0 940e 27de 	CALL __MULW12U
0023e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2E:
                +
0023e3 85ac     +LDD R26 , Y + 12
0023e4 85bd     +LDD R27 , Y + 12 + 1
0023e5 858e     +LDD R24 , Y + 12 + 2
0023e6 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0023e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
0023e8 934a      	ST   -Y,R20
                +
0023e9 ece8     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
0023ea e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
                 	__POINTW1FN _0x80000,0
0023eb 93fa      	ST   -Y,R31
0023ec 93ea      	ST   -Y,R30
0023ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x30:
0023ee 91ed      	LD   R30,X+
0023ef 91fd      	LD   R31,X+
0023f0 2766      	CLR  R22
0023f1 2777      	CLR  R23
0023f2 940e 28a6 	CALL __PUTPARD1
0023f4 e084      	LDI  R24,4
0023f5 940e 1fa6 	CALL _glcd_printfxy
0023f7 9628      	ADIW R28,8
0023f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
0023f9 01db      	MOVW R26,R22
0023fa 0fae      	ADD  R26,R30
0023fb 1fbf      	ADC  R27,R31
0023fc 965b      	ADIW R26,27
0023fd 940e 2872 	CALL __GETW1P
0023ff 70e1      	ANDI R30,LOW(0x1)
002400 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32:
002401 8de8      	LDD  R30,Y+24
002402 8df9      	LDD  R31,Y+24+1
002403 8da0      	LDD  R26,Z+24
002404 8db1      	LDD  R27,Z+25
002405 940e 0bdf 	CALL _str_length
002407 963f      	ADIW R30,15
002408 019f      	MOVW R18,R30
002409 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x33:
00240a 8da8      	LDD  R26,Y+24
00240b 8db9      	LDD  R27,Y+24+1
00240c 961a      	ADIW R26,10
00240d 940e 2872 	CALL __GETW1P
00240f 93e0 07ef 	STS  _data_S0040003000,R30
002411 93f0 07f0 	STS  _data_S0040003000+1,R31
002413 8de8      	LDD  R30,Y+24
002414 8df9      	LDD  R31,Y+24+1
002415 8de2      	LDD  R30,Z+26
002416 e0f0      	LDI  R31,0
002417 9730      	SBIW R30,0
002418 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x34:
002419 932a      	ST   -Y,R18
00241a 934a      	ST   -Y,R20
                +
00241b eceb     +LDI R30 , LOW ( 2 * _0x80000 + ( 3 ) )
00241c e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 3 ) )
                 	__POINTW1FN _0x80000,3
00241d 93fa      	ST   -Y,R31
00241e 93ea      	ST   -Y,R30
00241f 91a0 07ef 	LDS  R26,_data_S0040003000
002421 91b0 07f0 	LDS  R27,_data_S0040003000+1
002423 91ec      	LD   R30,X
002424 27ff      	CLR  R31
002425 2766      	CLR  R22
002426 2777      	CLR  R23
002427 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x35:
002428 932a      	ST   -Y,R18
002429 934a      	ST   -Y,R20
                +
00242a ecec     +LDI R30 , LOW ( 2 * _0x80000 + ( 4 ) )
00242b e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 4 ) )
                 	__POINTW1FN _0x80000,4
00242c 93fa      	ST   -Y,R31
00242d 93ea      	ST   -Y,R30
00242e 91a0 07ef 	LDS  R26,_data_S0040003000
002430 91b0 07f0 	LDS  R27,_data_S0040003000+1
002432 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x36:
002433 8dec      	LDD  R30,Y+28
002434 8dfd      	LDD  R31,Y+28+1
                +
002435 8400     +LDD R0 , Z + 8
002436 8411     +LDD R1 , Z + 8 + 1
                 	__GETWRZ 0,1,8
002437 85a2      	LDD  R26,Z+10
002438 85b3      	LDD  R27,Z+11
002439 91ec      	LD   R30,X
00243a 01d0      	MOVW R26,R0
00243b e0f0      	LDI  R31,0
00243c 0fee      	LSL  R30
00243d 1fff      	ROL  R31
00243e 0fae      	ADD  R26,R30
00243f 1fbf      	ADC  R27,R31
002440 940e 2872 	CALL __GETW1P
002442 2766      	CLR  R22
002443 2777      	CLR  R23
002444 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37:
002445 932a      	ST   -Y,R18
002446 934a      	ST   -Y,R20
                +
002447 ecec     +LDI R30 , LOW ( 2 * _0x80000 + ( 4 ) )
002448 e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 4 ) )
                 	__POINTW1FN _0x80000,4
002449 93fa      	ST   -Y,R31
00244a 93ea      	ST   -Y,R30
00244b 8dec      	LDD  R30,Y+28
00244c 8dfd      	LDD  R31,Y+28+1
00244d 85a2      	LDD  R26,Z+10
00244e 85b3      	LDD  R27,Z+11
00244f 91ec      	LD   R30,X
002450 27ff      	CLR  R31
002451 2766      	CLR  R22
002452 2777      	CLR  R23
002453 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x38:
002454 e084      	LDI  R24,4
002455 940e 1fa6 	CALL _glcd_printfxy
002457 9628      	ADIW R28,8
002458 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39:
002459 932a      	ST   -Y,R18
00245a 934a      	ST   -Y,R20
                +
00245b ede0     +LDI R30 , LOW ( 2 * _0x80000 + ( 8 ) )
00245c e0f8     +LDI R31 , HIGH ( 2 * _0x80000 + ( 8 ) )
                 	__POINTW1FN _0x80000,8
00245d 93fa      	ST   -Y,R31
00245e 93ea      	ST   -Y,R30
00245f 91a0 07ef 	LDS  R26,_data_S0040003000
002461 91b0 07f0 	LDS  R27,_data_S0040003000+1
002463 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
                +
002464 e0e1     +LDI R30 , LOW ( 0x1 )
002465 e0f0     +LDI R31 , HIGH ( 0x1 )
002466 e060     +LDI R22 , BYTE3 ( 0x1 )
002467 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
002468 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
002469 93e0 07f1 	STS  _prev_index_S0040003000,R30
00246b 93f0 07f2 	STS  _prev_index_S0040003000+1,R31
00246d 9360 07f3 	STS  _prev_index_S0040003000+2,R22
00246f 9370 07f4 	STS  _prev_index_S0040003000+3,R23
002471 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C:
002472 89ac      	LDD  R26,Y+20
002473 89bd      	LDD  R27,Y+20+1
002474 e0e8      	LDI  R30,LOW(8)
002475 940e 2806 	CALL __MULB1W2U
002477 cf4f      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
002478 93fa      	ST   -Y,R31
002479 93ea      	ST   -Y,R30
00247a e080      	LDI  R24,0
00247b 940e 1fa6 	CALL _glcd_printfxy
00247d 9624      	ADIW R28,4
00247e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
00247f 89e8     +LDD R30 , Y + 16
002480 89f9     +LDD R31 , Y + 16 + 1
002481 896a     +LDD R22 , Y + 16 + 2
002482 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
002483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3F:
002484 01d3      	MOVW R26,R6
002485 91ed      	LD   R30,X+
002486 91fd      	LD   R31,X+
002487 01df      	MOVW R26,R30
002488 85e8      	LDD  R30,Y+8
002489 85f9      	LDD  R31,Y+8+1
00248a 01bd      	MOVW R22,R26
00248b e1ad      	LDI  R26,LOW(29)
00248c e0b0      	LDI  R27,HIGH(29)
00248d 940e 27de 	CALL __MULW12U
00248f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
002490 8de8      	LDD  R30,Y+24
002491 8df9      	LDD  R31,Y+24+1
                +
002492 8404     +LDD R0 , Z + 12
002493 8415     +LDD R1 , Z + 12 + 1
                 	__GETWRZ 0,1,12
002494 91a0 07ef 	LDS  R26,_data_S0040003000
002496 91b0 07f0 	LDS  R27,_data_S0040003000+1
002498 91ec      	LD   R30,X
002499 01d0      	MOVW R26,R0
00249a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x41:
00249b 940e 28a6 	CALL __PUTPARD1
00249d cfb6      	RJMP SUBOPT_0x38
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x42:
00249e 8de8      	LDD  R30,Y+24
00249f 8df9      	LDD  R31,Y+24+1
                +
0024a0 8404     +LDD R0 , Z + 12
0024a1 8415     +LDD R1 , Z + 12 + 1
                 	__GETWRZ 0,1,12
0024a2 91a0 07ef 	LDS  R26,_data_S0040003000
0024a4 91b0 07f0 	LDS  R27,_data_S0040003000+1
0024a6 940e 2872 	CALL __GETW1P
0024a8 15e0      	CP   R30,R0
0024a9 05f1      	CPC  R31,R1
0024aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
0024ab 91a0 07ef 	LDS  R26,_data_S0040003000
0024ad 91b0 07f0 	LDS  R27,_data_S0040003000+1
0024af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x44:
0024b0 8de8      	LDD  R30,Y+24
0024b1 8df9      	LDD  R31,Y+24+1
                +
0024b2 85a4     +LDD R26 , Z + 12
0024b3 85b5     +LDD R27 , Z + 12 + 1
0024b4 8586     +LDD R24 , Z + 12 + 2
0024b5 8597     +LDD R25 , Z + 12 + 3
                 	__GETD2Z 12
0024b6 010d      	MOVW R0,R26
0024b7 dff3      	RCALL SUBOPT_0x43
0024b8 940e 287c 	CALL __GETD1P_INC
0024ba 01d0      	MOVW R26,R0
0024bb 940e 28ec 	CALL __CPD12
0024bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
0024be 940e 287c 	CALL __GETD1P_INC
0024c0 cfda      	RJMP SUBOPT_0x41
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
0024c1 940e 2872 	CALL __GETW1P
0024c3 15e0      	CP   R30,R0
0024c4 05f1      	CPC  R31,R1
0024c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x47:
0024c6 01f3      	MOVW R30,R6
                +
0024c7 81a2     +LDD R26 , Z + 2
0024c8 81b3     +LDD R27 , Z + 2 + 1
0024c9 8184     +LDD R24 , Z + 2 + 2
0024ca 8195     +LDD R25 , Z + 2 + 3
                 	__GETD2Z 2
0024cb df98      	RCALL SUBOPT_0x3A
0024cc 940e 28b8 	CALL __SWAPD12
0024ce 940e 279a 	CALL __SUBD12
0024d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
0024d1 940e 287c 	CALL __GETD1P_INC
0024d3 9731      	SBIW R30,1
0024d4 4060      	SBCI R22,0
0024d5 4070      	SBCI R23,0
0024d6 940e 2886 	CALL __PUTDP1_DEC
0024d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x49:
0024d9 931a      	ST   -Y,R17
0024da 930a      	ST   -Y,R16
0024db 018d      	MOVW R16,R26
0024dc 01f8      	MOVW R30,R16
0024dd 8de2      	LDD  R30,Z+26
0024de e0f0      	LDI  R31,0
0024df 9730      	SBIW R30,0
0024e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4A:
0024e1 01f8      	MOVW R30,R16
0024e2 85a2      	LDD  R26,Z+10
0024e3 85b3      	LDD  R27,Z+11
0024e4 91ac      	LD   R26,X
0024e5 89e4      	LDD  R30,Z+20
0024e6 17ae      	CP   R26,R30
0024e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4B:
0024e8 01f8      	MOVW R30,R16
0024e9 85a2      	LDD  R26,Z+10
0024ea 85b3      	LDD  R27,Z+11
0024eb 91ec      	LD   R30,X
0024ec 5fef      	SUBI R30,-LOW(1)
0024ed 93ec      	ST   X,R30
0024ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4C:
0024ef 01f8      	MOVW R30,R16
0024f0 85a2      	LDD  R26,Z+10
0024f1 85b3      	LDD  R27,Z+11
0024f2 900d      	LD   R0,X+
0024f3 901c      	LD   R1,X
0024f4 01d8      	MOVW R26,R16
0024f5 9654      	ADIW R26,20
0024f6 940e 2872 	CALL __GETW1P
0024f8 160e      	CP   R0,R30
0024f9 061f      	CPC  R1,R31
0024fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
0024fb 01f8      	MOVW R30,R16
0024fc 85a2      	LDD  R26,Z+10
0024fd 85b3      	LDD  R27,Z+11
0024fe 91ed      	LD   R30,X+
0024ff 91fd      	LD   R31,X+
002500 9631      	ADIW R30,1
002501 93fe      	ST   -X,R31
002502 93ee      	ST   -X,R30
002503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4E:
002504 01f8      	MOVW R30,R16
002505 85a2      	LDD  R26,Z+10
002506 85b3      	LDD  R27,Z+11
002507 940e 287c 	CALL __GETD1P_INC
002509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4F:
00250a 01d8      	MOVW R26,R16
00250b 9654      	ADIW R26,20
00250c 940e 287c 	CALL __GETD1P_INC
00250e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x50:
                +
00250f e0a0     +LDI R26 , LOW ( 0x3F800000 )
002510 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
002511 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
002512 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
002513 940e 29ad 	CALL __ADDF12
002515 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
                +
002516 e0a0     +LDI R26 , LOW ( 0xBF800000 )
002517 e0b0     +LDI R27 , HIGH ( 0xBF800000 )
002518 e880     +LDI R24 , BYTE3 ( 0xBF800000 )
002519 eb9f     +LDI R25 , BYTE4 ( 0xBF800000 )
                 	__GETD2N 0xBF800000
00251a 940e 29ad 	CALL __ADDF12
00251c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x52:
00251d 01f8      	MOVW R30,R16
00251e 85a2      	LDD  R26,Z+10
00251f 85b3      	LDD  R27,Z+11
002520 91ac      	LD   R26,X
002521 89e0      	LDD  R30,Z+16
002522 17ea      	CP   R30,R26
002523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
002524 01f8      	MOVW R30,R16
002525 85a2      	LDD  R26,Z+10
002526 85b3      	LDD  R27,Z+11
002527 91ec      	LD   R30,X
002528 50e1      	SUBI R30,LOW(1)
002529 93ec      	ST   X,R30
00252a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x54:
00252b 01f8      	MOVW R30,R16
00252c 85a2      	LDD  R26,Z+10
00252d 85b3      	LDD  R27,Z+11
00252e 900d      	LD   R0,X+
00252f 901c      	LD   R1,X
002530 01d8      	MOVW R26,R16
002531 9650      	ADIW R26,16
002532 cf8e      	RJMP SUBOPT_0x46
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x55:
002533 01f8      	MOVW R30,R16
002534 85a2      	LDD  R26,Z+10
002535 85b3      	LDD  R27,Z+11
002536 91ed      	LD   R30,X+
002537 91fd      	LD   R31,X+
002538 9731      	SBIW R30,1
002539 93fe      	ST   -X,R31
00253a 93ee      	ST   -X,R30
00253b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x56:
00253c 01d8      	MOVW R26,R16
00253d 9650      	ADIW R26,16
00253e 940e 287c 	CALL __GETD1P_INC
002540 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x57:
002541 93ba      	ST   -Y,R27
002542 93aa      	ST   -Y,R26
002543 d23b      	RCALL __SAVELOCR6
002544 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x58:
002545 81ee      	LDD  R30,Y+6
002546 81ff      	LDD  R31,Y+6+1
002547 93fa      	ST   -Y,R31
002548 93ea      	ST   -Y,R30
002549 2fa1      	MOV  R26,R17
00254a 940c 0ff6 	JMP  _emit_command
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x59:
00254c 940e 0674 	CALL _GetTick_ms
00254e 93e0 0800 	STS  _time_emitted_S0050001000,R30
002550 93f0 0801 	STS  _time_emitted_S0050001000+1,R31
002552 9360 0802 	STS  _time_emitted_S0050001000+2,R22
002554 9370 0803 	STS  _time_emitted_S0050001000+3,R23
002556 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5A:
002557 940e 0674 	CALL _GetTick_ms
002559 01df      	MOVW R26,R30
00255a 01cb      	MOVW R24,R22
00255b 91e0 07fc 	LDS  R30,_time_pressed_S0050001000
00255d 91f0 07fd 	LDS  R31,_time_pressed_S0050001000+1
00255f 9160 07fe 	LDS  R22,_time_pressed_S0050001000+2
002561 9170 07ff 	LDS  R23,_time_pressed_S0050001000+3
002563 940e 279f 	CALL __SUBD21
002565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5B:
002566 d21a      	RCALL __SAVELOCR4
                +
002567 e000     +LDI R16 , LOW ( 0 )
002568 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
002569 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x5C:
00256a 940e 279f 	CALL __SUBD21
                +
00256c 3ea9     +CPI R26 , LOW ( 0x3E9 )
00256d e0e3     +LDI R30 , HIGH ( 0x3E9 )
00256e 07be     +CPC R27 , R30
00256f e0e0     +LDI R30 , BYTE3 ( 0x3E9 )
002570 078e     +CPC R24 , R30
002571 e0e0     +LDI R30 , BYTE4 ( 0x3E9 )
002572 079e     +CPC R25 , R30
                 	__CPD2N 0x3E9
002573 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5D:
                +
002574 91e0 0790+LDS R30 , _boiler + ( 57 )
                 	__GETB1MN _boiler,57
002576 e2af      	LDI  R26,LOW(_boiler_role_str)
002577 e0b7      	LDI  R27,HIGH(_boiler_role_str)
002578 e0f0      	LDI  R31,0
002579 0fee      	LSL  R30
00257a 1fff      	ROL  R31
00257b 0fae      	ADD  R26,R30
00257c 1fbf      	ADC  R27,R31
00257d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5E:
00257e 93fa      	ST   -Y,R31
00257f 93ea      	ST   -Y,R30
002580 e0a0      	LDI  R26,LOW(0)
002581 940c 17e3 	JMP  _glcd_putimagef
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5F:
002583 940e 28a6 	CALL __PUTPARD1
                +
002585 e2eb     +LDI R30 , LOW ( 0x2B )
002586 e0f0     +LDI R31 , HIGH ( 0x2B )
002587 e060     +LDI R22 , BYTE3 ( 0x2B )
002588 e070     +LDI R23 , BYTE4 ( 0x2B )
                 	__GETD1N 0x2B
002589 940e 28a6 	CALL __PUTPARD1
00258b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x60:
00258c 91e4      	LPM  R30,Z
00258d e0f0      	LDI  R31,0
00258e 9632      	ADIW R30,2
00258f 940e 27d4 	CALL __CWD1
002591 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x61:
002592 dcd3      	RCALL SUBOPT_0x2
002593 940e 28a6 	CALL __PUTPARD1
                +
002595 e2e1     +LDI R30 , LOW ( 0x21 )
002596 e0f0     +LDI R31 , HIGH ( 0x21 )
002597 e060     +LDI R22 , BYTE3 ( 0x21 )
002598 e070     +LDI R23 , BYTE4 ( 0x21 )
                 	__GETD1N 0x21
002599 940e 28a6 	CALL __PUTPARD1
                +
00259b e7ef     +LDI R30 , LOW ( 0x7F )
00259c e0f0     +LDI R31 , HIGH ( 0x7F )
00259d e060     +LDI R22 , BYTE3 ( 0x7F )
00259e e070     +LDI R23 , BYTE4 ( 0x7F )
                 	__GETD1N 0x7F
00259f 940e 28a6 	CALL __PUTPARD1
                +
0025a1 e3af     +LDI R26 , LOW ( 0x3F )
0025a2 e0b0     +LDI R27 , HIGH ( 0x3F )
0025a3 e080     +LDI R24 , BYTE3 ( 0x3F )
0025a4 e090     +LDI R25 , BYTE4 ( 0x3F )
                 	__GETD2N 0x3F
0025a5 940c 1104 	JMP  _clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x62:
0025a7 9aaa      	SBI  0x15,2
0025a8 e0e0      	LDI  R30,LOW(0)
0025a9 bbea      	OUT  0x1A,R30
0025aa 9aa9      	SBI  0x15,1
0025ab 940c 12e8 	JMP  _st7920_delay_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x63:
0025ad 931a      	ST   -Y,R17
0025ae 930a      	ST   -Y,R16
0025af 2f1a      	MOV  R17,R26
0025b0 810a      	LDD  R16,Y+2
0025b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x64:
0025b2 91e0 08fe 	LDS  R30,_st7920_graphics_on_G100
0025b4 63e0      	ORI  R30,LOW(0x30)
0025b5 2fae      	MOV  R26,R30
0025b6 940c 1312 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x65:
0025b8 91e0 08fe 	LDS  R30,_st7920_graphics_on_G100
0025ba 63e4      	ORI  R30,LOW(0x34)
0025bb 2fae      	MOV  R26,R30
0025bc 940c 1312 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x66:
0025be e3a0      	LDI  R26,LOW(48)
0025bf 940e 12ec 	CALL _st7920_wrbus_G100
                +
0025c1 e980     +LDI R24 , LOW ( 400 )
0025c2 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
0025c3 9701     +SBIW R24 , 1
0025c4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
0025c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
0025c6 d1ba      	RCALL __SAVELOCR4
0025c7 2f1a      	MOV  R17,R26
0025c8 810c      	LDD  R16,Y+4
0025c9 813d      	LDD  R19,Y+5
0025ca 933a      	ST   -Y,R19
0025cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
0025cc 70e7      	ANDI R30,LOW(0x7)
0025cd e0a7      	LDI  R26,LOW(7)
0025ce 940e 28c1 	CALL __SWAPB12
0025d0 1bea      	SUB  R30,R26
0025d1 e0a1      	LDI  R26,LOW(1)
0025d2 940e 27b0 	CALL __LSLB12
0025d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x69:
0025d5 940e 13f7 	CALL _st7920_rdbyte_G100
0025d7 2fae      	MOV  R26,R30
0025d8 940c 2241 	JMP  _glcd_revbits
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6A:
0025da 0fea      	ADD  R30,R26
0025db 1ffb      	ADC  R31,R27
0025dc 83ee      	STD  Y+6,R30
0025dd 83ff      	STD  Y+6+1,R31
0025de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6B:
0025df 89e8      	LDD  R30,Y+16
0025e0 93ea      	ST   -Y,R30
0025e1 81ef      	LDD  R30,Y+7
0025e2 85f8      	LDD  R31,Y+7+1
0025e3 9631      	ADIW R30,1
0025e4 83ef      	STD  Y+7,R30
0025e5 87f8      	STD  Y+7+1,R31
0025e6 9731      	SBIW R30,1
0025e7 93fa      	ST   -Y,R31
0025e8 93ea      	ST   -Y,R30
0025e9 e0a0      	LDI  R26,LOW(0)
0025ea 940c 221f 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6C:
0025ec 89e8      	LDD  R30,Y+16
0025ed 93ea      	ST   -Y,R30
0025ee 81af      	LDD  R26,Y+7
0025ef 85b8      	LDD  R27,Y+7+1
0025f0 2788      	CLR  R24
0025f1 2799      	CLR  R25
0025f2 940c 2200 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
0025f4 89e8      	LDD  R30,Y+16
0025f5 93ea      	ST   -Y,R30
0025f6 81ef      	LDD  R30,Y+7
0025f7 85f8      	LDD  R31,Y+7+1
0025f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
0025f9 93ea      	ST   -Y,R30
0025fa 85ee      	LDD  R30,Y+14
0025fb 93ea      	ST   -Y,R30
0025fc 89a9      	LDD  R26,Y+17
0025fd 940c 1451 	JMP  _st7920_wrmasked_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6F:
0025ff 931a      	ST   -Y,R17
002600 930a      	ST   -Y,R16
002601 018d      	MOVW R16,R26
002602 2400      	CLR  R0
002603 1600      	CP   R0,R16
002604 0601      	CPC  R0,R17
002605 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x70:
002606 d178      	RCALL __SAVELOCR6
                +
002607 91e0 06ef+LDS R30 , _glcd_state + ( 4 )
002609 91f0 06f0+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00260b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x71:
00260c 01f8      	MOVW R30,R16
                +
00260d 5f0f     +SUBI R16 , LOW ( - 1 )
00260e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00260f 9004      	LPM  R0,Z
002610 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
002611 91e0 06ef+LDS R30 , _glcd_state + ( 4 )
002613 91f0 06f0+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
002615 9631      	ADIW R30,1
002616 91e4      	LPM  R30,Z
002617 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
002618 940e 1686 	CALL _glcd_clipy
                +
00261a 93e0 06ee+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00261c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00261d e0f0      	LDI  R31,0
00261e 0fea      	ADD  R30,R26
00261f 1ffb      	ADC  R31,R27
002620 018f      	MOVW R16,R30
002621 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x75:
                +
002622 91e0 06ed+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
002624 93ea      	ST   -Y,R30
                +
002625 91e0 06ee+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
002627 93ea      	ST   -Y,R30
002628 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x76:
002629 940e 1495 	CALL _glcd_block
                +
00262b 91e0 06ed+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00262d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x77:
00262e 93ea      	ST   -Y,R30
00262f e0e0      	LDI  R30,LOW(0)
002630 93ea      	ST   -Y,R30
002631 e0e0      	LDI  R30,LOW(0)
002632 e0f0      	LDI  R31,HIGH(0)
002633 93fa      	ST   -Y,R31
002634 93ea      	ST   -Y,R30
002635 e0a9      	LDI  R26,LOW(9)
002636 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x78:
002637 83ee      	STD  Y+6,R30
002638 83ff      	STD  Y+6+1,R31
002639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x79:
00263a 81ee      	LDD  R30,Y+6
00263b 50e1      	SUBI R30,LOW(1)
00263c 83ee      	STD  Y+6,R30
00263d 5fef      	SUBI R30,-LOW(1)
00263e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7A:
00263f 933a      	ST   -Y,R19
002640 85aa      	LDD  R26,Y+10
002641 940c 180c 	JMP  _glcd_putpixelm_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7B:
002643 85a9      	LDD  R26,Y+9
002644 85ba      	LDD  R27,Y+9+1
002645 0fea      	ADD  R30,R26
002646 1ffb      	ADC  R31,R27
002647 87e9      	STD  Y+9,R30
002648 87fa      	STD  Y+9+1,R31
002649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7C:
00264a 85e9      	LDD  R30,Y+9
00264b 85fa      	LDD  R31,Y+9+1
00264c 1bea      	SUB  R30,R26
00264d 0bfb      	SBC  R31,R27
00264e 87e9      	STD  Y+9,R30
00264f 87fa      	STD  Y+9+1,R31
002650 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
002651 85e9      	LDD  R30,Y+9
002652 93ea      	ST   -Y,R30
002653 85e9      	LDD  R30,Y+9
002654 93ea      	ST   -Y,R30
002655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7E:
002656 e0f0      	LDI  R31,0
002657 1bae      	SUB  R26,R30
002658 0bbf      	SBC  R27,R31
002659 019d      	MOVW R18,R26
00265a 89a9      	LDD  R26,Y+17
00265b 27bb      	CLR  R27
00265c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7F:
00265d e0f0      	LDI  R31,0
00265e 0fea      	ADD  R30,R26
00265f 1ffb      	ADC  R31,R27
002660 01af      	MOVW R20,R30
002661 85e8      	LDD  R30,Y+8
002662 78e1      	ANDI R30,LOW(0x81)
002663 38e1      	CPI  R30,LOW(0x81)
002664 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x80:
002665 1bea      	SUB  R30,R26
002666 0bfb      	SBC  R31,R27
002667 010f      	MOVW R0,R30
002668 01df      	MOVW R26,R30
002669 85eb      	LDD  R30,Y+11
00266a 85fc      	LDD  R31,Y+11+1
00266b 17ae      	CP   R26,R30
00266c 07bf      	CPC  R27,R31
00266d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x81:
00266e 85e9      	LDD  R30,Y+9
00266f 85fa      	LDD  R31,Y+9+1
002670 15e0      	CP   R30,R0
002671 05f1      	CPC  R31,R1
002672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
002673 930a      	ST   -Y,R16
002674 2fa2      	MOV  R26,R18
002675 940c 1697 	JMP  _glcd_setpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
002677 930a      	ST   -Y,R16
002678 2fa2      	MOV  R26,R18
002679 50a2      	SUBI R26,LOW(2)
00267a 940e 1438 	CALL _glcd_getpixel
00267c 2fae      	MOV  R26,R30
00267d 81ee      	LDD  R30,Y+6
00267e 17ea      	CP   R30,R26
00267f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x84:
002680 85eb      	LDD  R30,Y+11
002681 85fc      	LDD  R31,Y+11+1
002682 17ae      	CP   R26,R30
002683 07bf      	CPC  R27,R31
002684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
002685 85e9      	LDD  R30,Y+9
002686 85fa      	LDD  R31,Y+9+1
002687 17ea      	CP   R30,R26
002688 07fb      	CPC  R31,R27
002689 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x86:
00268a 930a      	ST   -Y,R16
00268b 2fa4      	MOV  R26,R20
00268c 940e 1697 	CALL _glcd_setpixel
00268e 81af      	LDD  R26,Y+7
00268f 30a2      	CPI  R26,LOW(0x2)
002690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x87:
002691 930a      	ST   -Y,R16
002692 2fa4      	MOV  R26,R20
002693 5fae      	SUBI R26,-LOW(2)
002694 940e 1438 	CALL _glcd_getpixel
002696 2fae      	MOV  R26,R30
002697 81ee      	LDD  R30,Y+6
002698 17ea      	CP   R30,R26
002699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x88:
00269a 93ea      	ST   -Y,R30
00269b 2fa2      	MOV  R26,R18
00269c 940e 1438 	CALL _glcd_getpixel
00269e 2fae      	MOV  R26,R30
00269f 81ee      	LDD  R30,Y+6
0026a0 17ea      	CP   R30,R26
0026a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x89:
0026a2 93ea      	ST   -Y,R30
0026a3 2fa4      	MOV  R26,R20
0026a4 940e 1438 	CALL _glcd_getpixel
0026a6 2fae      	MOV  R26,R30
0026a7 81ee      	LDD  R30,Y+6
0026a8 17ea      	CP   R30,R26
0026a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8A:
0026aa 85e8      	LDD  R30,Y+8
0026ab 93ea      	ST   -Y,R30
0026ac 85e8      	LDD  R30,Y+8
0026ad 93ea      	ST   -Y,R30
0026ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8B:
0026af 01d8      	MOVW R26,R16
0026b0 93ec      	ST   X,R30
                +
0026b1 5f0f     +SUBI R16 , LOW ( - 1 )
0026b2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0026b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8C:
0026b4 933a      	ST   -Y,R19
0026b5 ada8      	LDD  R26,Y+56
0026b6 940e 1438 	CALL _glcd_getpixel
0026b8 2f5e      	MOV  R21,R30
0026b9 a9ee      	LDD  R30,Y+54
0026ba 17e5      	CP   R30,R21
0026bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8D:
0026bc 2f2e      	MOV  R18,R30
0026bd 933a      	ST   -Y,R19
0026be 2fa2      	MOV  R26,R18
0026bf 940e 1438 	CALL _glcd_getpixel
0026c1 2f5e      	MOV  R21,R30
0026c2 a9ee      	LDD  R30,Y+54
0026c3 17e5      	CP   R30,R21
0026c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8E:
0026c5 dc6a      	RCALL SUBOPT_0x1D
                +
0026c6 e0e0     +LDI R30 , LOW ( 0x41200000 )
0026c7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0026c8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0026c9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0026ca 940e 29fc 	CALL __MULF12
                +
0026cc 83ee     +STD Y + 6 , R30
0026cd 83ff     +STD Y + 6 + 1 , R31
0026ce 8768     +STD Y + 6 + 2 , R22
0026cf 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
0026d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x8F:
                +
0026d1 81ee     +LDD R30 , Y + 6
0026d2 81ff     +LDD R31 , Y + 6 + 1
0026d3 8568     +LDD R22 , Y + 6 + 2
0026d4 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0026d5 dd0d      	RCALL SUBOPT_0x2E
0026d6 940e 2a8e 	CALL __CMPF12
0026d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x90:
0026d9 dd09      	RCALL SUBOPT_0x2E
                +
0026da eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0026db ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0026dc ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0026dd e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0026de 940e 29fc 	CALL __MULF12
0026e0 dcf1      	RCALL SUBOPT_0x2C
0026e1 5f3f      	SUBI R19,-LOW(1)
0026e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
                +
0026e3 e0e0     +LDI R30 , LOW ( 0x41200000 )
0026e4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0026e5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0026e6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0026e7 940e 29fc 	CALL __MULF12
0026e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x92:
                +
0026ea e0a0     +LDI R26 , LOW ( 0x3F000000 )
0026eb e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0026ec e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0026ed e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0026ee 940e 29ad 	CALL __ADDF12
0026f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x93:
0026f1 dc3e      	RCALL SUBOPT_0x1D
                +
0026f2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0026f3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0026f4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0026f5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0026f6 940e 29fc 	CALL __MULF12
0026f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x94:
0026f9 01df      	MOVW R26,R30
0026fa 01cb      	MOVW R24,R22
0026fb 940e 2131 	CALL _floor
                +
0026fd 83ee     +STD Y + 6 , R30
0026fe 83ff     +STD Y + 6 + 1 , R31
0026ff 8768     +STD Y + 6 + 2 , R22
002700 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
002701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x95:
002702 dc2d      	RCALL SUBOPT_0x1D
002703 940e 29fc 	CALL __MULF12
002705 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x96:
002706 940e 28b8 	CALL __SWAPD12
002708 940e 29a6 	CALL __SUBF12
00270a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x97:
00270b 932a      	ST   -Y,R18
00270c 81af      	LDD  R26,Y+7
00270d 85b8      	LDD  R27,Y+7+1
00270e 85e9      	LDD  R30,Y+9
00270f 85fa      	LDD  R31,Y+9+1
002710 9509      	ICALL
002711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x98:
                +
002712 01fe     +MOVW R30 , R28
002713 5ae6     +SUBI R30 , LOW ( - 90 )
002714 4fff     +SBCI R31 , HIGH ( - 90 )
002715 940e 288b+CALL __GETW1Z
                 	__GETW1SX 90
002717 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x99:
002718 9734      	SBIW R30,4
                +
002719 01de     +MOVW R26 , R28
00271a 5aa6     +SUBI R26 , LOW ( - 90 )
00271b 4fbf     +SBCI R27 , HIGH ( - 90 )
00271c 93ed     +ST X + , R30
00271d 93fc     +ST X , R31
                 	__PUTW1SX 90
00271e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9A:
00271f 81af      	LDD  R26,Y+7
002720 85b8      	LDD  R27,Y+7+1
002721 85e9      	LDD  R30,Y+9
002722 85fa      	LDD  R31,Y+9+1
002723 9509      	ICALL
002724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x9B:
                +
002725 01de     +MOVW R26 , R28
002726 5aa6     +SUBI R26 , LOW ( - 90 )
002727 4fbf     +SBCI R27 , HIGH ( - 90 )
002728 940e 2891+CALL __GETW2X
                 	__GETW2SX 90
00272a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
                +
00272b 87ea     +STD Y + 10 , R30
00272c 87fb     +STD Y + 10 + 1 , R31
00272d 876c     +STD Y + 10 + 2 , R22
00272e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00272f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9D:
002730 dfe1      	RCALL SUBOPT_0x98
002731 cfe6      	RJMP SUBOPT_0x99
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9E:
                +
002732 85ea     +LDD R30 , Y + 10
002733 85fb     +LDD R31 , Y + 10 + 1
002734 856c     +LDD R22 , Y + 10 + 2
002735 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
002736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9F:
002737 87ee      	STD  Y+14,R30
002738 87ff      	STD  Y+14+1,R31
002739 85ae      	LDD  R26,Y+14
00273a 85bf      	LDD  R27,Y+14+1
00273b 940e 20b2 	CALL _strlen
00273d 2f1e      	MOV  R17,R30
00273e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xA0:
00273f 7f0b      	ANDI R16,LOW(251)
002740 89ed      	LDD  R30,Y+21
002741 93ea      	ST   -Y,R30
                +
002742 01de     +MOVW R26 , R28
002743 5aa9     +SUBI R26 , LOW ( - 87 )
002744 4fbf     +SBCI R27 , HIGH ( - 87 )
002745 940e 2891+CALL __GETW2X
                 	__GETW2SX 87
                +
002747 01fe     +MOVW R30 , R28
002748 5ae7     +SUBI R30 , LOW ( - 89 )
002749 4fff     +SBCI R31 , HIGH ( - 89 )
00274a 940e 288b+CALL __GETW1Z
                 	__GETW1SX 89
00274c 9509      	ICALL
00274d 3050      	CPI  R21,0
00274e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA1:
                +
00274f 87eb     +STD Y + 11 , R30
002750 87fc     +STD Y + 11 + 1 , R31
002751 876d     +STD Y + 11 + 2 , R22
002752 877e     +STD Y + 11 + 3 , R23
                 	__PUTD1S 11
002753 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA2:
                +
002754 83ee     +STD Y + 6 , R30
002755 83ff     +STD Y + 6 + 1 , R31
002756 8768     +STD Y + 6 + 2 , R22
002757 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
002758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA3:
                +
002759 81ee     +LDD R30 , Y + 6
00275a 81ff     +LDD R31 , Y + 6 + 1
00275b 8568     +LDD R22 , Y + 6 + 2
00275c 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
00275d 85ab     +LDD R26 , Y + 11
00275e 85bc     +LDD R27 , Y + 11 + 1
00275f 858d     +LDD R24 , Y + 11 + 2
002760 859e     +LDD R25 , Y + 11 + 3
                 	__GETD2S 11
002761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA4:
                +
002762 85ab     +LDD R26 , Y + 11
002763 85bc     +LDD R27 , Y + 11 + 1
002764 858d     +LDD R24 , Y + 11 + 2
002765 859e     +LDD R25 , Y + 11 + 3
                 	__GETD2S 11
002766 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA5:
002767 940e 27d4 	CALL __CWD1
002769 940e 2973 	CALL __CDF1
00276b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA6:
00276c 81ee      	LDD  R30,Y+6
00276d 81ff      	LDD  R31,Y+6+1
00276e 9731      	SBIW R30,1
00276f 83ee      	STD  Y+6,R30
002770 83ff      	STD  Y+6+1,R31
002771 9631      	ADIW R30,1
002772 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA7:
                +
002773 e0a0     +LDI R26 , LOW ( 0x3F800000 )
002774 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
002775 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
002776 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
002777 940e 29a6 	CALL __SUBF12
002779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA8:
                +
00277a 81ee     +LDD R30 , Y + 6
00277b 81ff     +LDD R31 , Y + 6 + 1
00277c 8568     +LDD R22 , Y + 6 + 2
00277d 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00277e 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00277f 935a      	ST   -Y,R21
                 __SAVELOCR5:
002780 934a      	ST   -Y,R20
                 __SAVELOCR4:
002781 933a      	ST   -Y,R19
                 __SAVELOCR3:
002782 932a      	ST   -Y,R18
                 __SAVELOCR2:
002783 931a      	ST   -Y,R17
002784 930a      	ST   -Y,R16
002785 9508      	RET
                 
                 __LOADLOCR6:
002786 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
002787 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
002788 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
002789 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00278a 8119      	LDD  R17,Y+1
00278b 8108      	LD   R16,Y
00278c 9508      	RET
                 
                 __ADDW1R15:
00278d 2400      	CLR  R0
00278e 0def      	ADD  R30,R15
00278f 1df0      	ADC  R31,R0
002790 9508      	RET
                 
                 __ADDW2R15:
002791 2400      	CLR  R0
002792 0daf      	ADD  R26,R15
002793 1db0      	ADC  R27,R0
002794 9508      	RET
                 
                 __ADDD12:
002795 0fea      	ADD  R30,R26
002796 1ffb      	ADC  R31,R27
002797 1f68      	ADC  R22,R24
002798 1f79      	ADC  R23,R25
002799 9508      	RET
                 
                 __SUBD12:
00279a 1bea      	SUB  R30,R26
00279b 0bfb      	SBC  R31,R27
00279c 0b68      	SBC  R22,R24
00279d 0b79      	SBC  R23,R25
00279e 9508      	RET
                 
                 __SUBD21:
00279f 1bae      	SUB  R26,R30
0027a0 0bbf      	SBC  R27,R31
0027a1 0b86      	SBC  R24,R22
0027a2 0b97      	SBC  R25,R23
0027a3 9508      	RET
                 
                 __ANEGW1:
0027a4 95f1      	NEG  R31
0027a5 95e1      	NEG  R30
0027a6 40f0      	SBCI R31,0
0027a7 9508      	RET
                 
                 __ANEGD1:
0027a8 95f0      	COM  R31
0027a9 9560      	COM  R22
0027aa 9570      	COM  R23
0027ab 95e1      	NEG  R30
0027ac 4fff      	SBCI R31,-1
0027ad 4f6f      	SBCI R22,-1
0027ae 4f7f      	SBCI R23,-1
0027af 9508      	RET
                 
                 __LSLB12:
0027b0 23ee      	TST  R30
0027b1 2e0e      	MOV  R0,R30
0027b2 2fea      	MOV  R30,R26
0027b3 f019      	BREQ __LSLB12R
                 __LSLB12L:
0027b4 0fee      	LSL  R30
0027b5 940a      	DEC  R0
0027b6 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0027b7 9508      	RET
                 
                 __LSRB12:
0027b8 23ee      	TST  R30
0027b9 2e0e      	MOV  R0,R30
0027ba 2fea      	MOV  R30,R26
0027bb f019      	BREQ __LSRB12R
                 __LSRB12L:
0027bc 95e6      	LSR  R30
0027bd 940a      	DEC  R0
0027be f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0027bf 9508      	RET
                 
                 __LSLW4:
0027c0 0fee      	LSL  R30
0027c1 1fff      	ROL  R31
                 __LSLW3:
0027c2 0fee      	LSL  R30
0027c3 1fff      	ROL  R31
                 __LSLW2:
0027c4 0fee      	LSL  R30
0027c5 1fff      	ROL  R31
0027c6 0fee      	LSL  R30
0027c7 1fff      	ROL  R31
0027c8 9508      	RET
                 
                 __ASRW2:
0027c9 95f5      	ASR  R31
0027ca 95e7      	ROR  R30
0027cb 95f5      	ASR  R31
0027cc 95e7      	ROR  R30
0027cd 9508      	RET
                 
                 __CBD1:
0027ce 2ffe      	MOV  R31,R30
0027cf 0fff      	ADD  R31,R31
0027d0 0bff      	SBC  R31,R31
0027d1 2f6f      	MOV  R22,R31
0027d2 2f7f      	MOV  R23,R31
0027d3 9508      	RET
                 
                 __CWD1:
0027d4 2f6f      	MOV  R22,R31
0027d5 0f66      	ADD  R22,R22
0027d6 0b66      	SBC  R22,R22
0027d7 2f76      	MOV  R23,R22
0027d8 9508      	RET
                 
                 __LNEGB1:
0027d9 23ee      	TST  R30
0027da e0e1      	LDI  R30,1
0027db f009      	BREQ __LNEGB1F
0027dc 27ee      	CLR  R30
                 __LNEGB1F:
0027dd 9508      	RET
                 
                 __MULW12U:
0027de 9ffa      	MUL  R31,R26
0027df 2df0      	MOV  R31,R0
0027e0 9feb      	MUL  R30,R27
0027e1 0df0      	ADD  R31,R0
0027e2 9fea      	MUL  R30,R26
0027e3 2de0      	MOV  R30,R0
0027e4 0df1      	ADD  R31,R1
0027e5 9508      	RET
                 
                 __MULD12U:
0027e6 9f7a      	MUL  R23,R26
0027e7 2d70      	MOV  R23,R0
0027e8 9f6b      	MUL  R22,R27
0027e9 0d70      	ADD  R23,R0
0027ea 9ff8      	MUL  R31,R24
0027eb 0d70      	ADD  R23,R0
0027ec 9fe9      	MUL  R30,R25
0027ed 0d70      	ADD  R23,R0
0027ee 9f6a      	MUL  R22,R26
0027ef 2d60      	MOV  R22,R0
0027f0 0d71      	ADD  R23,R1
0027f1 9ffb      	MUL  R31,R27
0027f2 0d60      	ADD  R22,R0
0027f3 1d71      	ADC  R23,R1
0027f4 9fe8      	MUL  R30,R24
0027f5 0d60      	ADD  R22,R0
0027f6 1d71      	ADC  R23,R1
0027f7 2788      	CLR  R24
0027f8 9ffa      	MUL  R31,R26
0027f9 2df0      	MOV  R31,R0
0027fa 0d61      	ADD  R22,R1
0027fb 1f78      	ADC  R23,R24
0027fc 9feb      	MUL  R30,R27
0027fd 0df0      	ADD  R31,R0
0027fe 1d61      	ADC  R22,R1
0027ff 1f78      	ADC  R23,R24
002800 9fea      	MUL  R30,R26
002801 2de0      	MOV  R30,R0
002802 0df1      	ADD  R31,R1
002803 1f68      	ADC  R22,R24
002804 1f78      	ADC  R23,R24
002805 9508      	RET
                 
                 __MULB1W2U:
002806 2f6e      	MOV  R22,R30
002807 9f6a      	MUL  R22,R26
002808 01f0      	MOVW R30,R0
002809 9f6b      	MUL  R22,R27
00280a 0df0      	ADD  R31,R0
00280b 9508      	RET
                 
                 __MULW12:
00280c d057      	RCALL __CHKSIGNW
00280d dfd0      	RCALL __MULW12U
00280e f40e      	BRTC __MULW121
00280f df94      	RCALL __ANEGW1
                 __MULW121:
002810 9508      	RET
                 
                 __DIVB21U:
002811 2400      	CLR  R0
002812 e098      	LDI  R25,8
                 __DIVB21U1:
002813 0faa      	LSL  R26
002814 1c00      	ROL  R0
002815 1a0e      	SUB  R0,R30
002816 f410      	BRCC __DIVB21U2
002817 0e0e      	ADD  R0,R30
002818 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
002819 60a1      	SBR  R26,1
                 __DIVB21U3:
00281a 959a      	DEC  R25
00281b f7b9      	BRNE __DIVB21U1
00281c 2fea      	MOV  R30,R26
00281d 2da0      	MOV  R26,R0
00281e 9508      	RET
                 
                 __DIVB21:
00281f d038      	RCALL __CHKSIGNB
002820 dff0      	RCALL __DIVB21U
002821 f40e      	BRTC __DIVB211
002822 95e1      	NEG  R30
                 __DIVB211:
002823 9508      	RET
                 
                 __DIVD21U:
002824 933f      	PUSH R19
002825 934f      	PUSH R20
002826 935f      	PUSH R21
002827 2400      	CLR  R0
002828 2411      	CLR  R1
002829 01a0      	MOVW R20,R0
00282a e230      	LDI  R19,32
                 __DIVD21U1:
00282b 0faa      	LSL  R26
00282c 1fbb      	ROL  R27
00282d 1f88      	ROL  R24
00282e 1f99      	ROL  R25
00282f 1c00      	ROL  R0
002830 1c11      	ROL  R1
002831 1f44      	ROL  R20
002832 1f55      	ROL  R21
002833 1a0e      	SUB  R0,R30
002834 0a1f      	SBC  R1,R31
002835 0b46      	SBC  R20,R22
002836 0b57      	SBC  R21,R23
002837 f428      	BRCC __DIVD21U2
002838 0e0e      	ADD  R0,R30
002839 1e1f      	ADC  R1,R31
00283a 1f46      	ADC  R20,R22
00283b 1f57      	ADC  R21,R23
00283c c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00283d 60a1      	SBR  R26,1
                 __DIVD21U3:
00283e 953a      	DEC  R19
00283f f759      	BRNE __DIVD21U1
002840 01fd      	MOVW R30,R26
002841 01bc      	MOVW R22,R24
002842 01d0      	MOVW R26,R0
002843 01ca      	MOVW R24,R20
002844 915f      	POP  R21
002845 914f      	POP  R20
002846 913f      	POP  R19
002847 9508      	RET
                 
                 __MODB21:
002848 94e8      	CLT
002849 ffa7      	SBRS R26,7
00284a c002      	RJMP __MODB211
00284b 95a1      	NEG  R26
00284c 9468      	SET
                 __MODB211:
00284d fde7      	SBRC R30,7
00284e 95e1      	NEG  R30
00284f dfc1      	RCALL __DIVB21U
002850 2fea      	MOV  R30,R26
002851 f40e      	BRTC __MODB212
002852 95e1      	NEG  R30
                 __MODB212:
002853 9508      	RET
                 
                 __MODD21U:
002854 dfcf      	RCALL __DIVD21U
002855 01fd      	MOVW R30,R26
002856 01bc      	MOVW R22,R24
002857 9508      	RET
                 
                 __CHKSIGNB:
002858 94e8      	CLT
002859 ffe7      	SBRS R30,7
00285a c002      	RJMP __CHKSB1
00285b 95e1      	NEG  R30
00285c 9468      	SET
                 __CHKSB1:
00285d ffa7      	SBRS R26,7
00285e c004      	RJMP __CHKSB2
00285f 95a1      	NEG  R26
002860 f800      	BLD  R0,0
002861 9403      	INC  R0
002862 fa00      	BST  R0,0
                 __CHKSB2:
002863 9508      	RET
                 
                 __CHKSIGNW:
002864 94e8      	CLT
002865 fff7      	SBRS R31,7
002866 c002      	RJMP __CHKSW1
002867 df3c      	RCALL __ANEGW1
002868 9468      	SET
                 __CHKSW1:
002869 ffb7      	SBRS R27,7
00286a c006      	RJMP __CHKSW2
00286b 95b1      	NEG  R27
00286c 95a1      	NEG  R26
00286d 40b0      	SBCI R27,0
00286e f800      	BLD  R0,0
00286f 9403      	INC  R0
002870 fa00      	BST  R0,0
                 __CHKSW2:
002871 9508      	RET
                 
                 __GETW1P:
002872 91ed      	LD   R30,X+
002873 91fc      	LD   R31,X
002874 9711      	SBIW R26,1
002875 9508      	RET
                 
                 __GETD1P:
002876 91ed      	LD   R30,X+
002877 91fd      	LD   R31,X+
002878 916d      	LD   R22,X+
002879 917c      	LD   R23,X
00287a 9713      	SBIW R26,3
00287b 9508      	RET
                 
                 __GETD1P_INC:
00287c 91ed      	LD   R30,X+
00287d 91fd      	LD   R31,X+
00287e 916d      	LD   R22,X+
00287f 917d      	LD   R23,X+
002880 9508      	RET
                 
                 __PUTDP1:
002881 93ed      	ST   X+,R30
002882 93fd      	ST   X+,R31
002883 936d      	ST   X+,R22
002884 937c      	ST   X,R23
002885 9508      	RET
                 
                 __PUTDP1_DEC:
002886 937e      	ST   -X,R23
002887 936e      	ST   -X,R22
002888 93fe      	ST   -X,R31
002889 93ee      	ST   -X,R30
00288a 9508      	RET
                 
                 __GETW1Z:
00288b 920f      	PUSH R0
00288c 9001      	LD   R0,Z+
00288d 81f0      	LD   R31,Z
00288e 2de0      	MOV  R30,R0
00288f 900f      	POP  R0
002890 9508      	RET
                 
                 __GETW2X:
002891 920f      	PUSH R0
002892 900d      	LD   R0,X+
002893 91bc      	LD   R27,X
002894 2da0      	MOV  R26,R0
002895 900f      	POP  R0
002896 9508      	RET
                 
                 __GETD1S0:
002897 81e8      	LD   R30,Y
002898 81f9      	LDD  R31,Y+1
002899 816a      	LDD  R22,Y+2
00289a 817b      	LDD  R23,Y+3
00289b 9508      	RET
                 
                 __GETD2S0:
00289c 81a8      	LD   R26,Y
00289d 81b9      	LDD  R27,Y+1
00289e 818a      	LDD  R24,Y+2
00289f 819b      	LDD  R25,Y+3
0028a0 9508      	RET
                 
                 __PUTD1S0:
0028a1 83e8      	ST   Y,R30
0028a2 83f9      	STD  Y+1,R31
0028a3 836a      	STD  Y+2,R22
0028a4 837b      	STD  Y+3,R23
0028a5 9508      	RET
                 
                 __PUTPARD1:
0028a6 937a      	ST   -Y,R23
0028a7 936a      	ST   -Y,R22
0028a8 93fa      	ST   -Y,R31
0028a9 93ea      	ST   -Y,R30
0028aa 9508      	RET
                 
                 __PUTPARD2:
0028ab 939a      	ST   -Y,R25
0028ac 938a      	ST   -Y,R24
0028ad 93ba      	ST   -Y,R27
0028ae 93aa      	ST   -Y,R26
0028af 9508      	RET
                 
                 __PUTPARL:
0028b0 27bb      	CLR  R27
                 __PUTPAR:
0028b1 0fea      	ADD  R30,R26
0028b2 1ffb      	ADC  R31,R27
                 __PUTPAR0:
0028b3 9002      	LD   R0,-Z
0028b4 920a      	ST   -Y,R0
0028b5 9711      	SBIW R26,1
0028b6 f7e1      	BRNE __PUTPAR0
0028b7 9508      	RET
                 
                 __SWAPD12:
0028b8 2e18      	MOV  R1,R24
0028b9 2f86      	MOV  R24,R22
0028ba 2d61      	MOV  R22,R1
0028bb 2e19      	MOV  R1,R25
0028bc 2f97      	MOV  R25,R23
0028bd 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0028be 2e1b      	MOV  R1,R27
0028bf 2fbf      	MOV  R27,R31
0028c0 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0028c1 2e1a      	MOV  R1,R26
0028c2 2fae      	MOV  R26,R30
0028c3 2de1      	MOV  R30,R1
0028c4 9508      	RET
                 
                 __EEPROMRDB:
0028c5 99e1      	SBIC EECR,EEWE
0028c6 cffe      	RJMP __EEPROMRDB
0028c7 93ff      	PUSH R31
0028c8 b7ff      	IN   R31,SREG
0028c9 94f8      	CLI
0028ca bbae      	OUT  EEARL,R26
0028cb bbbf      	OUT  EEARH,R27
0028cc 9ae0      	SBI  EECR,EERE
0028cd b3ed      	IN   R30,EEDR
0028ce bfff      	OUT  SREG,R31
0028cf 91ff      	POP  R31
0028d0 9508      	RET
                 
                 __EEPROMWRB:
0028d1 9be1      	SBIS EECR,EEWE
0028d2 c002      	RJMP __EEPROMWRB1
0028d3 95a8      	WDR
0028d4 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0028d5 b79f      	IN   R25,SREG
0028d6 94f8      	CLI
0028d7 bbae      	OUT  EEARL,R26
0028d8 bbbf      	OUT  EEARH,R27
0028d9 9ae0      	SBI  EECR,EERE
0028da b38d      	IN   R24,EEDR
0028db 17e8      	CP   R30,R24
0028dc f019      	BREQ __EEPROMWRB0
0028dd bbed      	OUT  EEDR,R30
0028de 9ae2      	SBI  EECR,EEMWE
0028df 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0028e0 bf9f      	OUT  SREG,R25
0028e1 9508      	RET
                 
                 __CPD10:
0028e2 9730      	SBIW R30,0
0028e3 4060      	SBCI R22,0
0028e4 4070      	SBCI R23,0
0028e5 9508      	RET
                 
                 __CPD02:
0028e6 2400      	CLR  R0
0028e7 160a      	CP   R0,R26
0028e8 060b      	CPC  R0,R27
0028e9 0608      	CPC  R0,R24
0028ea 0609      	CPC  R0,R25
0028eb 9508      	RET
                 
                 __CPD12:
0028ec 17ea      	CP   R30,R26
0028ed 07fb      	CPC  R31,R27
0028ee 0768      	CPC  R22,R24
0028ef 0779      	CPC  R23,R25
0028f0 9508      	RET
                 
                 __CPD21:
0028f1 17ae      	CP   R26,R30
0028f2 07bf      	CPC  R27,R31
0028f3 0786      	CPC  R24,R22
0028f4 0797      	CPC  R25,R23
0028f5 9508      	RET
                 
                 _frexp:
0028f6 91e9      	LD   R30,Y+
0028f7 91f9      	LD   R31,Y+
0028f8 9169      	LD   R22,Y+
0028f9 9179      	LD   R23,Y+
0028fa fb77      	BST  R23,7
0028fb 0f66      	LSL  R22
0028fc 1f77      	ROL  R23
0028fd 2788      	CLR  R24
0028fe 577e      	SUBI R23,0x7E
0028ff 0b88      	SBC  R24,R24
002900 937d      	ST   X+,R23
002901 938c      	ST   X,R24
002902 e77e      	LDI  R23,0x7E
002903 9576      	LSR  R23
002904 9567      	ROR  R22
002905 f00e      	BRTS __ANEGF1
002906 9508      	RET
                 
                 __ANEGF1:
002907 9730      	SBIW R30,0
002908 4060      	SBCI R22,0
002909 4070      	SBCI R23,0
00290a f009      	BREQ __ANEGF10
00290b 5870      	SUBI R23,0x80
                 __ANEGF10:
00290c 9508      	RET
                 
                 __ROUND_REPACK:
00290d 2355      	TST  R21
00290e f442      	BRPL __REPACK
00290f 3850      	CPI  R21,0x80
002910 f411      	BRNE __ROUND_REPACK0
002911 ffe0      	SBRS R30,0
002912 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
002913 9631      	ADIW R30,1
002914 1f69      	ADC  R22,R25
002915 1f79      	ADC  R23,R25
002916 f06b      	BRVS __REPACK1
                 
                 __REPACK:
002917 e850      	LDI  R21,0x80
002918 2757      	EOR  R21,R23
002919 f411      	BRNE __REPACK0
00291a 935f      	PUSH R21
00291b c0cf      	RJMP __ZERORES
                 __REPACK0:
00291c 3f5f      	CPI  R21,0xFF
00291d f031      	BREQ __REPACK1
00291e 0f66      	LSL  R22
00291f 0c00      	LSL  R0
002920 9557      	ROR  R21
002921 9567      	ROR  R22
002922 2f75      	MOV  R23,R21
002923 9508      	RET
                 __REPACK1:
002924 935f      	PUSH R21
002925 2000      	TST  R0
002926 f00a      	BRMI __REPACK2
002927 c0ce      	RJMP __MAXRES
                 __REPACK2:
002928 c0c7      	RJMP __MINRES
                 
                 __UNPACK:
002929 e850      	LDI  R21,0x80
00292a 2e19      	MOV  R1,R25
00292b 2215      	AND  R1,R21
00292c 0f88      	LSL  R24
00292d 1f99      	ROL  R25
00292e 2795      	EOR  R25,R21
00292f 0f55      	LSL  R21
002930 9587      	ROR  R24
                 
                 __UNPACK1:
002931 e850      	LDI  R21,0x80
002932 2e07      	MOV  R0,R23
002933 2205      	AND  R0,R21
002934 0f66      	LSL  R22
002935 1f77      	ROL  R23
002936 2775      	EOR  R23,R21
002937 0f55      	LSL  R21
002938 9567      	ROR  R22
002939 9508      	RET
                 
                 __CFD1U:
00293a 9468      	SET
00293b c001      	RJMP __CFD1U0
                 __CFD1:
00293c 94e8      	CLT
                 __CFD1U0:
00293d 935f      	PUSH R21
00293e dff2      	RCALL __UNPACK1
00293f 3870      	CPI  R23,0x80
002940 f018      	BRLO __CFD10
002941 3f7f      	CPI  R23,0xFF
002942 f408      	BRCC __CFD10
002943 c0a7      	RJMP __ZERORES
                 __CFD10:
002944 e156      	LDI  R21,22
002945 1b57      	SUB  R21,R23
002946 f4aa      	BRPL __CFD11
002947 9551      	NEG  R21
002948 3058      	CPI  R21,8
002949 f40e      	BRTC __CFD19
00294a 3059      	CPI  R21,9
                 __CFD19:
00294b f030      	BRLO __CFD17
00294c efef      	SER  R30
00294d efff      	SER  R31
00294e ef6f      	SER  R22
00294f e77f      	LDI  R23,0x7F
002950 f977      	BLD  R23,7
002951 c01a      	RJMP __CFD15
                 __CFD17:
002952 2777      	CLR  R23
002953 2355      	TST  R21
002954 f0b9      	BREQ __CFD15
                 __CFD18:
002955 0fee      	LSL  R30
002956 1fff      	ROL  R31
002957 1f66      	ROL  R22
002958 1f77      	ROL  R23
002959 955a      	DEC  R21
00295a f7d1      	BRNE __CFD18
00295b c010      	RJMP __CFD15
                 __CFD11:
00295c 2777      	CLR  R23
                 __CFD12:
00295d 3058      	CPI  R21,8
00295e f028      	BRLO __CFD13
00295f 2fef      	MOV  R30,R31
002960 2ff6      	MOV  R31,R22
002961 2f67      	MOV  R22,R23
002962 5058      	SUBI R21,8
002963 cff9      	RJMP __CFD12
                 __CFD13:
002964 2355      	TST  R21
002965 f031      	BREQ __CFD15
                 __CFD14:
002966 9576      	LSR  R23
002967 9567      	ROR  R22
002968 95f7      	ROR  R31
002969 95e7      	ROR  R30
00296a 955a      	DEC  R21
00296b f7d1      	BRNE __CFD14
                 __CFD15:
00296c 2000      	TST  R0
00296d f40a      	BRPL __CFD16
00296e de39      	RCALL __ANEGD1
                 __CFD16:
00296f 915f      	POP  R21
002970 9508      	RET
                 
                 __CDF1U:
002971 9468      	SET
002972 c001      	RJMP __CDF1U0
                 __CDF1:
002973 94e8      	CLT
                 __CDF1U0:
002974 9730      	SBIW R30,0
002975 4060      	SBCI R22,0
002976 4070      	SBCI R23,0
002977 f0b1      	BREQ __CDF10
002978 2400      	CLR  R0
002979 f026      	BRTS __CDF11
00297a 2377      	TST  R23
00297b f412      	BRPL __CDF11
00297c 9400      	COM  R0
00297d de2a      	RCALL __ANEGD1
                 __CDF11:
00297e 2e17      	MOV  R1,R23
00297f e17e      	LDI  R23,30
002980 2011      	TST  R1
                 __CDF12:
002981 f032      	BRMI __CDF13
002982 957a      	DEC  R23
002983 0fee      	LSL  R30
002984 1fff      	ROL  R31
002985 1f66      	ROL  R22
002986 1c11      	ROL  R1
002987 cff9      	RJMP __CDF12
                 __CDF13:
002988 2fef      	MOV  R30,R31
002989 2ff6      	MOV  R31,R22
00298a 2d61      	MOV  R22,R1
00298b 935f      	PUSH R21
00298c df8a      	RCALL __REPACK
00298d 915f      	POP  R21
                 __CDF10:
00298e 9508      	RET
                 
                 __SWAPACC:
00298f 934f      	PUSH R20
002990 01af      	MOVW R20,R30
002991 01fd      	MOVW R30,R26
002992 01da      	MOVW R26,R20
002993 01ab      	MOVW R20,R22
002994 01bc      	MOVW R22,R24
002995 01ca      	MOVW R24,R20
002996 2d40      	MOV  R20,R0
002997 2c01      	MOV  R0,R1
002998 2e14      	MOV  R1,R20
002999 914f      	POP  R20
00299a 9508      	RET
                 
                 __UADD12:
00299b 0fea      	ADD  R30,R26
00299c 1ffb      	ADC  R31,R27
00299d 1f68      	ADC  R22,R24
00299e 9508      	RET
                 
                 __NEGMAN1:
00299f 95e0      	COM  R30
0029a0 95f0      	COM  R31
0029a1 9560      	COM  R22
0029a2 5fef      	SUBI R30,-1
0029a3 4fff      	SBCI R31,-1
0029a4 4f6f      	SBCI R22,-1
0029a5 9508      	RET
                 
                 __SUBF12:
0029a6 935f      	PUSH R21
0029a7 df81      	RCALL __UNPACK
0029a8 3890      	CPI  R25,0x80
0029a9 f171      	BREQ __ADDF129
0029aa e850      	LDI  R21,0x80
0029ab 2615      	EOR  R1,R21
                 
0029ac c004      	RJMP __ADDF120
                 
                 __ADDF12:
0029ad 935f      	PUSH R21
0029ae df7a      	RCALL __UNPACK
0029af 3890      	CPI  R25,0x80
0029b0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0029b1 3870      	CPI  R23,0x80
0029b2 f121      	BREQ __ADDF128
                 __ADDF121:
0029b3 2f57      	MOV  R21,R23
0029b4 1b59      	SUB  R21,R25
0029b5 f12b      	BRVS __ADDF1211
0029b6 f412      	BRPL __ADDF122
0029b7 dfd7      	RCALL __SWAPACC
0029b8 cffa      	RJMP __ADDF121
                 __ADDF122:
0029b9 3158      	CPI  R21,24
0029ba f018      	BRLO __ADDF123
0029bb 27aa      	CLR  R26
0029bc 27bb      	CLR  R27
0029bd 2788      	CLR  R24
                 __ADDF123:
0029be 3058      	CPI  R21,8
0029bf f028      	BRLO __ADDF124
0029c0 2fab      	MOV  R26,R27
0029c1 2fb8      	MOV  R27,R24
0029c2 2788      	CLR  R24
0029c3 5058      	SUBI R21,8
0029c4 cff9      	RJMP __ADDF123
                 __ADDF124:
0029c5 2355      	TST  R21
0029c6 f029      	BREQ __ADDF126
                 __ADDF125:
0029c7 9586      	LSR  R24
0029c8 95b7      	ROR  R27
0029c9 95a7      	ROR  R26
0029ca 955a      	DEC  R21
0029cb f7d9      	BRNE __ADDF125
                 __ADDF126:
0029cc 2d50      	MOV  R21,R0
0029cd 2551      	EOR  R21,R1
0029ce f072      	BRMI __ADDF127
0029cf dfcb      	RCALL __UADD12
0029d0 f438      	BRCC __ADDF129
0029d1 9567      	ROR  R22
0029d2 95f7      	ROR  R31
0029d3 95e7      	ROR  R30
0029d4 9573      	INC  R23
0029d5 f413      	BRVC __ADDF129
0029d6 c01f      	RJMP __MAXRES
                 __ADDF128:
0029d7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0029d8 df3e      	RCALL __REPACK
0029d9 915f      	POP  R21
0029da 9508      	RET
                 __ADDF1211:
0029db f7d8      	BRCC __ADDF128
0029dc cffb      	RJMP __ADDF129
                 __ADDF127:
0029dd 1bea      	SUB  R30,R26
0029de 0bfb      	SBC  R31,R27
0029df 0b68      	SBC  R22,R24
0029e0 f051      	BREQ __ZERORES
0029e1 f410      	BRCC __ADDF1210
0029e2 9400      	COM  R0
0029e3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0029e4 2366      	TST  R22
0029e5 f392      	BRMI __ADDF129
0029e6 0fee      	LSL  R30
0029e7 1fff      	ROL  R31
0029e8 1f66      	ROL  R22
0029e9 957a      	DEC  R23
0029ea f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0029eb 27ee      	CLR  R30
0029ec 27ff      	CLR  R31
0029ed 01bf      	MOVW R22,R30
0029ee 915f      	POP  R21
0029ef 9508      	RET
                 
                 __MINRES:
0029f0 efef      	SER  R30
0029f1 efff      	SER  R31
0029f2 e76f      	LDI  R22,0x7F
0029f3 ef7f      	SER  R23
0029f4 915f      	POP  R21
0029f5 9508      	RET
                 
                 __MAXRES:
0029f6 efef      	SER  R30
0029f7 efff      	SER  R31
0029f8 e76f      	LDI  R22,0x7F
0029f9 e77f      	LDI  R23,0x7F
0029fa 915f      	POP  R21
0029fb 9508      	RET
                 
                 __MULF12:
0029fc 935f      	PUSH R21
0029fd df2b      	RCALL __UNPACK
0029fe 3870      	CPI  R23,0x80
0029ff f359      	BREQ __ZERORES
002a00 3890      	CPI  R25,0x80
002a01 f349      	BREQ __ZERORES
002a02 2401      	EOR  R0,R1
002a03 9408      	SEC
002a04 1f79      	ADC  R23,R25
002a05 f423      	BRVC __MULF124
002a06 f324      	BRLT __ZERORES
                 __MULF125:
002a07 2000      	TST  R0
002a08 f33a      	BRMI __MINRES
002a09 cfec      	RJMP __MAXRES
                 __MULF124:
002a0a 920f      	PUSH R0
002a0b 931f      	PUSH R17
002a0c 932f      	PUSH R18
002a0d 933f      	PUSH R19
002a0e 934f      	PUSH R20
002a0f 2711      	CLR  R17
002a10 2722      	CLR  R18
002a11 2799      	CLR  R25
002a12 9f68      	MUL  R22,R24
002a13 01a0      	MOVW R20,R0
002a14 9f8f      	MUL  R24,R31
002a15 2d30      	MOV  R19,R0
002a16 0d41      	ADD  R20,R1
002a17 1f59      	ADC  R21,R25
002a18 9f6b      	MUL  R22,R27
002a19 0d30      	ADD  R19,R0
002a1a 1d41      	ADC  R20,R1
002a1b 1f59      	ADC  R21,R25
002a1c 9f8e      	MUL  R24,R30
002a1d d027      	RCALL __MULF126
002a1e 9fbf      	MUL  R27,R31
002a1f d025      	RCALL __MULF126
002a20 9f6a      	MUL  R22,R26
002a21 d023      	RCALL __MULF126
002a22 9fbe      	MUL  R27,R30
002a23 d01d      	RCALL __MULF127
002a24 9faf      	MUL  R26,R31
002a25 d01b      	RCALL __MULF127
002a26 9fae      	MUL  R26,R30
002a27 0d11      	ADD  R17,R1
002a28 1f29      	ADC  R18,R25
002a29 1f39      	ADC  R19,R25
002a2a 1f49      	ADC  R20,R25
002a2b 1f59      	ADC  R21,R25
002a2c 2fe3      	MOV  R30,R19
002a2d 2ff4      	MOV  R31,R20
002a2e 2f65      	MOV  R22,R21
002a2f 2f52      	MOV  R21,R18
002a30 914f      	POP  R20
002a31 913f      	POP  R19
002a32 912f      	POP  R18
002a33 911f      	POP  R17
002a34 900f      	POP  R0
002a35 2366      	TST  R22
002a36 f02a      	BRMI __MULF122
002a37 0f55      	LSL  R21
002a38 1fee      	ROL  R30
002a39 1fff      	ROL  R31
002a3a 1f66      	ROL  R22
002a3b c002      	RJMP __MULF123
                 __MULF122:
002a3c 9573      	INC  R23
002a3d f24b      	BRVS __MULF125
                 __MULF123:
002a3e dece      	RCALL __ROUND_REPACK
002a3f 915f      	POP  R21
002a40 9508      	RET
                 
                 __MULF127:
002a41 0d10      	ADD  R17,R0
002a42 1d21      	ADC  R18,R1
002a43 1f39      	ADC  R19,R25
002a44 c002      	RJMP __MULF128
                 __MULF126:
002a45 0d20      	ADD  R18,R0
002a46 1d31      	ADC  R19,R1
                 __MULF128:
002a47 1f49      	ADC  R20,R25
002a48 1f59      	ADC  R21,R25
002a49 9508      	RET
                 
                 __DIVF21:
002a4a 935f      	PUSH R21
002a4b dedd      	RCALL __UNPACK
002a4c 3870      	CPI  R23,0x80
002a4d f421      	BRNE __DIVF210
002a4e 2011      	TST  R1
                 __DIVF211:
002a4f f40a      	BRPL __DIVF219
002a50 cf9f      	RJMP __MINRES
                 __DIVF219:
002a51 cfa4      	RJMP __MAXRES
                 __DIVF210:
002a52 3890      	CPI  R25,0x80
002a53 f409      	BRNE __DIVF218
                 __DIVF217:
002a54 cf96      	RJMP __ZERORES
                 __DIVF218:
002a55 2401      	EOR  R0,R1
002a56 9408      	SEC
002a57 0b97      	SBC  R25,R23
002a58 f41b      	BRVC __DIVF216
002a59 f3d4      	BRLT __DIVF217
002a5a 2000      	TST  R0
002a5b cff3      	RJMP __DIVF211
                 __DIVF216:
002a5c 2f79      	MOV  R23,R25
002a5d 931f      	PUSH R17
002a5e 932f      	PUSH R18
002a5f 933f      	PUSH R19
002a60 934f      	PUSH R20
002a61 2411      	CLR  R1
002a62 2711      	CLR  R17
002a63 2722      	CLR  R18
002a64 2733      	CLR  R19
002a65 01a9      	MOVW R20,R18
002a66 e290      	LDI  R25,32
                 __DIVF212:
002a67 17ae      	CP   R26,R30
002a68 07bf      	CPC  R27,R31
002a69 0786      	CPC  R24,R22
002a6a 0741      	CPC  R20,R17
002a6b f030      	BRLO __DIVF213
002a6c 1bae      	SUB  R26,R30
002a6d 0bbf      	SBC  R27,R31
002a6e 0b86      	SBC  R24,R22
002a6f 0b41      	SBC  R20,R17
002a70 9408      	SEC
002a71 c001      	RJMP __DIVF214
                 __DIVF213:
002a72 9488      	CLC
                 __DIVF214:
002a73 1f55      	ROL  R21
002a74 1f22      	ROL  R18
002a75 1f33      	ROL  R19
002a76 1c11      	ROL  R1
002a77 1faa      	ROL  R26
002a78 1fbb      	ROL  R27
002a79 1f88      	ROL  R24
002a7a 1f44      	ROL  R20
002a7b 959a      	DEC  R25
002a7c f751      	BRNE __DIVF212
002a7d 01f9      	MOVW R30,R18
002a7e 2d61      	MOV  R22,R1
002a7f 914f      	POP  R20
002a80 913f      	POP  R19
002a81 912f      	POP  R18
002a82 911f      	POP  R17
002a83 2366      	TST  R22
002a84 f032      	BRMI __DIVF215
002a85 0f55      	LSL  R21
002a86 1fee      	ROL  R30
002a87 1fff      	ROL  R31
002a88 1f66      	ROL  R22
002a89 957a      	DEC  R23
002a8a f24b      	BRVS __DIVF217
                 __DIVF215:
002a8b de81      	RCALL __ROUND_REPACK
002a8c 915f      	POP  R21
002a8d 9508      	RET
                 
                 __CMPF12:
002a8e 2399      	TST  R25
002a8f f09a      	BRMI __CMPF120
002a90 2377      	TST  R23
002a91 f042      	BRMI __CMPF121
002a92 1797      	CP   R25,R23
002a93 f048      	BRLO __CMPF122
002a94 f429      	BRNE __CMPF121
002a95 17ae      	CP   R26,R30
002a96 07bf      	CPC  R27,R31
002a97 0786      	CPC  R24,R22
002a98 f020      	BRLO __CMPF122
002a99 f031      	BREQ __CMPF123
                 __CMPF121:
002a9a 9498      	CLZ
002a9b 9488      	CLC
002a9c 9508      	RET
                 __CMPF122:
002a9d 9498      	CLZ
002a9e 9408      	SEC
002a9f 9508      	RET
                 __CMPF123:
002aa0 9418      	SEZ
002aa1 9488      	CLC
002aa2 9508      	RET
                 __CMPF120:
002aa3 2377      	TST  R23
002aa4 f7c2      	BRPL __CMPF122
002aa5 1797      	CP   R25,R23
002aa6 f398      	BRLO __CMPF121
002aa7 f7a9      	BRNE __CMPF122
002aa8 17ea      	CP   R30,R26
002aa9 07fb      	CPC  R31,R27
002aaa 0768      	CPC  R22,R24
002aab f388      	BRLO __CMPF122
002aac f399      	BREQ __CMPF123
002aad cfec      	RJMP __CMPF121
                 
                 _delay_ms:
002aae 9610      	adiw r26,0
002aaf f039      	breq __delay_ms1
                 __delay_ms0:
002ab0 95a8      	wdr
                +
002ab1 ed80     +LDI R24 , LOW ( 0x7D0 )
002ab2 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
002ab3 9701     +SBIW R24 , 1
002ab4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
002ab5 9711      	sbiw r26,1
002ab6 f7c9      	brne __delay_ms0
                 __delay_ms1:
002ab7 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega64A register use summary:
r0 : 144 r1 :  63 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :  21 r7 :   3 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  17 
r16: 276 r17: 243 r18: 198 r19: 169 r20: 143 r21: 173 r22: 252 r23: 221 
r24: 162 r25: 129 r26:1112 r27: 341 r28:  74 r29:   1 r30:2056 r31: 670 
x  : 133 y  :1221 z  : 118 
Registers used: 24 out of 35 (68.6%)

ATmega64A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  59 add   :  75 
adiw  : 102 and   :  19 andi  :  37 asr   :   2 bclr  :   0 bld   :  18 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   2 break :   0 breq  : 154 
brge  :  24 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  79 
brlt  :  18 brmi  :  14 brne  : 261 brpl  :  14 brsh  :  58 brtc  :   5 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :  13 call  : 882 
cbi   :  23 cbr   :   1 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   : 118 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  16 
cp    :  86 cpc   : 187 cpi   : 339 cpse  :   0 dec   :  14 des   :   0 
eor   :   8 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  10 ijmp  :   0 
in    :  23 inc   :   6 jmp   :  69 ld    : 135 ldd   : 713 ldi   : 869 
lds   : 291 lpm   :  40 lsl   :  30 lsr   :  28 mov   : 306 movw  : 230 
mul   :  27 muls  :   0 mulsu :   0 neg   :  13 nop   :   3 or    :  15 
ori   :  19 out   :  46 pop   :  93 push  :  93 rcall : 161 ret   : 278 
reti  :   2 rjmp  : 460 rol   :  43 ror   :  18 sbc   :  33 sbci  :  65 
sbi   :  28 sbic  :  20 sbis  :  12 sbiw  :  59 sbr   :   4 sbrc  :   7 
sbrs  :  24 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   9 
ses   :   0 set   :   7 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 413 std   : 184 sts   : 234 sub   :  45 subi  : 145 swap  :   2 
tst   :  35 wdr   :   2 
Instructions used: 85 out of 116 (73.3%)

ATmega64A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x005570  18968   2904  21872   65536  33.4%
[.dseg] 0x000100 0x000906      0   1030   1030    4096  25.1%
[.eseg] 0x000000 0x00000c      0     12     12    2048   0.6%

Assembly complete, 0 errors, 11 warnings
