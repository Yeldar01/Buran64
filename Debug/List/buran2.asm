
;CodeVisionAVR C Compiler V3.40 Advanced
;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
;http://www.hpinfotech.ro

;Build configuration    : Debug
;Chip type              : ATmega64A
;Program type           : Application
;Clock frequency        : 8,000000 MHz
;Memory model           : Small
;Optimize for           : Size
;(s)printf features     : float, width, precision
;(s)scanf features      : No
;External RAM size      : 0
;Data Stack size        : 1024 byte(s)
;Heap size              : 0 byte(s)
;Promote 'char' to 'int': Yes
;'char' is unsigned     : Yes
;8 bit enums            : Yes
;Global 'const' stored in FLASH: Yes
;Enhanced function parameter passing: Mode 2
;Enhanced core instructions: On
;Automatic register allocation for global variables: On
;Smart register allocation: On

	#define _MODEL_SMALL_

	#pragma AVRPART ADMIN PART_NAME ATmega64A
	#pragma AVRPART MEMORY PROG_FLASH 65536
	#pragma AVRPART MEMORY EEPROM 2048
	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU XMCRA=0x6D
	.EQU XMCRB=0x6C

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x10FF
	.EQU __DSTACK_SIZE=0x0400
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD2M
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	PUSH R26
	PUSH R27
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	POP  R27
	POP  R26
	ICALL
	.ENDM

	.MACRO __CALL2EX
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __EEPROMRDD
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z
	MOVW R30,R0
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETW1Z
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETD1Z
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETW2X
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETD2X
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _activePage=R6
	.DEF _activePage_msb=R7

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer1_compa_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer0_ovf_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_font5x7:
	.DB  0x5,0x7,0x20,0xA3,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x4,0x4,0x4,0x4,0x4
	.DB  0x0,0x4,0xA,0xA,0xA,0x0,0x0,0x0
	.DB  0x0,0xA,0xA,0x1F,0xA,0x1F,0xA,0xA
	.DB  0x4,0x1E,0x5,0xE,0x14,0xF,0x4,0x3
	.DB  0x13,0x8,0x4,0x2,0x19,0x18,0x6,0x9
	.DB  0x5,0x2,0x15,0x9,0x16,0x6,0x4,0x2
	.DB  0x0,0x0,0x0,0x0,0x8,0x4,0x2,0x2
	.DB  0x2,0x4,0x8,0x2,0x4,0x8,0x8,0x8
	.DB  0x4,0x2,0x0,0xA,0x4,0x1F,0x4,0xA
	.DB  0x0,0x0,0x4,0x4,0x1F,0x4,0x4,0x0
	.DB  0x0,0x0,0x0,0x0,0x6,0x4,0x2,0x0
	.DB  0x0,0x0,0x1F,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x6,0x6,0x0,0x0,0x10,0x8
	.DB  0x4,0x2,0x1,0x0,0xE,0x11,0x19,0x15
	.DB  0x13,0x11,0xE,0x4,0x6,0x4,0x4,0x4
	.DB  0x4,0xE,0xE,0x11,0x10,0x8,0x4,0x2
	.DB  0x1F,0x1F,0x8,0x4,0x8,0x10,0x11,0xE
	.DB  0x8,0xC,0xA,0x9,0x1F,0x8,0x8,0x1F
	.DB  0x1,0xF,0x10,0x10,0x11,0xE,0xC,0x2
	.DB  0x1,0xF,0x11,0x11,0xE,0x1F,0x10,0x8
	.DB  0x4,0x2,0x2,0x2,0xE,0x11,0x11,0xE
	.DB  0x11,0x11,0xE,0xE,0x11,0x11,0x1E,0x10
	.DB  0x8,0x6,0x0,0x6,0x6,0x0,0x6,0x6
	.DB  0x0,0x0,0x6,0x6,0x0,0x6,0x4,0x2
	.DB  0x10,0x8,0x4,0x2,0x4,0x8,0x10,0x0
	.DB  0x0,0x1F,0x0,0x1F,0x0,0x0,0x1,0x2
	.DB  0x4,0x8,0x4,0x2,0x1,0xE,0x11,0x10
	.DB  0x8,0x4,0x0,0x4,0xE,0x11,0x10,0x16
	.DB  0x15,0x15,0xE,0xE,0x11,0x11,0x11,0x1F
	.DB  0x11,0x11,0xF,0x11,0x11,0xF,0x11,0x11
	.DB  0xF,0xE,0x11,0x1,0x1,0x1,0x11,0xE
	.DB  0x7,0x9,0x11,0x11,0x11,0x9,0x7,0x1F
	.DB  0x1,0x1,0xF,0x1,0x1,0x1F,0x1F,0x1
	.DB  0x1,0x7,0x1,0x1,0x1,0xE,0x11,0x1
	.DB  0x1,0x19,0x11,0xE,0x11,0x11,0x11,0x1F
	.DB  0x11,0x11,0x11,0xE,0x4,0x4,0x4,0x4
	.DB  0x4,0xE,0x1C,0x8,0x8,0x8,0x8,0x9
	.DB  0x6,0x11,0x9,0x5,0x3,0x5,0x9,0x11
	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1F,0x11
	.DB  0x1B,0x15,0x11,0x11,0x11,0x11,0x11,0x11
	.DB  0x13,0x15,0x19,0x11,0x11,0xE,0x11,0x11
	.DB  0x11,0x11,0x11,0xE,0xF,0x11,0x11,0xF
	.DB  0x1,0x1,0x1,0xE,0x11,0x11,0x11,0x15
	.DB  0x9,0x16,0xF,0x11,0x11,0xF,0x5,0x9
	.DB  0x11,0x1E,0x1,0x1,0xE,0x10,0x10,0xF
	.DB  0x1F,0x4,0x4,0x4,0x4,0x4,0x4,0x11
	.DB  0x11,0x11,0x11,0x11,0x11,0xE,0x11,0x11
	.DB  0x11,0x11,0x11,0xA,0x4,0x11,0x11,0x11
	.DB  0x15,0x15,0x1B,0x11,0x11,0x11,0xA,0x4
	.DB  0xA,0x11,0x11,0x11,0x11,0xA,0x4,0x4
	.DB  0x4,0x4,0x1F,0x10,0x8,0x4,0x2,0x1
	.DB  0x1F,0x1C,0x4,0x4,0x4,0x4,0x4,0x1C
	.DB  0x0,0x1,0x2,0x4,0x8,0x10,0x0,0x7
	.DB  0x4,0x4,0x4,0x4,0x4,0x7,0x4,0xA
	.DB  0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x1F,0x2,0x4,0x8,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0xE,0x10,0x1E
	.DB  0x11,0x1E,0x1,0x1,0xD,0x13,0x11,0x11
	.DB  0xF,0x0,0x0,0xE,0x1,0x1,0x11,0xE
	.DB  0x10,0x10,0x16,0x19,0x11,0x11,0x1E,0x0
	.DB  0x0,0xE,0x11,0x1F,0x1,0xE,0xC,0x12
	.DB  0x2,0x7,0x2,0x2,0x2,0x0,0x0,0x1E
	.DB  0x11,0x1E,0x10,0xC,0x1,0x1,0xD,0x13
	.DB  0x11,0x11,0x11,0x4,0x0,0x6,0x4,0x4
	.DB  0x4,0xE,0x8,0x0,0xC,0x8,0x8,0x9
	.DB  0x6,0x2,0x2,0x12,0xA,0x6,0xA,0x12
	.DB  0x6,0x4,0x4,0x4,0x4,0x4,0xE,0x0
	.DB  0x0,0xB,0x15,0x15,0x11,0x11,0x0,0x0
	.DB  0xD,0x13,0x11,0x11,0x11,0x0,0x0,0xE
	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0xF,0x11
	.DB  0xF,0x1,0x1,0x0,0x0,0x16,0x19,0x1E
	.DB  0x10,0x10,0x0,0x0,0xD,0x13,0x1,0x1
	.DB  0x1,0x0,0x0,0xE,0x1,0xE,0x10,0xF
	.DB  0x2,0x2,0x7,0x2,0x2,0x12,0xC,0x0
	.DB  0x0,0x11,0x11,0x11,0x19,0x16,0x0,0x0
	.DB  0x11,0x11,0x11,0xA,0x4,0x0,0x0,0x11
	.DB  0x11,0x15,0x15,0xA,0x0,0x0,0x11,0xA
	.DB  0x4,0xA,0x11,0x0,0x0,0x11,0x11,0x1E
	.DB  0x10,0xE,0x0,0x0,0x1F,0x8,0x4,0x2
	.DB  0x1F,0x8,0x4,0x4,0x2,0x4,0x4,0x8
	.DB  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x2
	.DB  0x4,0x4,0x8,0x4,0x4,0x2,0x2,0x15
	.DB  0x8,0x0,0x0,0x0,0x0,0x1F,0x11,0x11
	.DB  0x11,0x11,0x11,0x1F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0xE,0x11,0x11,0x11,0x1F
	.DB  0x11,0x11,0x1F,0x11,0x1,0xF,0x11,0x11
	.DB  0xF,0xF,0x11,0x11,0xF,0x11,0x11,0xF
	.DB  0x1F,0x11,0x1,0x1,0x1,0x1,0x1,0x1E
	.DB  0x14,0x14,0x14,0x12,0x11,0x1F,0x1F,0x1
	.DB  0x1,0xF,0x1,0x1,0x1F,0x15,0x15,0x15
	.DB  0xE,0x15,0x15,0x15,0xF,0x10,0x10,0xE
	.DB  0x10,0x10,0xF,0x11,0x11,0x19,0x15,0x13
	.DB  0x11,0x11,0xA,0x4,0x11,0x19,0x15,0x13
	.DB  0x11,0x11,0x9,0x5,0x3,0x5,0x9,0x11
	.DB  0x1E,0x14,0x14,0x14,0x14,0x15,0x12,0x11
	.DB  0x1B,0x15,0x15,0x11,0x11,0x11,0x11,0x11
	.DB  0x11,0x1F,0x11,0x11,0x11,0xE,0x11,0x11
	.DB  0x11,0x11,0x11,0xE,0x1F,0x11,0x11,0x11
	.DB  0x11,0x11,0x11,0xF,0x11,0x11,0xF,0x1
	.DB  0x1,0x1,0xE,0x11,0x1,0x1,0x1,0x11
	.DB  0xE,0x1F,0x4,0x4,0x4,0x4,0x4,0x4
	.DB  0x11,0x11,0x11,0xA,0x4,0x2,0x1,0x4
	.DB  0xE,0x15,0x15,0x15,0xE,0x4,0x11,0x11
	.DB  0xA,0x4,0xA,0x11,0x11,0x11,0x11,0x11
	.DB  0x11,0x11,0x11,0x1F,0x11,0x11,0x11,0x1E
	.DB  0x10,0x10,0x10,0x15,0x15,0x15,0x15,0x15
	.DB  0x15,0x1F,0x15,0x15,0x15,0x15,0x15,0x15
	.DB  0x1F,0x3,0x2,0x2,0xE,0x12,0x12,0xE
	.DB  0x11,0x11,0x11,0x13,0x15,0x15,0x13,0x2
	.DB  0x2,0x2,0xE,0x12,0x12,0xE,0xE,0x11
	.DB  0x10,0x1C,0x10,0x11,0xE,0x9,0x15,0x15
	.DB  0x17,0x15,0x15,0x9,0x1E,0x11,0x11,0x1E
	.DB  0x14,0x12,0x11,0x0,0x0,0xE,0x10,0x1E
	.DB  0x11,0x1E,0x18,0x6,0x1,0xF,0x11,0x11
	.DB  0xE,0x0,0x0,0x7,0x9,0x7,0x9,0x7
	.DB  0x0,0x0,0x1F,0x11,0x1,0x1,0x1,0x0
	.DB  0x0,0x1E,0x14,0x12,0x11,0x1F,0x0,0x0
	.DB  0xE,0x11,0x1F,0x1,0xE,0x0,0x0,0x15
	.DB  0x15,0xE,0x15,0x15,0x0,0x0,0xF,0x10
	.DB  0xC,0x10,0xF,0x0,0x0,0x11,0x19,0x15
	.DB  0x13,0x11,0xA,0x4,0x11,0x11,0x19,0x15
	.DB  0x13,0x0,0x0,0x9,0x5,0x3,0x5,0x9
	.DB  0x0,0x0,0x1E,0x14,0x14,0x15,0x12,0x0
	.DB  0x0,0x11,0x1B,0x15,0x11,0x11,0x0,0x0
	.DB  0x11,0x11,0x1F,0x11,0x11,0x0,0x0,0xE
	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0x1F,0x11
	.DB  0x11,0x11,0x11,0x0,0x0,0xF,0x11,0xF
	.DB  0x1,0x1,0x0,0x0,0xE,0x1,0x1,0x11
	.DB  0xE,0x0,0x0,0x1F,0x4,0x4,0x4,0x4
	.DB  0x0,0x0,0x11,0x11,0x1E,0x10,0xE,0x0
	.DB  0x0,0x4,0xE,0x15,0x15,0xE,0x0,0x0
	.DB  0x11,0xA,0x4,0xA,0x11,0x0,0x0,0x11
	.DB  0x11,0x11,0x11,0x1F,0x0,0x0,0x11,0x11
	.DB  0x1E,0x10,0x10,0x0,0x0,0x15,0x15,0x15
	.DB  0x15,0x1F,0x0,0x0,0x15,0x15,0x15,0x15
	.DB  0x1F,0x0,0x0,0x3,0x2,0xE,0x12,0xE
	.DB  0x0,0x0,0x11,0x11,0x17,0x19,0x17,0x0
	.DB  0x0,0x1,0x1,0x7,0x9,0x7,0x0,0x0
	.DB  0xE,0x11,0x1C,0x11,0xE,0x0,0x0,0x9
	.DB  0x15,0x17,0x15,0x9,0x0,0x0,0x1E,0x11
	.DB  0x1E,0x14,0x12,0x4,0x15,0xA,0x11,0xA
	.DB  0x15,0x4,0x0,0x9,0x16,0x0,0x9,0x16
	.DB  0x0
_flame:
	.DB  0xF,0x0,0xC,0x0,0x38,0x0,0xFE,0x1
	.DB  0xFF,0x3,0xFF,0x7,0xE1,0xF,0xC0,0x7F
	.DB  0xE0,0x3F,0xF1,0x1F,0xFF,0xF,0xFF,0x7
	.DB  0xFE,0x3,0x78,0x0
_burner:
	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
	.DB  0xE,0x0,0x1C,0x6,0x0,0x1C,0x73,0x1E
	.DB  0x1C,0x73,0x9E,0x1F,0x73,0x9F,0x1F,0xE3
	.DB  0x81,0x1D,0x3,0x8F,0x1,0xF3,0x9D,0x1
	.DB  0xF3,0x9D,0x1,0xF6,0xDC,0x0,0x6,0xC0
	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
	.DB  0xE,0x0,0x1C,0xC6,0x1,0x1C,0xE3,0x1
	.DB  0x1C,0xE3,0x9C,0x1F,0xC3,0xBE,0x1F,0x83
	.DB  0xBF,0x1D,0xFB,0x83,0x1,0xFB,0x8E,0x1
	.DB  0x73,0x8E,0x1,0x6,0xCF,0x0,0x6,0xC7
	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
	.DB  0x15,0x0,0x14,0x0,0x0,0x0,0x1C,0xE0
	.DB  0xFF,0x1F,0xF8,0xFF,0x1F,0x3C,0x0,0x1C
	.DB  0xE,0x0,0x1C,0x6,0x7,0x1C,0x23,0xF
	.DB  0x1C,0x33,0x8F,0x1F,0x7B,0x83,0x1F,0xFB
	.DB  0x9F,0x1D,0x33,0xBD,0x1,0x3,0xB9,0x1
	.DB  0xE3,0x99,0x1,0xE6,0xC1,0x0,0xC6,0xC1
	.DB  0x0,0x1C,0x70,0x0,0x78,0x38,0x0,0xF8
	.DB  0x3F,0x0,0x98,0x33,0x0,0xF8,0x3F,0x0
_circulation:
	.DB  0x14,0x0,0x13,0x0,0x20,0x0,0x0,0x30
	.DB  0xF,0x0,0xF8,0x3F,0x0,0xF8,0xF0,0x0
	.DB  0x30,0xC0,0x1,0x20,0x80,0x1,0x3,0x0
	.DB  0x0,0x3,0x0,0x0,0x3,0x0,0x3,0x3
	.DB  0x80,0x7,0x3,0xC0,0xF,0x3,0x0,0x3
	.DB  0x3,0x0,0x3,0x6,0x80,0x3,0xE,0x80
	.DB  0x1,0x5C,0xC0,0x1,0x78,0xF0,0x0,0x70
	.DB  0x3E,0x0,0x78,0xE,0x0
_error_icon:
	.DB  0x15,0x0,0x14,0x0,0x0,0xE,0x0,0x0
	.DB  0x1F,0x0,0x0,0x1B,0x0,0x80,0x31,0x0
	.DB  0x80,0x31,0x0,0xC0,0x60,0x0,0xE0,0xEE
	.DB  0x0,0x60,0xCE,0x0,0x30,0x8E,0x1,0x30
	.DB  0x8E,0x1,0x18,0xE,0x3,0x18,0xE,0x3
	.DB  0xC,0xE,0x6,0xC,0x4,0x6,0x6,0x0
	.DB  0xC,0x6,0xE,0xC,0x3,0xE,0x18,0x3
	.DB  0x0,0x18,0xFF,0xFF,0x1F,0xFF,0xFF,0x1F
_snow:
	.DB  0x11,0x0,0x14,0x0,0x0,0x1,0x0,0x0
	.DB  0x1,0x0,0x60,0xD,0x0,0xC8,0x27,0x0
	.DB  0x8,0x21,0x0,0xB,0xA1,0x1,0xE,0xE1
	.DB  0x0,0x3C,0x79,0x0,0x67,0xCD,0x1,0xC0
	.DB  0x7,0x0,0xC0,0x7,0x0,0x67,0xCD,0x1
	.DB  0x3C,0x79,0x0,0xE,0xE1,0x0,0xB,0xA1
	.DB  0x1,0x88,0x23,0x0,0xC8,0x27,0x0,0x60
	.DB  0xD,0x0,0x0,0x1,0x0,0x0,0x1,0x0
__glcd_mask:
	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
	.DB  0xFF
_st7920_base_y_G100:
	.DB  0x80,0x90,0x88,0x98

;GLOBAL REGISTER VARIABLES INITIALIZATION
__REG_VARS:
	.DB  0x0,0x0

_0x20004:
	.DB  LOW(_0x20003),HIGH(_0x20003),LOW(_0x20003+9),HIGH(_0x20003+9),LOW(_0x20003+18),HIGH(_0x20003+18),LOW(_0x20003+27),HIGH(_0x20003+27)
	.DB  LOW(_0x20003+36),HIGH(_0x20003+36),LOW(_0x20003+45),HIGH(_0x20003+45)
_0x20006:
	.DB  LOW(_0x20005),HIGH(_0x20005),LOW(_0x20005+11),HIGH(_0x20005+11),LOW(_0x20005+22),HIGH(_0x20005+22),LOW(_0x20005+33),HIGH(_0x20005+33)
	.DB  LOW(_0x20005+44),HIGH(_0x20005+44),LOW(_0x20005+55),HIGH(_0x20005+55),LOW(_0x20005+66),HIGH(_0x20005+66),LOW(_0x20005+77),HIGH(_0x20005+77)
	.DB  LOW(_0x20005+88),HIGH(_0x20005+88),LOW(_0x20005+99),HIGH(_0x20005+99),LOW(_0x20005+110),HIGH(_0x20005+110)
_0x20008:
	.DB  LOW(_0x20007),HIGH(_0x20007),LOW(_0x20007+10),HIGH(_0x20007+10),LOW(_0x20007+21),HIGH(_0x20007+21),LOW(_0x20007+32),HIGH(_0x20007+32)
	.DB  LOW(_0x20007+43),HIGH(_0x20007+43),LOW(_0x20007+54),HIGH(_0x20007+54),LOW(_0x20007+65),HIGH(_0x20007+65)
_0x2000A:
	.DB  LOW(_0x20009),HIGH(_0x20009),LOW(_0x20009+7),HIGH(_0x20009+7),LOW(_0x20009+14),HIGH(_0x20009+14)
_0x2000C:
	.DB  LOW(_0x2000B),HIGH(_0x2000B),LOW(_0x2000B+5),HIGH(_0x2000B+5),LOW(_0x2000B+17),HIGH(_0x2000B+17),LOW(_0x2000B+26),HIGH(_0x2000B+26)
	.DB  LOW(_0x2000B+46),HIGH(_0x2000B+46),LOW(_0x2000B+55),HIGH(_0x2000B+55),LOW(_0x2000B+73),HIGH(_0x2000B+73),LOW(_0x2000B+87),HIGH(_0x2000B+87)
	.DB  LOW(_0x2000B+105),HIGH(_0x2000B+105),LOW(_0x2000B+123),HIGH(_0x2000B+123)
_0x2000D:
	.DB  0x32,0x0,0x5,0x0,0xF,0x0,0x3,0x0
	.DB  0x0,0x2
_0x20000:
	.DB  0x69,0x64,0x6C,0x65,0x20,0x20,0x20,0x20
	.DB  0x0,0x73,0x74,0x61,0x72,0x74,0x69,0x6E
	.DB  0x67,0x0,0x68,0x65,0x61,0x74,0x69,0x6E
	.DB  0x67,0x20,0x0,0x70,0x72,0x65,0x2D,0x62
	.DB  0x6C,0x6F,0x77,0x0,0x62,0x6C,0x6F,0x77
	.DB  0x32,0x20,0x20,0x20,0x0,0x63,0x6F,0x6F
	.DB  0x6C,0x69,0x6E,0x67,0x20,0x0,0x6E,0x6F
	.DB  0x6E,0x65,0x20,0x20,0x20,0x20,0x20,0x20
	.DB  0x0,0x62,0x6C,0x6F,0x77,0x69,0x6E,0x67
	.DB  0x6F,0x66,0x66,0x0,0x62,0x6C,0x6F,0x77
	.DB  0x50,0x72,0x65,0x43,0x68,0x6B,0x0,0x62
	.DB  0x6C,0x6F,0x77,0x69,0x6E,0x67,0x20,0x20
	.DB  0x20,0x0,0x74,0x72,0x61,0x6E,0x73,0x20
	.DB  0x4F,0x4E,0x20,0x20,0x0,0x63,0x6C,0x61
	.DB  0x70,0x54,0x73,0x74,0x43,0x68,0x6B,0x0
	.DB  0x63,0x6C,0x61,0x70,0x61,0x6E,0x50,0x72
	.DB  0x65,0x57,0x0,0x63,0x6C,0x61,0x70,0x61
	.DB  0x6E,0x20,0x77,0x72,0x6B,0x0,0x74,0x72
	.DB  0x61,0x6E,0x73,0x66,0x6F,0x72,0x6D,0x72
	.DB  0x0,0x69,0x6F,0x6E,0x20,0x74,0x65,0x73
	.DB  0x74,0x20,0x20,0x0,0x69,0x6F,0x6E,0x20
	.DB  0x77,0x6F,0x72,0x6B,0x20,0x20,0x0,0x20
	.DB  0x6E,0x6F,0x20,0x6D,0x6F,0x64,0x65,0x6C
	.DB  0x0,0x20,0x20,0x55,0x4B,0x20,0x31,0x30
	.DB  0x33,0x20,0x20,0x0,0x20,0x20,0x55,0x4B
	.DB  0x20,0x32,0x30,0x33,0x20,0x20,0x0,0x20
	.DB  0x20,0x55,0x4B,0x20,0x33,0x30,0x33,0x20
	.DB  0x20,0x0,0x4C,0x41,0x4E,0x20,0x6D,0x61
	.DB  0x73,0x74,0x65,0x72,0x0,0x4C,0x41,0x4E
	.DB  0x20,0x73,0x6C,0x61,0x76,0x65,0x31,0x0
	.DB  0x4C,0x41,0x4E,0x20,0x73,0x6C,0x61,0x76
	.DB  0x65,0x32,0x0,0x4E,0x6F,0x6E,0x65,0x20
	.DB  0x20,0x0,0x57,0x69,0x6E,0x74,0x65,0x72
	.DB  0x0,0x53,0x75,0x6D,0x6D,0x65,0x72,0x0
	.DB  0x4E,0x6F,0x6E,0x65,0x0,0x57,0x61,0x74
	.DB  0x65,0x72,0x20,0x6C,0x65,0x76,0x65,0x6C
	.DB  0x0,0x4F,0x76,0x65,0x72,0x68,0x65,0x61
	.DB  0x74,0x0,0x46,0x6C,0x61,0x6D,0x65,0x20
	.DB  0x64,0x65,0x74,0x65,0x63,0x74,0x6F,0x72
	.DB  0x20,0x74,0x65,0x73,0x74,0x0,0x4E,0x6F
	.DB  0x20,0x66,0x6C,0x61,0x6D,0x65,0x0,0x49
	.DB  0x6F,0x6E,0x20,0x64,0x65,0x74,0x65,0x63
	.DB  0x74,0x6F,0x72,0x20,0x74,0x65,0x73,0x74
	.DB  0x0,0x4E,0x6F,0x20,0x69,0x6F,0x6E,0x69
	.DB  0x7A,0x61,0x74,0x69,0x6F,0x6E,0x0,0x41
	.DB  0x69,0x72,0x20,0x64,0x65,0x74,0x65,0x63
	.DB  0x74,0x6F,0x72,0x20,0x74,0x65,0x73,0x74
	.DB  0x0,0x41,0x69,0x72,0x20,0x64,0x65,0x74
	.DB  0x65,0x63,0x74,0x6F,0x72,0x20,0x77,0x6F
	.DB  0x72,0x6B,0x0,0x54,0x68,0x65,0x72,0x6D
	.DB  0x69,0x73,0x74,0x6F,0x72,0x20,0x66,0x61
	.DB  0x69,0x6C,0x75,0x72,0x65,0x0
_0x40004:
	.DB  0x24,0x24,0x5F,0x38
_0x40005:
	.DB  0xC3,0x28,0xAD,0xBA
_0x40006:
	.DB  0x9,0x50,0xD3,0x3D
_0x40007:
	.DB  0xD6,0x56,0x1C,0x3F
_0x40008:
	.DB  0xCD,0xCC,0x4C,0xBD
_0x40009:
	.DB  0xA7,0x41,0x3A,0x38
_0x4000A:
	.DB  0x11,0xD5,0xA5,0xBA
_0x4000B:
	.DB  0xD5,0x77,0x7E,0x3D
_0x4000C:
	.DB  0xC0,0xE7,0x3F,0x3F
_0x80015:
	.DB  0x1
_0x80000:
	.DB  0x25,0x73,0x0,0x20,0x25,0x33,0x64,0x0
	.DB  0x25,0x33,0x2E,0x30,0x66,0x0,0x3E,0x0
	.DB  0x20,0x0
_0xC0004:
	.DB  LOW(_boiler_toggle_wrap),HIGH(_boiler_toggle_wrap),0x0,0x0,0x0,0x0,0x0,0x0
	.DB  LOW(_boiler_state_str),HIGH(_boiler_state_str),LOW(_boiler+55),HIGH(_boiler+55),0xFF,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x5,0x0,0x0,0x0
	.DB  LOW(_0xC0003),HIGH(_0xC0003),0x3,0x5,0x0,0x0,0x0,LOW(_decrementEntry)
	.DB  HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0,0x0,LOW(_boiler+44)
	.DB  HIGH(_boiler+44),0xFF,0xFF,0x0,0x0,0x5,0x0,0x0
	.DB  0x0,0x63,0x0,0x0,0x0,LOW(_0xC0003+9),HIGH(_0xC0003+9),0x4
	.DB  0x1,0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry)
	.DB  0x0,0x0,LOW(_weather_dep_str),HIGH(_weather_dep_str),LOW(_boiler+54),HIGH(_boiler+54),0xFF,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
	.DB  0x0,0x0,LOW(_0xC0003+20),HIGH(_0xC0003+20),0x3,0x5,0x0,0x0
	.DB  0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0
	.DB  0x0,LOW(_boiler+42),HIGH(_boiler+42),0xFF,0xFF,0x0,0x0,0x2
	.DB  0x0,0x0,0x0,0xA,0x0,0x0,0x0,LOW(_0xC0003+31)
	.DB  HIGH(_0xC0003+31),0x4,0x1,0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry)
	.DB  LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,0x0,0x0,LOW(_boiler+46),HIGH(_boiler+46)
	.DB  0xFF,0xFF,0x0,0x0,0x1,0x0,0x0,0x0
	.DB  0x63,0x0,0x0,0x0,LOW(_0xC0003+42),HIGH(_0xC0003+42),0x4,0x1
	.DB  0x0,0x0,0x0,LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0
	.DB  0x0,0x0,0x0,LOW(_boiler+48),HIGH(_boiler+48),0xFF,0xFF,0x0
	.DB  0x0,0x1,0x0,0x0,0x0,0x63,0x0,0x0
	.DB  0x0,LOW(_0xC0003+56),HIGH(_0xC0003+56),0x4,0x1,0x0,0x0,0x0
	.DB  LOW(_decrementEntry),HIGH(_decrementEntry),LOW(_incrementEntry),HIGH(_incrementEntry),0x0,0x0,LOW(_boiler_role_str),HIGH(_boiler_role_str)
	.DB  LOW(_boiler+57),HIGH(_boiler+57),0xFF,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x6,0x0,0x0,0x0,LOW(_0xC0003+69),HIGH(_0xC0003+69)
	.DB  0x3,0x5
_0xC0005:
	.DB  LOW(_main_page_list),HIGH(_main_page_list),0x7
_0xC0000:
	.DB  0x83,0xAB,0xAC,0x2D,0x83,0xBC,0xAB,0xAC
	.DB  0x0,0x8E,0xA1,0xA4,0xB1,0xA6,0xB3,0xBD
	.DB  0x20,0xA5,0xAF,0x0,0x83,0xB1,0xA6,0xAD
	.DB  0xC0,0x20,0xA4,0xAF,0xA5,0xA1,0x0,0x84
	.DB  0xA9,0xB2,0xB3,0xA6,0xB1,0xA6,0xA8,0xA9
	.DB  0xB2,0x0,0x83,0xAB,0xAC,0x20,0xAE,0xA1
	.DB  0xB2,0xAF,0xB2,0x20,0xB0,0xB1,0xA9,0x0
	.DB  0x84,0xA9,0xB2,0xB3,0x2E,0x20,0xAE,0xA1
	.DB  0xB2,0xAF,0xB2,0xA1,0x0,0x8D,0xAF,0xA5
	.DB  0xA6,0xAC,0xBD,0x0
_0xE0006:
	.DB  LOW(_0xE0005),HIGH(_0xE0005)
_0xE0000:
	.DB  0x25,0x33,0x2E,0x30,0x66,0x0,0x25,0x33
	.DB  0x2E,0x30,0x66,0x2D,0x3E,0x25,0x64,0x0
	.DB  0x25,0x73,0x0,0x46,0x41,0x4E,0x5F,0x4F
	.DB  0x4E,0x20,0x0,0x46,0x41,0x4E,0x5F,0x4F
	.DB  0x46,0x46,0x0,0x43,0x4C,0x31,0x5F,0x4F
	.DB  0x4E,0x20,0x0,0x43,0x4C,0x31,0x5F,0x4F
	.DB  0x46,0x46,0x0,0x43,0x4C,0x32,0x5F,0x4F
	.DB  0x4E,0x20,0x0,0x43,0x4C,0x32,0x5F,0x4F
	.DB  0x46,0x46,0x0,0x8F,0xB9,0xA9,0xA2,0xAB
	.DB  0xA1,0x20,0x25,0x64,0x0
_0x2060000:
	.DB  0x2D,0x4E,0x41,0x4E,0x0
_0x2080060:
	.DB  0x1
_0x2080000:
	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
	.DB  0x0

__GLOBAL_INI_TBL:
	.DW  0x02
	.DW  0x06
	.DW  __REG_VARS*2

	.DW  0x09
	.DW  _0x20003
	.DW  _0x20000*2

	.DW  0x09
	.DW  _0x20003+9
	.DW  _0x20000*2+9

	.DW  0x09
	.DW  _0x20003+18
	.DW  _0x20000*2+18

	.DW  0x09
	.DW  _0x20003+27
	.DW  _0x20000*2+27

	.DW  0x09
	.DW  _0x20003+36
	.DW  _0x20000*2+36

	.DW  0x09
	.DW  _0x20003+45
	.DW  _0x20000*2+45

	.DW  0x0C
	.DW  _boiler_state_str
	.DW  _0x20004*2

	.DW  0x0B
	.DW  _0x20005
	.DW  _0x20000*2+54

	.DW  0x0B
	.DW  _0x20005+11
	.DW  _0x20000*2+65

	.DW  0x0B
	.DW  _0x20005+22
	.DW  _0x20000*2+76

	.DW  0x0B
	.DW  _0x20005+33
	.DW  _0x20000*2+87

	.DW  0x0B
	.DW  _0x20005+44
	.DW  _0x20000*2+98

	.DW  0x0B
	.DW  _0x20005+55
	.DW  _0x20000*2+109

	.DW  0x0B
	.DW  _0x20005+66
	.DW  _0x20000*2+120

	.DW  0x0B
	.DW  _0x20005+77
	.DW  _0x20000*2+131

	.DW  0x0B
	.DW  _0x20005+88
	.DW  _0x20000*2+142

	.DW  0x0B
	.DW  _0x20005+99
	.DW  _0x20000*2+153

	.DW  0x0B
	.DW  _0x20005+110
	.DW  _0x20000*2+164

	.DW  0x16
	.DW  _start_sequence_stage_str
	.DW  _0x20006*2

	.DW  0x0A
	.DW  _0x20007
	.DW  _0x20000*2+175

	.DW  0x0B
	.DW  _0x20007+10
	.DW  _0x20000*2+185

	.DW  0x0B
	.DW  _0x20007+21
	.DW  _0x20000*2+196

	.DW  0x0B
	.DW  _0x20007+32
	.DW  _0x20000*2+207

	.DW  0x0B
	.DW  _0x20007+43
	.DW  _0x20000*2+218

	.DW  0x0B
	.DW  _0x20007+54
	.DW  _0x20000*2+229

	.DW  0x0B
	.DW  _0x20007+65
	.DW  _0x20000*2+240

	.DW  0x0E
	.DW  _boiler_role_str
	.DW  _0x20008*2

	.DW  0x07
	.DW  _0x20009
	.DW  _0x20000*2+251

	.DW  0x07
	.DW  _0x20009+7
	.DW  _0x20000*2+258

	.DW  0x07
	.DW  _0x20009+14
	.DW  _0x20000*2+265

	.DW  0x06
	.DW  _weather_dep_str
	.DW  _0x2000A*2

	.DW  0x05
	.DW  _0x2000B
	.DW  _0x20000*2+272

	.DW  0x0C
	.DW  _0x2000B+5
	.DW  _0x20000*2+277

	.DW  0x09
	.DW  _0x2000B+17
	.DW  _0x20000*2+289

	.DW  0x14
	.DW  _0x2000B+26
	.DW  _0x20000*2+298

	.DW  0x09
	.DW  _0x2000B+46
	.DW  _0x20000*2+318

	.DW  0x12
	.DW  _0x2000B+55
	.DW  _0x20000*2+327

	.DW  0x0E
	.DW  _0x2000B+73
	.DW  _0x20000*2+345

	.DW  0x12
	.DW  _0x2000B+87
	.DW  _0x20000*2+359

	.DW  0x12
	.DW  _0x2000B+105
	.DW  _0x20000*2+377

	.DW  0x13
	.DW  _0x2000B+123
	.DW  _0x20000*2+395

	.DW  0x14
	.DW  _errors_str
	.DW  _0x2000C*2

	.DW  0x0A
	.DW  _eedefault
	.DW  _0x2000D*2

	.DW  0x04
	.DW  _air_k1
	.DW  _0x40004*2

	.DW  0x04
	.DW  _air_b1
	.DW  _0x40005*2

	.DW  0x04
	.DW  _air_k2
	.DW  _0x40006*2

	.DW  0x04
	.DW  _air_b2
	.DW  _0x40007*2

	.DW  0x04
	.DW  _air_c
	.DW  _0x40008*2

	.DW  0x04
	.DW  _water_k1
	.DW  _0x40009*2

	.DW  0x04
	.DW  _water_b1
	.DW  _0x4000A*2

	.DW  0x04
	.DW  _water_k2
	.DW  _0x4000B*2

	.DW  0x04
	.DW  _water_b2
	.DW  _0x4000C*2

	.DW  0x01
	.DW  _prev_index_S0040003000
	.DW  _0x80015*2

	.DW  0x09
	.DW  _0xC0003
	.DW  _0xC0000*2

	.DW  0x0B
	.DW  _0xC0003+9
	.DW  _0xC0000*2+9

	.DW  0x0B
	.DW  _0xC0003+20
	.DW  _0xC0000*2+20

	.DW  0x0B
	.DW  _0xC0003+31
	.DW  _0xC0000*2+31

	.DW  0x0E
	.DW  _0xC0003+42
	.DW  _0xC0000*2+42

	.DW  0x0D
	.DW  _0xC0003+56
	.DW  _0xC0000*2+56

	.DW  0x07
	.DW  _0xC0003+69
	.DW  _0xC0000*2+69

	.DW  0xCA
	.DW  _main_page_list
	.DW  _0xC0004*2

	.DW  0x03
	.DW  _main_page
	.DW  _0xC0005*2

	.DW  0x01
	.DW  _0xE0005
	.DW  _0xE0000*2+5

	.DW  0x02
	.DW  _br_str_S0070003000
	.DW  _0xE0006*2

	.DW  0x01
	.DW  __seed_G104
	.DW  _0x2080060*2

_0xFFFFFFFF:
	.DW  0

#define __GLOBAL_INI_TBL_PRESENT 1

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30
	STS  XMCRB,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0x00

	.DSEG
	.ORG 0x500

	.CSEG
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;	flags -> R17
;volatile uint32_t tick_ms = 0;
;uint32_t time_zero = 0;
;uint8_t clapan_out_monitor;
;void displayInit(GLCDINIT_t glcd_init_data){
; 0000 002F void displayInit(GLCDINIT_t glcd_init_data){

	.CSEG
_displayInit:
; .FSTART _displayInit
; 0000 0030 glcd_init_data.font=font5x7;
;	glcd_init_data -> Y+0
	LDI  R30,LOW(_font5x7*2)
	LDI  R31,HIGH(_font5x7*2)
	ST   Y,R30
	STD  Y+1,R31
; 0000 0031 glcd_init_data.readxmem=NULL;
	LDI  R30,LOW(0)
	STD  Y+2,R30
	STD  Y+2+1,R30
; 0000 0032 glcd_init_data.writexmem=NULL;
	STD  Y+4,R30
	STD  Y+4+1,R30
; 0000 0033 glcd_init(&glcd_init_data);
	MOVW R26,R28
	CALL _glcd_init
; 0000 0034 }
	RJMP _0x2140020
; .FEND
;void PORT_INIT(){
; 0000 0036 void PORT_INIT(){
_PORT_INIT:
; .FSTART _PORT_INIT
; 0000 0037 DDRA = 0xff;
	LDI  R30,LOW(255)
	OUT  0x1A,R30
; 0000 0038 PORTA = 0x00;
	LDI  R30,LOW(0)
	OUT  0x1B,R30
; 0000 0039 DDRC = 0xdf;
	LDI  R30,LOW(223)
	OUT  0x14,R30
; 0000 003A PORTC |= 0x11;
	IN   R30,0x15
	ORI  R30,LOW(0x11)
	OUT  0x15,R30
; 0000 003B 
; 0000 003C DDRE = 0x00;
	LDI  R30,LOW(0)
	OUT  0x2,R30
; 0000 003D PORTE = 0;
	OUT  0x3,R30
; 0000 003E 
; 0000 003F DDRD = 0xff;
	LDI  R30,LOW(255)
	OUT  0x11,R30
; 0000 0040 PORTD = 0x00;
	LDI  R30,LOW(0)
	OUT  0x12,R30
; 0000 0041 
; 0000 0042 DDRF = 0x00;
	STS  97,R30
; 0000 0043 PORTF = 0;//0b11011001;
	STS  98,R30
; 0000 0044 
; 0000 0045 DDRB = 0b00000000;
	OUT  0x17,R30
; 0000 0046 PORTB = 0b10000000;
	LDI  R30,LOW(128)
	OUT  0x18,R30
; 0000 0047 
; 0000 0048 DDRG = 0b000000;
	LDI  R30,LOW(0)
	STS  100,R30
; 0000 0049 PORTG = 0b00011000;
	LDI  R30,LOW(24)
	STS  101,R30
; 0000 004A }
	RET
; .FEND
;void timerInit(){
; 0000 004C void timerInit(){
_timerInit:
; .FSTART _timerInit
; 0000 004D //adc  trig
; 0000 004E TCCR1B |= (1<<WGM21);
	IN   R30,0x2E
	ORI  R30,8
	OUT  0x2E,R30
; 0000 004F TIMSK |= (1<<OCIE1A);
	IN   R30,0x37
	ORI  R30,0x10
	OUT  0x37,R30
; 0000 0050 OCR1A = 32768;
	LDI  R30,LOW(32768)
	LDI  R31,HIGH(32768)
	OUT  0x2A+1,R31
	OUT  0x2A,R30
; 0000 0051 TCCR1B |= (1<<CS12);
	IN   R30,0x2E
	ORI  R30,4
	OUT  0x2E,R30
; 0000 0052 
; 0000 0053 //systick 1ms
; 0000 0054 ASSR=0<<AS0;
	LDI  R30,LOW(0)
	OUT  0x30,R30
; 0000 0055 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01)  ...
	LDI  R30,LOW(3)
	OUT  0x33,R30
; 0000 0056 TCNT0=0x06;
	LDI  R30,LOW(6)
	OUT  0x32,R30
; 0000 0057 OCR0=0x00;
	LDI  R30,LOW(0)
	OUT  0x31,R30
; 0000 0058 TIMSK |= (1<<TOIE0);
	IN   R30,0x37
	ORI  R30,1
	OUT  0x37,R30
; 0000 0059 }
	RET
; .FEND
;void uartInit(){
; 0000 005C void uartInit(){
_uartInit:
; .FSTART _uartInit
; 0000 005D // USART0 initialization
; 0000 005E // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 005F // USART0 Receiver: On
; 0000 0060 // USART0 Transmitter: On
; 0000 0061 // USART0 Mode: Asynchronous
; 0000 0062 // USART0 Baud Rate: 9600
; 0000 0063 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | ( ...
	LDI  R30,LOW(0)
	OUT  0xB,R30
; 0000 0064 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<U ...
	LDI  R30,LOW(24)
	OUT  0xA,R30
; 0000 0065 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UC ...
	LDI  R30,LOW(6)
	STS  149,R30
; 0000 0066 UBRR0H=0x00;
	LDI  R30,LOW(0)
	STS  144,R30
; 0000 0067 
; 0000 0068 //9600
; 0000 0069 UBRR0L=0x33;
	LDI  R30,LOW(51)
	OUT  0x9,R30
; 0000 006A //56000
; 0000 006B UBRR0L=0x08;
	LDI  R30,LOW(8)
	OUT  0x9,R30
; 0000 006C }
	RET
; .FEND
;uint32_t GetTick_ms(void){
; 0000 006E uint32_t GetTick_ms(void){
_GetTick_ms:
; .FSTART _GetTick_ms
; 0000 006F return tick_ms;
	CALL SUBOPT_0x0
	RET
; 0000 0070 }
; .FEND
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0073 {
_timer0_ovf_isr:
; .FSTART _timer0_ovf_isr
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 0074 // Reinitialize Timer 0 value
; 0000 0075 TCNT0=0x06;
	LDI  R30,LOW(6)
	OUT  0x32,R30
; 0000 0076 tick_ms++;
	LDI  R26,LOW(_tick_ms)
	LDI  R27,HIGH(_tick_ms)
	CALL SUBOPT_0x1
; 0000 0077 
; 0000 0078 //PRINT("\r\nTIMER 1 ms\r\n");
; 0000 0079 // Place your code here
; 0000 007A if(CLAPAN_OUT_PIN & CLAPAN_OUT_Pin){
	SBIS 0x0,6
	RJMP _0x4
; 0000 007B time_zero = tick_ms;
	CALL SUBOPT_0x0
	STS  _time_zero,R30
	STS  _time_zero+1,R31
	STS  _time_zero+2,R22
	STS  _time_zero+3,R23
; 0000 007C clapan_out_monitor = 1;
	LDI  R30,LOW(1)
	RJMP _0xC
; 0000 007D }
; 0000 007E else{
_0x4:
; 0000 007F if(clapan_out_monitor){
	LDS  R30,_clapan_out_monitor
	CPI  R30,0
	BREQ _0x6
; 0000 0080 if(tick_ms - time_zero > CLAPAN_MONITOR_TIMEOUT){
	LDS  R26,_time_zero
	LDS  R27,_time_zero+1
	LDS  R24,_time_zero+2
	LDS  R25,_time_zero+3
	CALL SUBOPT_0x0
	CALL __SUBD12
	__CPD1N 0x65
	BRLO _0x7
; 0000 0081 clapan_out_monitor = 0;
	LDI  R30,LOW(0)
_0xC:
	STS  _clapan_out_monitor,R30
; 0000 0082 }
; 0000 0083 }
_0x7:
; 0000 0084 }
_0x6:
; 0000 0085 }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	RETI
; .FEND
;interrupt[TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0088 {
_timer1_compa_isr:
; .FSTART _timer1_compa_isr
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 0089 GetRef();
	CALL _GetRef
; 0000 008A SendAirTemp();
	CALL _SendAirTemp
; 0000 008B SendWaterTemp();
	CALL _SendWaterTemp
; 0000 008C //GetDirect();
; 0000 008D }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
; .FEND
;void printBoilerInfo(void){
; 0000 008F void printBoilerInfo(void){
_printBoilerInfo:
; .FSTART _printBoilerInfo
; 0000 0090 //PRINT("===========================\r\n");
; 0000 0091 //PRINT("INFO: ");
; 0000 0092 /*
; 0000 0093 PRINT("role=%s ", boiler_role_str[boiler.role]);
; 0000 0094 PRINT("vdd=%.1f ", boiler.vdd);
; 0000 0095 PRINT("air_temp=%.2f ", boiler.air_temp);
; 0000 0096 PRINT("air_temp_adc=%d ", boiler.air_temp_adc);
; 0000 0097 PRINT("water_temp=%.2f ", boiler.water_temp);
; 0000 0098 PRINT("water_adc=%d ", boiler.water_temp_adc);
; 0000 0099 PRINT("gisteresis=%d ", boiler.gisteresis);
; 0000 009A PRINT("\r\n");
; 0000 009B PRINT("water_goal_temp=%d ", boiler.water_goal_temp);
; 0000 009C */
; 0000 009D PRINT("timeLastStage=%d ", boiler.time_of_last_stage);
; 0000 009E PRINT("timSinceLastStage=%d ", tick_ms - boiler.time_of_last_stage);
; 0000 009F //PRINT("weather=%s ", weather_dep_str[boiler.weather]);
; 0000 00A0 PRINT("state=%s ", boiler_state_str[boiler.state]);
; 0000 00A1 PRINT("start=%s ", start_sequence_stage_str[boiler.start_stage]);
; 0000 00A2 PRINT("cmd=%s ", boiler_state_str[boiler.command]);
; 0000 00A3 PRINT("err=%s ", errors_str[boiler.error]);
; 0000 00A4 PRINT("weather=%s ", weather_dep_str[boiler.weather]);
; 0000 00A5 //PRINT("\r\n");
; 0000 00A6 PRINT("URVN=%d ", Uroven_out);
; 0000 00A7 PRINT("Ion=%d ", Ion_out);
; 0000 00A8 PRINT("t_max=%d ", t_max_out);
; 0000 00A9 PRINT("plamya=%d ", plamya_out);
; 0000 00AA PRINT("clapan=%d ", clapan_out());
; 0000 00AB PRINT("TransRozg=%d ", isTransRozgiga_ON);
; 0000 00AC PRINT("Ventilaytor=%d ", isVentilaytor_ON);
; 0000 00AD PRINT("ToplNasos=%d ", isTopl_Nasos_ON);
; 0000 00AE PRINT("SetNasos=%d ", isSetevoi_nasos_ON);
; 0000 00AF PRINT("K-n1=%d ", isKlapan1_ON);
; 0000 00B0 PRINT("K-n2=%d ", isKlapan2_ON);
; 0000 00B1 PRINT("TClap=%d ", tick_ms - time_zero);
; 0000 00B2 
; 0000 00B3 PRINT("\r\n");
; 0000 00B4 }
	RET
; .FEND
;extern float DirectVolt;
;extern uint16_t DirectADC;
;void main(void){
; 0000 00B9 void main(void){
_main:
; .FSTART _main
; 0000 00BA GLCDINIT_t glcd_init_data;
; 0000 00BB 
; 0000 00BC PORT_INIT();
	SBIW R28,6
;	glcd_init_data -> Y+0
	RCALL _PORT_INIT
; 0000 00BD #if 0
; 0000 00BE /*
; 0000 00BF TransRozgiga_ON;
; 0000 00C0 Ventilaytor_ON;
; 0000 00C1 Topl_Nasos_ON;
; 0000 00C2 Setevoi_nasos_ON;
; 0000 00C3 Klapan1_ON;
; 0000 00C4 */
; 0000 00C5 while(1){
; 0000 00C6 Klapan1_ON;
; 0000 00C7 Klapan2_ON;
; 0000 00C8 delay_ms(1000);
; 0000 00C9 Klapan1_OFF;
; 0000 00CA Klapan2_OFF;
; 0000 00CB delay_ms(1000);}
; 0000 00CC while(1);
; 0000 00CD #endif
; 0000 00CE 
; 0000 00CF uartInit();
	RCALL _uartInit
; 0000 00D0 //PRINT("uart ok\r\n");
; 0000 00D1 #asm("sei")
	SEI
; 0000 00D2 //PRINT("sei\r\n");
; 0000 00D3 ADC_Init();
	CALL _ADC_Init
; 0000 00D4 //PRINT("adc init()\r\n") ;
; 0000 00D5 timerInit();
	RCALL _timerInit
; 0000 00D6 
; 0000 00D7 delay_ms(200);
	LDI  R26,LOW(200)
	LDI  R27,0
	CALL _delay_ms
; 0000 00D8 displayInit(glcd_init_data);
	MOVW R30,R28
	LDI  R26,6
	CALL __PUTPARL
	RCALL _displayInit
; 0000 00D9 delay_ms(200);
	LDI  R26,LOW(200)
	LDI  R27,0
	CALL _delay_ms
; 0000 00DA glcd_clear();
	CALL _glcd_clear
; 0000 00DB 
; 0000 00DC //uartInit();
; 0000 00DD 
; 0000 00DE boiler_init();
	RCALL _boiler_init
; 0000 00DF menu_buttons_init();
	CALL _menu_buttons_init
; 0000 00E0 
; 0000 00E1 
; 0000 00E2 
; 0000 00E3 #if (0)
; 0000 00E4 
; 0000 00E5 ADC_Init();
; 0000 00E6 printf("\r\n\r\n\r\n");
; 0000 00E7 sei();
; 0000 00E8 printf("vdd\t");
; 0000 00E9 printf("water_volt\t");
; 0000 00EA printf("water_adc\t");
; 0000 00EB printf("waterTemp\t");
; 0000 00EC printf("water_R\t");
; 0000 00ED printf("DirectADC\t");
; 0000 00EE printf("DirectVolt\t");
; 0000 00EF printf("\r\n");
; 0000 00F0 while (1){
; 0000 00F1 printf("%.2f\t", boiler.vdd);
; 0000 00F2 printf("%.2f\t", boiler.water_voltage);
; 0000 00F3 printf("%d\t",   boiler.water_temp_adc);
; 0000 00F4 printf("%.2f\t", boiler.water_temp);
; 0000 00F5 printf("%.2f\t", boiler.water_resistance);
; 0000 00F6 printf("%d\t",   DirectADC);
; 0000 00F7 printf("%.2f\t", DirectVolt);
; 0000 00F8 printf("\r\n");
; 0000 00F9 delay_ms(20);
; 0000 00FA }
; 0000 00FB 
; 0000 00FC #endif
; 0000 00FD 
; 0000 00FE 
; 0000 00FF while (1){
_0x8:
; 0000 0100 //PRINT(">>>ITERATION BEGIN\r\n");
; 0000 0101 printBoilerInfo();
	RCALL _printBoilerInfo
; 0000 0102 menu_buttons_update();
	CALL _menu_buttons_update
; 0000 0103 boiler_update();
	RCALL _boiler_update
; 0000 0104 boiler_update_pump();
	RCALL _boiler_update_pump
; 0000 0105 boiler_update_nvm();
	RCALL _boiler_update_nvm
; 0000 0106 widgetsUpdate();
	CALL _widgetsUpdate
; 0000 0107 
; 0000 0108 //printBoilerInfo();
; 0000 0109 //delay_ms(100);
; 0000 010A // PRINT("<<<ITERATION END\r\n\r\n\r\n");   */
; 0000 010B }
	RJMP _0x8
; 0000 010C }
_0xB:
	RJMP _0xB
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;char* boiler_state_str[] = {
;"idle    ",
;"starting",
;"heating ",
;"pre-blow",
;"blow2   ",
;"cooling ",
;};

	.DSEG
_0x20003:
	.BYTE 0x36
;char* start_sequence_stage_str[] = {
;"none      ",      //"none      ",
;"blowingoff",      //"blowing   ",
;"blowPreChk",      //"fire test ",
;"blowing   ",      //"fire work ",
;"trans ON  ",      //"clapan tst",
;"clapTstChk",      //"clapTstChk"
;"clapanPreW",      //"clapanPreW"
;"clapan wrk",      //"clapan wrk",
;"transformr",      //"transformr"
;"ion test  ",      //"ion test  ",
;"ion work  ",      //"ion work  ",
;};
_0x20005:
	.BYTE 0x79
;char*  boiler_role_str[] = {
;" no model",
;"  UK 103  ",
;"  UK 203  ",
;"  UK 303  ",
;"LAN master",
;"LAN slave1",
;"LAN slave2",
;};
_0x20007:
	.BYTE 0x4C
;char* weather_dep_str[] = {
;"None  ",  //   "\x8E\xA1\xA4\xB1\xA6\xA3",  //
;"Winter",  //   "  \x88\xA9\xAD\xA1",        //
;"Summer"   //   "  \x8C\xA6\xB3\xAF"         //
;};
_0x20009:
	.BYTE 0x15
;char* errors_str[] = {
;"None",                 // "\x8E\xA6\xB3",                                       ...
;"Water level",          // "\x94\xB1\xAF\xA3\xA6\xAE\xBD \xA3\xAF\xA5\xBC",      ...
;"Overheat",             // "\x90\xA6\xB1\xA6\xA4\xB1\xA6\xA3",                   ...
;"Flame detector test",  // "\x8C\xAF\xA7\xAE\xAF\xA6 \xB0\xAC\xA1\xAD\xC0",      ...
;"No flame",             // "\x8E\xA6\xB3 \xB0\xAC\xA1\xAD\xA6\xAE\xA9",          ...
;"Ion detector test",    // "\x93\xA6\xB2\xB3 \xA9\xAF\xAE\xA9\xA8\xA1\xB7\xA9\xA ...
;"No ionization",        // "\x8E\xA6\xB3 \xA9\xAF\xAE\xA9\xA8\xA1\xB7\xA9\xA9",  ...
;"Air detector test",    // "\x93\xA6\xB2\xB3 \xA5\xA1\xB3\xB8\xA9\xAB\xA1 \xA3\x ...
;"Air detector work",    // "\x91\xA1\xA2\xAF\xB3\xA1 \xA5\xA1\xB3\xB8\xA9\xAB\xA ...
;"Thermistor failure",   // "\x8F\xB9\xA9\xA2\xAB\xA1 \xB3\xA6\xB1\xAD\xA9\xB2\xB ...
;};
_0x2000B:
	.BYTE 0x8E
;typedef struct{
;int16_t        water_goal_temp;
;int16_t        gisteresis;
;int16_t        pump_on_temp;
;int16_t        pump_gist_temp;
;weather_dep_e  weather;
;boiler_role    role;
;boiler_state_e command;
;uint8_t        not_programmed;
;}nvm_data_t;
;eeprom  nvm_data_t eeinit_data;
;nvm_data_t eedefault = {
;.water_goal_temp = 50,
;.gisteresis      = 5,
;.pump_on_temp    = 15,
;.pump_gist_temp  = 3,
;.weather         = weather_none,
;.role            = role_UK_203,
;.command         = boiler_idle,
;.not_programmed  = 0,
;};
;nvm_data_t nvm_cache;
;boiler_t boiler;
;void turnAllOff(void){
; 0001 0060 void turnAllOff(void){

	.CSEG
_turnAllOff:
; .FSTART _turnAllOff
; 0001 0061 TransRozgiga_OFF;
	CBI  0x12,2
; 0001 0062 Ventilaytor_OFF;
	CBI  0x12,3
; 0001 0063 Topl_Nasos_OFF;
	CBI  0x12,4
; 0001 0064 //Setevoi_nasos_OFF;
; 0001 0065 Klapan1_OFF;
	CBI  0x12,6
; 0001 0066 Klapan2_OFF;
	CBI  0x12,7
; 0001 0067 boiler.time_of_last_stage = 0;
	CALL SUBOPT_0x2
	CALL SUBOPT_0x3
; 0001 0068 }
	RET
; .FEND
;void boiler_init(void){
; 0001 006A void boiler_init(void){
_boiler_init:
; .FSTART _boiler_init
; 0001 006B PRINT(">>boiler_init()\r\n");
; 0001 006C eeprom_read_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
	CALL SUBOPT_0x4
; 0001 006D if(nvm_cache.not_programmed){
	__GETB1MN _nvm_cache,11
	CPI  R30,0
	BREQ _0x2000E
; 0001 006E eeprom_write_block(&eedefault, &eeinit_data, sizeof(nvm_data_t));
	LDI  R30,LOW(_eedefault)
	LDI  R31,HIGH(_eedefault)
	CALL SUBOPT_0x5
; 0001 006F eeprom_read_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
	CALL SUBOPT_0x4
; 0001 0070 }
; 0001 0071 
; 0001 0072 boiler.command         = nvm_cache.command;
_0x2000E:
	__GETB1MN _nvm_cache,10
	__PUTB1MN _boiler,56
; 0001 0073 boiler.water_goal_temp = nvm_cache.water_goal_temp;
	LDS  R30,_nvm_cache
	LDS  R31,_nvm_cache+1
	__PUTW1MN _boiler,44
; 0001 0074 boiler.water_pump_on_temp = nvm_cache.pump_on_temp;
	__GETW1MN _nvm_cache,4
	__PUTW1MN _boiler,46
; 0001 0075 boiler.water_pump_gist_temp = nvm_cache.pump_gist_temp;
	__GETW1MN _nvm_cache,6
	__PUTW1MN _boiler,48
; 0001 0076 boiler.gisteresis      = nvm_cache.gisteresis;
	__GETW1MN _nvm_cache,2
	__PUTW1MN _boiler,42
; 0001 0077 boiler.weather         = nvm_cache.weather;
	__GETB1MN _nvm_cache,8
	__PUTB1MN _boiler,54
; 0001 0078 boiler.role            = nvm_cache.role;
	__GETB1MN _nvm_cache,9
	__PUTB1MN _boiler,57
; 0001 0079 //TODO: CRC or checksum
; 0001 007A 
; 0001 007B boiler.vdd = 5.0;
	__GETD1N 0x40A00000
	CALL SUBOPT_0x6
; 0001 007C boiler.vref = 2.050;
	__GETD1N 0x40033333
	__PUTD1MN _boiler,6
; 0001 007D boiler.K_adc =  boiler.vref / 1023;
	__GETD2MN _boiler,6
	__GETD1N 0x447FC000
	CALL SUBOPT_0x7
; 0001 007E 
; 0001 007F PRINT("<<boiler_init()\r\n");
; 0001 0080 }
	RET
; .FEND
;char check_reset_error(errors_e err, uint32_t err_condition){
; 0001 0082 char check_reset_error(errors_e err, uint32_t err_condition){
_check_reset_error:
; .FSTART _check_reset_error
; 0001 0083 if(boiler.error == err){
	CALL __PUTPARD2
	ST   -Y,R17
	LDD  R17,Y+5
;	err -> R17
;	err_condition -> Y+1
	__GETB2MN _boiler,59
	CP   R17,R26
	BRNE _0x2000F
; 0001 0084 if(!err_condition){
	CALL SUBOPT_0x8
	BRNE _0x20010
; 0001 0085 boiler.error = error_None;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,59
; 0001 0086 }
; 0001 0087 }
_0x20010:
; 0001 0088 if(err_condition){
_0x2000F:
	CALL SUBOPT_0x8
	BREQ _0x20011
; 0001 0089 boiler.error = err;
	__PUTBMRN _boiler,59,17
; 0001 008A return 1;
	LDI  R30,LOW(1)
	RJMP _0x214001F
; 0001 008B }
; 0001 008C return 0;
_0x20011:
	LDI  R30,LOW(0)
_0x214001F:
	LDD  R17,Y+0
_0x2140020:
	ADIW R28,6
	RET
; 0001 008D }
; .FEND
;void check_errors(void){
; 0001 0090 void check_errors(void){
_check_errors:
; .FSTART _check_errors
; 0001 0091 PRINT(">>>check_errors\r\n");
; 0001 0092 if(check_reset_error(error_WaterLevel, !Uroven_out)){
	LDI  R30,LOW(1)
	ST   -Y,R30
	IN   R30,0x0
	ANDI R30,LOW(0x8)
	CALL __LNEGB1
	CALL SUBOPT_0x9
	BREQ _0x20012
; 0001 0093 return;
	RET
; 0001 0094 }
; 0001 0095 if(check_reset_error(error_Overheat, t_max_out)){
_0x20012:
	LDI  R30,LOW(2)
	ST   -Y,R30
	IN   R30,0x0
	ANDI R30,LOW(0x20)
	CALL SUBOPT_0x9
	BREQ _0x20013
; 0001 0096 return;
	RET
; 0001 0097 }
; 0001 0098 if(check_reset_error(error_WaterTempError, (boiler.water_temp < WATER_TEMP_MIN)  ...
_0x20013:
	LDI  R30,LOW(9)
	ST   -Y,R30
	CALL SUBOPT_0xA
	__GETD1N 0x41880000
	CALL __CMPF12
	BRLO _0x20015
	CALL SUBOPT_0xA
	__GETD1N 0x42BE0000
	CALL __CMPF12
	BREQ PC+3
	BRCS PC+2
	RJMP _0x20015
	LDI  R30,0
	RJMP _0x20016
_0x20015:
	LDI  R30,1
_0x20016:
	CLR  R31
	CLR  R22
	CLR  R23
	MOVW R26,R30
	MOVW R24,R22
	RCALL _check_reset_error
	CPI  R30,0
	BREQ _0x20014
; 0001 0099 return;
	RET
; 0001 009A }
; 0001 009B 
; 0001 009C PRINT("switch state = %s\r\n", boiler_state_str[boiler.state]);
_0x20014:
; 0001 009D PRINT("switch start = %s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0001 009E PRINT("switch role = %s\r\n", boiler_role_str[boiler.role]);
; 0001 009F switch (boiler.state){
	__GETB1MN _boiler,55
	LDI  R31,0
; 0001 00A0 case boiler_idle:
	SBIW R30,0
	BRNE _0x2001A
; 0001 00A1 PRINT("boiler idle...\r\n");
; 0001 00A2 break;
	RJMP _0x20019
; 0001 00A3 case boiler_start_sequence:
_0x2001A:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x2001B
; 0001 00A4 PRINT("boiler boiler_start_sequence...\r\n");
; 0001 00A5 switch(boiler.role){
	CALL SUBOPT_0xB
; 0001 00A6 case role_not_selected:
	BREQ _0x2001E
; 0001 00A7 PRINT("role_not_selected...\r\n");
; 0001 00A8 break;
; 0001 00A9 case role_UK_103:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20020
; 0001 00AA PRINT("role_UK_103...\r\n");
; 0001 00AB switch (boiler.start_stage){
	CALL SUBOPT_0xC
; 0001 00AC case stage_none:
	BREQ _0x20025
; 0001 00AD case stage_blowing:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x20026
_0x20025:
; 0001 00AE PRINT("stage_none or stage_blowing...\r\n");
; 0001 00AF if(plamya_out){
	SBIS 0x0,7
	RJMP _0x20027
; 0001 00B0 boiler.error = error_FlameTest;
	LDI  R30,LOW(3)
	__PUTB1MN _boiler,59
; 0001 00B1 }
; 0001 00B2 break;
_0x20027:
; 0001 00B3 case stage_transformer_on:
_0x20026:
; 0001 00B4 break;
; 0001 00B5 default:
; 0001 00B6 
; 0001 00B7 break;
; 0001 00B8 }
; 0001 00B9 break;
	RJMP _0x2001E
; 0001 00BA case role_UK_203:
_0x20020:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x2002A
; 0001 00BB PRINT("UK_203...\r\n");
; 0001 00BC switch (boiler.start_stage){
	CALL SUBOPT_0xC
; 0001 00BD case stage_none:
	BREQ _0x2002F
; 0001 00BE case stage_blowing_test_off_check:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20030
_0x2002F:
; 0001 00BF PRINT("stge none blowing test...\r\n");
; 0001 00C0 if(clapan_out()){
	SBIS 0x0,6
	RJMP _0x20031
; 0001 00C1 PRINT("errror air test...\r\n");
; 0001 00C2 boiler.error = error_AirDetectorTest;
	LDI  R30,LOW(7)
	RJMP _0x214001E
; 0001 00C3 return;
; 0001 00C4 }
; 0001 00C5 if(Ion_out){
_0x20031:
	SBIC 0x0,4
	RJMP _0x20032
; 0001 00C6 PRINT("ion test...\r\n");
; 0001 00C7 boiler.error = error_IonTest;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,59
; 0001 00C8 }
; 0001 00C9 break;
_0x20032:
	RJMP _0x2002D
; 0001 00CA case stage_blowing_test_on_pre_check:
_0x20030:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x20033
; 0001 00CB PRINT("test on pre check...\r\n");
; 0001 00CC if(Ion_out){
	SBIC 0x0,4
	RJMP _0x20034
; 0001 00CD PRINT("ion test...\r\n");
; 0001 00CE boiler.error = error_IonTest;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,59
; 0001 00CF }
; 0001 00D0 break;
_0x20034:
	RJMP _0x2002D
; 0001 00D1 
; 0001 00D2 case stage_blowing:
_0x20033:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x20038
; 0001 00D3 PRINT("blowing...\r\n");
; 0001 00D4 if(!clapan_out()){
	SBIS 0x0,6
; 0001 00D5 boiler.error = error_AirDetectorWork;
	RJMP _0x214001D
; 0001 00D6 return;
; 0001 00D7 }
; 0001 00D8 if(Ion_out){
	SBIC 0x0,4
	RJMP _0x20037
; 0001 00D9 boiler.error = error_IonTest;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,59
; 0001 00DA }
; 0001 00DB break;
_0x20037:
; 0001 00DC default:
_0x20038:
; 0001 00DD 
; 0001 00DE break;
; 0001 00DF 
; 0001 00E0 }
_0x2002D:
; 0001 00E1 break;
; 0001 00E2 case role_UK_303:
_0x2002A:
; 0001 00E3 
; 0001 00E4 break;
; 0001 00E5 case role_LAN_master:
; 0001 00E6 
; 0001 00E7 break;
; 0001 00E8 case role_LAN_slave1:
; 0001 00E9 
; 0001 00EA break;
; 0001 00EB case role_LAN_slave2:
; 0001 00EC 
; 0001 00ED break;
; 0001 00EE 
; 0001 00EF }
_0x2001E:
; 0001 00F0 break;
	RJMP _0x20019
; 0001 00F1 case boiler_work_heating:
_0x2001B:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x2003D
; 0001 00F2 PRINT("boiler_work_heating...\r\n");
; 0001 00F3 switch(boiler.role){
	CALL SUBOPT_0xB
; 0001 00F4 case role_not_selected:
	BREQ _0x20040
; 0001 00F5 break;
; 0001 00F6 case role_UK_103:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20042
; 0001 00F7 if(!plamya_out){
	SBIC 0x0,7
	RJMP _0x20043
; 0001 00F8 PRINT("error_FlameWork...\r\n");
; 0001 00F9 boiler.error = error_FlameWork;
	LDI  R30,LOW(4)
	__PUTB1MN _boiler,59
; 0001 00FA }
; 0001 00FB break;
_0x20043:
	RJMP _0x20040
; 0001 00FC case role_UK_203:
_0x20042:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x20044
; 0001 00FD if(!clapan_out()){
	SBIS 0x0,6
; 0001 00FE boiler.error = error_AirDetectorWork;
	RJMP _0x214001D
; 0001 00FF return;
; 0001 0100 }
; 0001 0101 if(!Ion_out){
	SBIS 0x0,4
	RJMP _0x20046
; 0001 0102 boiler.error = error_IonWork;
	LDI  R30,LOW(6)
	__PUTB1MN _boiler,59
; 0001 0103 }
; 0001 0104 break;
_0x20046:
; 0001 0105 case role_UK_303:
_0x20044:
; 0001 0106 
; 0001 0107 break;
; 0001 0108 case role_LAN_master:
; 0001 0109 
; 0001 010A break;
; 0001 010B case role_LAN_slave1:
; 0001 010C 
; 0001 010D break;
; 0001 010E case role_LAN_slave2:
; 0001 010F 
; 0001 0110 break;
; 0001 0111 
; 0001 0112 }
_0x20040:
; 0001 0113 break;
	RJMP _0x20019
; 0001 0114 
; 0001 0115 case bolier_work_blowing_precheck:
_0x2003D:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ _0x20019
; 0001 0116 
; 0001 0117 break;
; 0001 0118 
; 0001 0119 case boiler_work_blowing_after_heating:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x2004C
; 0001 011A PRINT("boiler_work_blowing_after_heating...\r\n");
; 0001 011B switch(boiler.role){
	CALL SUBOPT_0xB
; 0001 011C case role_not_selected:
	BREQ _0x2004F
; 0001 011D break;
; 0001 011E case role_UK_103:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20051
; 0001 011F PRINT("error_FlameWork...\r\n");
; 0001 0120 if(plamya_out){
	SBIS 0x0,7
	RJMP _0x20052
; 0001 0121 boiler.error = error_FlameWork;
	LDI  R30,LOW(4)
	__PUTB1MN _boiler,59
; 0001 0122 }
; 0001 0123 break;
_0x20052:
	RJMP _0x2004F
; 0001 0124 case role_UK_203:
_0x20051:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x20053
; 0001 0125 if(!clapan_out()){
	SBIC 0x0,6
	RJMP _0x20054
; 0001 0126 boiler.error = error_AirDetectorWork;
_0x214001D:
	LDI  R30,LOW(8)
_0x214001E:
	__PUTB1MN _boiler,59
; 0001 0127 return;
	RET
; 0001 0128 }
; 0001 0129 if(Ion_out){
_0x20054:
	SBIC 0x0,4
	RJMP _0x20055
; 0001 012A boiler.error = error_IonWork;
	LDI  R30,LOW(6)
	__PUTB1MN _boiler,59
; 0001 012B }
; 0001 012C break;
_0x20055:
; 0001 012D case role_UK_303:
_0x20053:
; 0001 012E 
; 0001 012F break;
; 0001 0130 case role_LAN_master:
; 0001 0131 
; 0001 0132 break;
; 0001 0133 case role_LAN_slave1:
; 0001 0134 
; 0001 0135 break;
; 0001 0136 case role_LAN_slave2:
; 0001 0137 
; 0001 0138 break;
; 0001 0139 }
_0x2004F:
; 0001 013A break;
; 0001 013B 
; 0001 013C case boiler_work_cooling:
_0x2004C:
; 0001 013D 
; 0001 013E break;
; 0001 013F }
_0x20019:
; 0001 0140 PRINT("<<<check_errors\r\n");
; 0001 0141 }
	RET
; .FEND
;void boiler_update(){
; 0001 0143 void boiler_update(){
_boiler_update:
; .FSTART _boiler_update
; 0001 0144 PRINT(">>>boiler_update()\r\n");
; 0001 0145 PRINT("hadling %s\r\n", boiler_role_str[boiler.role]);
; 0001 0146 #if ERRORS_ACTIVE
; 0001 0147 check_errors();
	RCALL _check_errors
; 0001 0148 PRINT("error = %s\r\n", errors_str[boiler.error]);
; 0001 0149 #endif
; 0001 014A 
; 0001 014B 
; 0001 014C static uint32_t oneminute_counter = 0;
; 0001 014D 
; 0001 014E if(boiler.error == error_None){
	__GETB1MN _boiler,59
	CPI  R30,0
	BREQ _0x2005C
; 0001 014F }
; 0001 0150 else{
; 0001 0151 if( (boiler.error == error_WaterLevel) ||
; 0001 0152 (boiler.error == error_Overheat)  ||
; 0001 0153 (boiler.error == error_WaterTempError)){
	__GETB2MN _boiler,59
	CPI  R26,LOW(0x1)
	BREQ _0x2005E
	CPI  R26,LOW(0x2)
	BREQ _0x2005E
	CPI  R26,LOW(0x9)
	BRNE _0x2005D
_0x2005E:
; 0001 0154 }
; 0001 0155 else{//more serious errors
	RJMP _0x20060
_0x2005D:
; 0001 0156 boiler.command = boiler_idle;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,56
; 0001 0157 }
_0x20060:
; 0001 0158 boiler.state = boiler_idle;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,55
; 0001 0159 boiler.start_stage = stage_none;
	__PUTB1MN _boiler,58
; 0001 015A }
_0x2005C:
; 0001 015B 
; 0001 015C switch (boiler.state){
	__GETB1MN _boiler,55
	LDI  R31,0
; 0001 015D case boiler_idle:
	SBIW R30,0
	BRNE _0x20064
; 0001 015E //turn all off
; 0001 015F PRINT("boiler_idle...\r\n");
; 0001 0160 turnAllOff();
	RCALL _turnAllOff
; 0001 0161 if(boiler.command == boiler_work_heating){
	__GETB2MN _boiler,56
	CPI  R26,LOW(0x2)
	BRNE _0x20065
; 0001 0162 if(boiler.water_temp < boiler.water_goal_temp - boiler.gisteresis){
	CALL SUBOPT_0xD
	CALL SUBOPT_0xE
	CALL SUBOPT_0xF
	BRSH _0x20066
; 0001 0163 boiler.state = boiler_start_sequence;
	LDI  R30,LOW(1)
	__PUTB1MN _boiler,55
; 0001 0164 boiler.start_stage = stage_none;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,58
; 0001 0165 }
; 0001 0166 else{
	RJMP _0x20067
_0x20066:
; 0001 0167 boiler.state = boiler_work_cooling;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,55
; 0001 0168 }
_0x20067:
; 0001 0169 }
; 0001 016A else{
_0x20065:
; 0001 016B //keep evething off
; 0001 016C }
; 0001 016D break;
	RJMP _0x20063
; 0001 016E 
; 0001 016F case boiler_start_sequence:
_0x20064:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x20069
; 0001 0170 PRINT("boiler_start_sequence...\r\n");
; 0001 0171 if(boiler.command == boiler_work_heating){
	__GETB2MN _boiler,56
	CPI  R26,LOW(0x2)
	BREQ PC+2
	RJMP _0x2006A
; 0001 0172 if(boiler.water_temp < boiler.water_goal_temp){
	CALL SUBOPT_0xA
	CALL SUBOPT_0xD
	CALL SUBOPT_0xF
	BRLO PC+2
	RJMP _0x2006B
; 0001 0173 PRINT("water temp < goal...\r\n");
; 0001 0174 //ignition sequence
; 0001 0175 switch(boiler.role){
	CALL SUBOPT_0xB
; 0001 0176 case role_not_selected:
	BRNE _0x2006F
; 0001 0177 PRINT("role_not_selected...\r\n");
; 0001 0178 boiler.state = boiler_work_heating;
	LDI  R30,LOW(2)
	__PUTB1MN _boiler,55
; 0001 0179 break;
	RJMP _0x2006E
; 0001 017A case role_UK_103:
_0x2006F:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20070
; 0001 017B PRINT("role_UK_103...\r\n");
; 0001 017C switch(boiler.start_stage){
	CALL SUBOPT_0xC
; 0001 017D case stage_none:
	BRNE _0x20074
; 0001 017E PRINT("stage_none...\r\n");
; 0001 017F boiler.time_of_last_stage = GetTick_ms();
	CALL SUBOPT_0x10
; 0001 0180 boiler.start_stage = stage_blowing;
	LDI  R30,LOW(3)
	__PUTB1MN _boiler,58
; 0001 0181 Ventilaytor_ON;
	SBI  0x12,3
; 0001 0182 break;
	RJMP _0x20073
; 0001 0183 case stage_blowing:
_0x20074:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x20075
; 0001 0184 PRINT("stage_blowing...\r\n");
; 0001 0185 if(GetTick_ms() - boiler.time_of_last_stage > 20000){
	CALL SUBOPT_0x11
	CALL SUBOPT_0x12
	BRLO _0x20076
; 0001 0186 TransRozgiga_ON;
	SBI  0x12,2
; 0001 0187 Topl_Nasos_ON;
	SBI  0x12,4
; 0001 0188 boiler.start_stage = stage_transformer_on;
	LDI  R30,LOW(4)
	CALL SUBOPT_0x13
; 0001 0189 boiler.time_of_last_stage = GetTick_ms();
; 0001 018A }
; 0001 018B break;
_0x20076:
	RJMP _0x20073
; 0001 018C case stage_transformer_on:
_0x20075:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x20073
; 0001 018D PRINT("stage_transformer_on...\r\n");
; 0001 018E if(GetTick_ms() - boiler.time_of_last_stage < 3000){
	CALL SUBOPT_0x11
	CALL SUBOPT_0x14
	BRSH _0x20078
; 0001 018F #if ERRORS_ACTIVE
; 0001 0190 if(plamya_out){
	SBIS 0x0,7
	RJMP _0x20079
; 0001 0191 #endif
; 0001 0192 TransRozgiga_OFF;
	CALL SUBOPT_0x15
; 0001 0193 boiler.start_stage = stage_none;
; 0001 0194 boiler.state = boiler_work_heating;
; 0001 0195 boiler.time_of_last_stage = GetTick_ms();
; 0001 0196 #if ERRORS_ACTIVE
; 0001 0197 }
; 0001 0198 #endif
; 0001 0199 }
_0x20079:
; 0001 019A else{
	RJMP _0x2007A
_0x20078:
; 0001 019B PRINT("error_FlameWork...\r\n");
; 0001 019C boiler.error = error_FlameWork;
	LDI  R30,LOW(4)
	__PUTB1MN _boiler,59
; 0001 019D }
_0x2007A:
; 0001 019E break;
; 0001 019F }
_0x20073:
; 0001 01A0 break;
	RJMP _0x2006E
; 0001 01A1 
; 0001 01A2 case role_UK_203:
_0x20070:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x2007B
; 0001 01A3 switch(boiler.start_stage){
	CALL SUBOPT_0xC
; 0001 01A4 case stage_none:
	BRNE _0x2007F
; 0001 01A5 boiler.time_of_last_stage = GetTick_ms();
	CALL SUBOPT_0x10
; 0001 01A6 boiler.start_stage = stage_blowing_test_off_check;
	LDI  R30,LOW(1)
	__PUTB1MN _boiler,58
; 0001 01A7 break;
	RJMP _0x2007E
; 0001 01A8 
; 0001 01A9 case stage_blowing_test_off_check:
_0x2007F:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20080
; 0001 01AA if(GetTick_ms() - boiler.time_of_last_stage > 300){
	CALL SUBOPT_0x11
	__CPD2N 0x12D
	BRLO _0x20081
; 0001 01AB boiler.start_stage = stage_blowing_test_on_pre_check;
	LDI  R30,LOW(2)
	__PUTB1MN _boiler,58
; 0001 01AC Ventilaytor_ON;
	SBI  0x12,3
; 0001 01AD boiler.time_of_last_stage = GetTick_ms();
	CALL SUBOPT_0x10
; 0001 01AE }
; 0001 01AF break;
_0x20081:
	RJMP _0x2007E
; 0001 01B0 case stage_blowing_test_on_pre_check:
_0x20080:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x20082
; 0001 01B1 if(GetTick_ms() - boiler.time_of_last_stage > 5000){
	CALL SUBOPT_0x11
	__CPD2N 0x1389
	BRLO _0x20083
; 0001 01B2 boiler.start_stage = stage_blowing;
	LDI  R30,LOW(3)
	CALL SUBOPT_0x13
; 0001 01B3 boiler.time_of_last_stage = GetTick_ms();
; 0001 01B4 }
; 0001 01B5 break;
_0x20083:
	RJMP _0x2007E
; 0001 01B6 case stage_blowing:
_0x20082:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x20084
; 0001 01B7 if(GetTick_ms() - boiler.time_of_last_stage > 20000){
	CALL SUBOPT_0x11
	CALL SUBOPT_0x12
	BRLO _0x20085
; 0001 01B8 TransRozgiga_ON;
	SBI  0x12,2
; 0001 01B9 Klapan1_ON;
	SBI  0x12,6
; 0001 01BA boiler.start_stage = stage_transformer_on;
	LDI  R30,LOW(4)
	CALL SUBOPT_0x13
; 0001 01BB boiler.time_of_last_stage = GetTick_ms();
; 0001 01BC }
; 0001 01BD break;
_0x20085:
	RJMP _0x2007E
; 0001 01BE case stage_transformer_on:
_0x20084:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x2007E
; 0001 01BF if(GetTick_ms() - boiler.time_of_last_stage < 3000){
	CALL SUBOPT_0x11
	CALL SUBOPT_0x14
	BRSH _0x20087
; 0001 01C0 #if ERRORS_ACTIVE
; 0001 01C1 if(!clapan_out()){
	SBIC 0x0,6
	RJMP _0x20088
; 0001 01C2 boiler.error = error_AirDetectorWork;
	LDI  R30,LOW(8)
	__PUTB1MN _boiler,59
; 0001 01C3 }
; 0001 01C4 if(Ion_out){
_0x20088:
	SBIC 0x0,4
	RJMP _0x20089
; 0001 01C5 #endif
; 0001 01C6 TransRozgiga_OFF;
	CALL SUBOPT_0x15
; 0001 01C7 boiler.start_stage = stage_none;
; 0001 01C8 boiler.state = boiler_work_heating;
; 0001 01C9 boiler.time_of_last_stage = GetTick_ms();
; 0001 01CA #if ERRORS_ACTIVE
; 0001 01CB }
; 0001 01CC #endif
; 0001 01CD }
_0x20089:
; 0001 01CE else{
	RJMP _0x2008A
_0x20087:
; 0001 01CF boiler.error = error_IonWork;
	LDI  R30,LOW(6)
	__PUTB1MN _boiler,59
; 0001 01D0 }
_0x2008A:
; 0001 01D1 break;
; 0001 01D2 }
_0x2007E:
; 0001 01D3 break;
	RJMP _0x2006E
; 0001 01D4 
; 0001 01D5 case role_UK_303:
_0x2007B:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x2008B
; 0001 01D6 Klapan2_ON;
	SBI  0x12,7
; 0001 01D7 boiler.time_of_last_stage = GetTick_ms();
	CALL SUBOPT_0x10
; 0001 01D8 boiler.state = boiler_work_heating;
	LDI  R30,LOW(2)
	__PUTB1MN _boiler,55
; 0001 01D9 break;
; 0001 01DA 
; 0001 01DB case role_LAN_master:
_0x2008B:
; 0001 01DC 
; 0001 01DD break;
; 0001 01DE 
; 0001 01DF case role_LAN_slave1:
; 0001 01E0 
; 0001 01E1 break;
; 0001 01E2 
; 0001 01E3 case role_LAN_slave2:
; 0001 01E4 
; 0001 01E5 break;
; 0001 01E6 }
_0x2006E:
; 0001 01E7 
; 0001 01E8 
; 0001 01E9 }
; 0001 01EA else{
	RJMP _0x2008F
_0x2006B:
; 0001 01EB boiler.state = boiler_work_cooling;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,55
; 0001 01EC }
_0x2008F:
; 0001 01ED 
; 0001 01EE }
; 0001 01EF else{
	RJMP _0x20090
_0x2006A:
; 0001 01F0 //all off
; 0001 01F1 boiler.state = boiler_idle;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,55
; 0001 01F2 }
_0x20090:
; 0001 01F3 break;
	RJMP _0x20063
; 0001 01F4 
; 0001 01F5 case boiler_work_heating:
_0x20069:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x20091
; 0001 01F6 PRINT("boiler_work_heating...\r\n");
; 0001 01F7 switch (boiler.role){
	CALL SUBOPT_0xB
; 0001 01F8 case role_not_selected:
	BREQ _0x20096
; 0001 01F9 case role_UK_103:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x20097
_0x20096:
; 0001 01FA case role_UK_203:
	RJMP _0x20098
_0x20097:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x20099
_0x20098:
; 0001 01FB case role_LAN_master:
	RJMP _0x2009A
_0x20099:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x2009B
_0x2009A:
; 0001 01FC case role_LAN_slave1:
	RJMP _0x2009C
_0x2009B:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x2009D
_0x2009C:
; 0001 01FD case role_LAN_slave2:
	RJMP _0x2009E
_0x2009D:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x2009F
_0x2009E:
; 0001 01FE if(boiler.command == boiler_work_heating){
	__GETB2MN _boiler,56
	CPI  R26,LOW(0x2)
	BRNE _0x200A0
; 0001 01FF if(boiler.water_temp < boiler.water_goal_temp){
	CALL SUBOPT_0xA
	CALL SUBOPT_0xD
	CALL SUBOPT_0xF
	BRLO _0x200A2
; 0001 0200 }
; 0001 0201 else{
; 0001 0202 boiler.state = bolier_work_blowing_precheck;
	LDI  R30,LOW(3)
	CALL SUBOPT_0x16
; 0001 0203 boiler.time_of_last_stage = GetTick_ms();
; 0001 0204 oneminute_counter = 0;
	CALL SUBOPT_0x17
; 0001 0205 }
_0x200A2:
; 0001 0206 }
; 0001 0207 else{
	RJMP _0x200A3
_0x200A0:
; 0001 0208 //all off
; 0001 0209 boiler.state = bolier_work_blowing_precheck;
	LDI  R30,LOW(3)
	CALL SUBOPT_0x16
; 0001 020A boiler.time_of_last_stage = GetTick_ms();
; 0001 020B oneminute_counter = 0;
	CALL SUBOPT_0x17
; 0001 020C }
_0x200A3:
; 0001 020D 
; 0001 020E break;
	RJMP _0x20094
; 0001 020F case role_UK_303:
_0x2009F:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x20094
; 0001 0210 if(boiler.command == boiler_work_heating){
	__GETB2MN _boiler,56
	CPI  R26,LOW(0x2)
	BRNE _0x200A5
; 0001 0211 if(boiler.water_temp < boiler.water_goal_temp){
	CALL SUBOPT_0xA
	CALL SUBOPT_0xD
	CALL SUBOPT_0xF
	BRLO _0x200A7
; 0001 0212 }
; 0001 0213 else{
; 0001 0214 boiler.state = boiler_work_cooling;
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,55
; 0001 0215 }
_0x200A7:
; 0001 0216 }
; 0001 0217 else{
	RJMP _0x200A8
_0x200A5:
; 0001 0218 //all off
; 0001 0219 boiler.state = boiler_idle;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,55
; 0001 021A }
_0x200A8:
; 0001 021B break;
; 0001 021C }
_0x20094:
; 0001 021D break;
	RJMP _0x20063
; 0001 021E 
; 0001 021F case bolier_work_blowing_precheck:
_0x20091:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x200A9
; 0001 0220 switch (boiler.role){
	CALL SUBOPT_0xB
; 0001 0221 case role_not_selected:
	BREQ _0x200AE
; 0001 0222 case role_UK_103:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x200AF
_0x200AE:
; 0001 0223 case role_UK_203:
	RJMP _0x200B0
_0x200AF:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x200B1
_0x200B0:
; 0001 0224 case role_LAN_master:
	RJMP _0x200B2
_0x200B1:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x200B3
_0x200B2:
; 0001 0225 case role_LAN_slave1:
	RJMP _0x200B4
_0x200B3:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x200B5
_0x200B4:
; 0001 0226 case role_LAN_slave2:
	RJMP _0x200B6
_0x200B5:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x200B7
_0x200B6:
; 0001 0227 TransRozgiga_OFF;
	CALL SUBOPT_0x18
; 0001 0228 Topl_Nasos_OFF;
; 0001 0229 Klapan1_OFF;
; 0001 022A Klapan2_OFF;
; 0001 022B if(GetTick_ms() - boiler.time_of_last_stage > 3000){
	CALL SUBOPT_0x19
	BRLO _0x200B8
; 0001 022C boiler.state = boiler_work_blowing_after_heating;
	LDI  R30,LOW(4)
	CALL SUBOPT_0x16
; 0001 022D boiler.time_of_last_stage = GetTick_ms();
; 0001 022E oneminute_counter = 0;
	CALL SUBOPT_0x17
; 0001 022F }
; 0001 0230 break;
_0x200B8:
; 0001 0231 case role_UK_303:
_0x200B7:
; 0001 0232 break;
; 0001 0233 }
; 0001 0234 break;
	RJMP _0x20063
; 0001 0235 break;
; 0001 0236 
; 0001 0237 case boiler_work_blowing_after_heating:
_0x200A9:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x200BA
; 0001 0238 
; 0001 0239 //this stage does not react to command, leaving the rest to boiler_work_cooling  ...
; 0001 023A TransRozgiga_OFF;
	CALL SUBOPT_0x18
; 0001 023B Topl_Nasos_OFF;
; 0001 023C Klapan1_OFF;
; 0001 023D Klapan2_OFF;
; 0001 023E if(GetTick_ms() - boiler.time_of_last_stage > 60000){//limitations of 16bit max
	__CPD2N 0xEA61
	BRLO _0x200BB
; 0001 023F boiler.time_of_last_stage = GetTick_ms();
	CALL SUBOPT_0x10
; 0001 0240 //oneminute_counter++;
; 0001 0241 //if(oneminute_counter == 3){//3*20000ms=60 sec
; 0001 0242 boiler.state = boiler_work_cooling;//will turn off completely on the next round
	LDI  R30,LOW(5)
	__PUTB1MN _boiler,55
; 0001 0243 //    oneminute_counter = 0;
; 0001 0244 //}
; 0001 0245 }
; 0001 0246 break;
_0x200BB:
	RJMP _0x20063
; 0001 0247 
; 0001 0248 case boiler_work_cooling:
_0x200BA:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x20063
; 0001 0249 turnAllOff();
	RCALL _turnAllOff
; 0001 024A if(boiler.command == boiler_work_heating){
	__GETB2MN _boiler,56
	CPI  R26,LOW(0x2)
	BRNE _0x200BD
; 0001 024B if(boiler.water_temp < boiler.water_goal_temp - boiler.gisteresis){
	CALL SUBOPT_0xD
	CALL SUBOPT_0xE
	CALL SUBOPT_0xF
	BRSH _0x200BE
; 0001 024C boiler.state = boiler_start_sequence;
	LDI  R30,LOW(1)
	__PUTB1MN _boiler,55
; 0001 024D }
; 0001 024E else{
_0x200BE:
; 0001 024F //all off
; 0001 0250 }
; 0001 0251 }
; 0001 0252 else{
	RJMP _0x200C0
_0x200BD:
; 0001 0253 //all off
; 0001 0254 boiler.state = boiler_idle;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,55
; 0001 0255 }
_0x200C0:
; 0001 0256 break;
; 0001 0257 }
_0x20063:
; 0001 0258 PRINT("error = %s\r\n", errors_str[boiler.error]);
; 0001 0259 PRINT("<<<boiler_update()\r\n");
; 0001 025A }
	RET
; .FEND
;void boiler_start(void){
; 0001 025C void boiler_start(void){
_boiler_start:
; .FSTART _boiler_start
; 0001 025D if(boiler.state == boiler_idle){
	__GETB1MN _boiler,55
	CPI  R30,0
	BRNE _0x200C1
; 0001 025E boiler.error =  error_None;
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,59
; 0001 025F }
; 0001 0260 boiler.command = boiler_work_heating;
_0x200C1:
	LDI  R30,LOW(2)
	RJMP _0x214001C
; 0001 0261 }
; .FEND
;void boiler_stop(void){
; 0001 0263 void boiler_stop(void){
_boiler_stop:
; .FSTART _boiler_stop
; 0001 0264 boiler.command = boiler_idle;
	LDI  R30,LOW(0)
_0x214001C:
	__PUTB1MN _boiler,56
; 0001 0265 }
	RET
; .FEND
;void boiler_toggle(void){
; 0001 0267 void boiler_toggle(void){
_boiler_toggle:
; .FSTART _boiler_toggle
; 0001 0268 if(boiler.command == boiler_idle){
	__GETB1MN _boiler,56
	CPI  R30,0
	BRNE _0x200C2
; 0001 0269 boiler_start();
	RCALL _boiler_start
; 0001 026A }
; 0001 026B else{
	RJMP _0x200C3
_0x200C2:
; 0001 026C boiler_stop();
	RCALL _boiler_stop
; 0001 026D }
_0x200C3:
; 0001 026E }
	RET
; .FEND
;void boiler_update_nvm(void){
; 0001 0270 void boiler_update_nvm(void){
_boiler_update_nvm:
; .FSTART _boiler_update_nvm
; 0001 0271 //PRINT("===>>>boiler_update_nvm\r\n");
; 0001 0272 if( (boiler.command         != nvm_cache.command         )||
; 0001 0273 (boiler.water_goal_temp != nvm_cache.water_goal_temp )||
; 0001 0274 (boiler.gisteresis      != nvm_cache.gisteresis      )||
; 0001 0275 (boiler.weather         != nvm_cache.weather         )||
; 0001 0276 (boiler.role            != nvm_cache.role            )){
	__GETB2MN _boiler,56
	__GETB1MN _nvm_cache,10
	CP   R30,R26
	BRNE _0x200C5
	__GETW2MN _boiler,44
	LDS  R30,_nvm_cache
	LDS  R31,_nvm_cache+1
	CP   R30,R26
	CPC  R31,R27
	BRNE _0x200C5
	__GETW2MN _boiler,42
	__GETW1MN _nvm_cache,2
	CP   R30,R26
	CPC  R31,R27
	BRNE _0x200C5
	__GETB2MN _boiler,54
	__GETB1MN _nvm_cache,8
	CP   R30,R26
	BRNE _0x200C5
	__GETB2MN _boiler,57
	__GETB1MN _nvm_cache,9
	CP   R30,R26
	BREQ _0x200C4
_0x200C5:
; 0001 0277 //PRINT("=======WRITING EEPROM!!!=========\r\n");
; 0001 0278 nvm_cache.command         = boiler.command         ;
	__GETB1MN _boiler,56
	__PUTB1MN _nvm_cache,10
; 0001 0279 nvm_cache.water_goal_temp = boiler.water_goal_temp ;
	CALL SUBOPT_0xD
	STS  _nvm_cache,R30
	STS  _nvm_cache+1,R31
; 0001 027A nvm_cache.gisteresis      = boiler.gisteresis      ;
	__GETW1MN _boiler,42
	__PUTW1MN _nvm_cache,2
; 0001 027B nvm_cache.weather         = boiler.weather         ;
	__GETB1MN _boiler,54
	__PUTB1MN _nvm_cache,8
; 0001 027C nvm_cache.role            = boiler.role            ;
	__GETB1MN _boiler,57
	__PUTB1MN _nvm_cache,9
; 0001 027D eeprom_write_block(&nvm_cache, &eeinit_data, sizeof(nvm_data_t));
	LDI  R30,LOW(_nvm_cache)
	LDI  R31,HIGH(_nvm_cache)
	CALL SUBOPT_0x5
; 0001 027E //delay_ms(1000);
; 0001 027F }
; 0001 0280 //PRINT("===<<<boiler_update_nvm\r\n");
; 0001 0281 }
_0x200C4:
	RET
; .FEND
;void boiler_update_pump(void){//circulyacionny nasos
; 0001 0283 void boiler_update_pump(void){
_boiler_update_pump:
; .FSTART _boiler_update_pump
; 0001 0284 switch (boiler.weather){
	__GETB1MN _boiler,54
	LDI  R31,0
; 0001 0285 case weather_none:
	SBIW R30,0
	BREQ _0x200CB
; 0001 0286 case weather_summer:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x200CC
_0x200CB:
; 0001 0287 if(boiler.error && (boiler.error != error_WaterLevel)){
	__GETB1MN _boiler,59
	CPI  R30,0
	BREQ _0x200CE
	__GETB2MN _boiler,59
	CPI  R26,LOW(0x1)
	BRNE _0x200CF
_0x200CE:
	RJMP _0x200CD
_0x200CF:
; 0001 0288 Setevoi_nasos_ON;
	SBI  0x12,5
; 0001 0289 }
; 0001 028A else{
	RJMP _0x200D0
_0x200CD:
; 0001 028B Setevoi_nasos_OFF;
	CBI  0x12,5
; 0001 028C }
_0x200D0:
; 0001 028D break;
	RJMP _0x200C9
; 0001 028E case weather_winter:
_0x200CC:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x200C9
; 0001 028F if(boiler.error){
	__GETB1MN _boiler,59
	CPI  R30,0
	BREQ _0x200D2
; 0001 0290 Setevoi_nasos_ON;
	SBI  0x12,5
; 0001 0291 }
; 0001 0292 else{//handle temperature, gisteresis
	RJMP _0x200D3
_0x200D2:
; 0001 0293 int16_t pump_on_diff = (boiler.gisteresis > boiler.water_pump_on_temp) ? \
; 0001 0294 boiler.gisteresis : boiler.water_pump_on_temp;
; 0001 0295 if(boiler.water_temp > (boiler.water_goal_temp - \
; 0001 0296 pump_on_diff)){
	SBIW R28,2
;	pump_on_diff -> Y+0
	__GETW2MN _boiler,42
	__GETW1MN _boiler,46
	CP   R30,R26
	CPC  R31,R27
	BRGE _0x200D4
	__GETW1MN _boiler,42
	RJMP _0x200D5
_0x200D4:
	__GETW1MN _boiler,46
_0x200D5:
	ST   Y,R30
	STD  Y+1,R31
	CALL SUBOPT_0xD
	LD   R26,Y
	LDD  R27,Y+1
	SUB  R30,R26
	SBC  R31,R27
	CALL SUBOPT_0xA
	CALL SUBOPT_0xF
	BREQ PC+2
	BRCC PC+2
	RJMP _0x200D7
; 0001 0297 Setevoi_nasos_ON;
	SBI  0x12,5
; 0001 0298 }
; 0001 0299 if(boiler.water_temp < (boiler.water_goal_temp - \
; 0001 029A pump_on_diff - \
; 0001 029B boiler.water_pump_gist_temp)){
_0x200D7:
	CALL SUBOPT_0xD
	LD   R26,Y
	LDD  R27,Y+1
	SUB  R30,R26
	SBC  R31,R27
	__GETW2MN _boiler,48
	SUB  R30,R26
	SBC  R31,R27
	CALL SUBOPT_0xA
	CALL SUBOPT_0xF
	BRSH _0x200D8
; 0001 029C Setevoi_nasos_OFF;
	CBI  0x12,5
; 0001 029D }
; 0001 029E }
_0x200D8:
	ADIW R28,2
_0x200D3:
; 0001 029F break;
; 0001 02A0 }
_0x200C9:
; 0001 02A1 }
	RET
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;	flags -> R17

	.DSEG
; 0002 0046 {

	.CSEG
; 0002 0047 return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
;	x -> Y+16
;	in_min -> Y+12
;	in_max -> Y+8
;	out_min -> Y+4
;	out_max -> Y+0
; 0002 0048 }
; 0002 004D {
_ADC_Init:
; .FSTART _ADC_Init
; 0002 004E ADCSRA |= (1<<ADEN)
; 0002 004F |(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
	IN   R30,0x6
	ORI  R30,LOW(0x87)
	OUT  0x6,R30
; 0002 0050 }
	RET
; .FEND
; 0002 0057 void GetDirect(void){
; 0002 0058 ADMUX = 1;
; 0002 0059 ADCSRA |= (1<<ADSC);
; 0002 005A while((ADCSRA & (1<<ADSC)));
; 0002 005B DirectADC = ADCW;
; 0002 005C DirectVolt = boiler.K_adc * DirectADC;
; 0002 005D // ADMUX &=~(1);
; 0002 005E ADCSRA &=~(1<<ADSC);
; 0002 005F }
; 0002 0062 void GetRef(void){
_GetRef:
; .FSTART _GetRef
; 0002 0063 ADMUX = 0;
	LDI  R30,LOW(0)
	OUT  0x7,R30
; 0002 0064 ADCSRA |= (1<<ADSC);
	SBI  0x6,6
; 0002 0065 while((ADCSRA & (1<<ADSC)));
_0x40010:
	SBIC 0x6,6
	RJMP _0x40010
; 0002 0066 boiler.vref_adc = ADCW;
	IN   R30,0x4
	IN   R31,0x4+1
	STS  _boiler,R30
	STS  _boiler+1,R31
; 0002 0067 boiler.K_adc = 2.050 / boiler.vref_adc;
	CALL SUBOPT_0x1A
	__GETD2N 0x40033333
	CALL SUBOPT_0x7
; 0002 0068 boiler.vdd = boiler.K_adc *1023.0;
	__GETD2MN _boiler,38
	__GETD1N 0x447FC000
	CALL __MULF12
	CALL SUBOPT_0x6
; 0002 0069 ADCSRA &=~(1<<ADSC);
	CBI  0x6,6
; 0002 006A }
	RET
; .FEND
; 0002 006D float adc2voltageApprox(float vdd, uint16_t adc, float k1, float k2, float b1, float b2, float c){
_adc2voltageApprox:
; .FSTART _adc2voltageApprox
; 0002 006E return  vdd*(vdd*(k1*adc+k2)+b1*adc+b2) + c;
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
	__GETWRS 16,17,22
;	vdd -> Y+24
;	adc -> R16,R17
;	k1 -> Y+18
;	k2 -> Y+14
;	b1 -> Y+10
;	b2 -> Y+6
;	c -> Y+2
	MOVW R30,R16
	__GETD2S 18
	CALL SUBOPT_0x1A
	CALL __MULF12
	__GETD2S 14
	CALL SUBOPT_0x1B
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	MOVW R30,R16
	CALL SUBOPT_0x1C
	CALL SUBOPT_0x1A
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	CALL SUBOPT_0x1D
	CALL SUBOPT_0x1B
	__GETD2S 2
	CALL __ADDF12
	LDD  R17,Y+1
	LDD  R16,Y+0
	JMP  _0x214001A
; 0002 006F }
; .FEND
; 0002 0072 {
_SendAirTemp:
; .FSTART _SendAirTemp
; 0002 0073 float logR;
; 0002 0074 ADMUX = 1;
	SBIW R28,4
;	logR -> Y+0
	LDI  R30,LOW(1)
	OUT  0x7,R30
; 0002 0075 ADCSRA |= (1<<ADSC);
	SBI  0x6,6
; 0002 0076 while((ADCSRA & (1<<ADSC)));
_0x40013:
	SBIC 0x6,6
	RJMP _0x40013
; 0002 0077 boiler.air_temp_adc = ADCW;
	IN   R30,0x4
	IN   R31,0x4+1
	__PUTW1MN _boiler,2
; 0002 0078 boiler.air_voltage =adc2voltageApprox(boiler.vdd, boiler.air_temp_adc, air_k1, a ...
	CALL SUBOPT_0x1E
	__GETW1MN _boiler,2
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_air_k1
	LDS  R31,_air_k1+1
	LDS  R22,_air_k1+2
	LDS  R23,_air_k1+3
	CALL __PUTPARD1
	LDS  R30,_air_k2
	LDS  R31,_air_k2+1
	LDS  R22,_air_k2+2
	LDS  R23,_air_k2+3
	CALL __PUTPARD1
	LDS  R30,_air_b1
	LDS  R31,_air_b1+1
	LDS  R22,_air_b1+2
	LDS  R23,_air_b1+3
	CALL __PUTPARD1
	LDS  R30,_air_b2
	LDS  R31,_air_b2+1
	LDS  R22,_air_b2+2
	LDS  R23,_air_b2+3
	CALL __PUTPARD1
	LDS  R26,_air_c
	LDS  R27,_air_c+1
	LDS  R24,_air_c+2
	LDS  R25,_air_c+3
	RCALL _adc2voltageApprox
	__PUTD1MN _boiler,30
; 0002 0079 boiler.air_resistance = (R_S_air + R_GND_air)*( boiler.vdd / boiler.air_voltage  ...
	CALL SUBOPT_0x1F
	__GETD1MN _boiler,30
	CALL SUBOPT_0x20
	__GETD2N 0x49421780
	CALL __MULF12
	__PUTD1MN _boiler,22
; 0002 007A logR = log(boiler.air_resistance);
	__GETD2MN _boiler,22
	CALL SUBOPT_0x21
; 0002 007B boiler.air_temp = 1/(A_coef + logR*(B_coef+C_coef*logR*logR))+t_correction + T0K ...
	__PUTD1MN _boiler,14
; 0002 007C ADCSRA &=~(1<<ADSC);
	CBI  0x6,6
; 0002 007D }
	RJMP _0x214001B
; .FEND
; 0002 0083 {
_SendWaterTemp:
; .FSTART _SendWaterTemp
; 0002 0084 float logR;
; 0002 0085 ADMUX = 2;
	SBIW R28,4
;	logR -> Y+0
	LDI  R30,LOW(2)
	OUT  0x7,R30
; 0002 0086 ADCSRA |= (1<<ADSC);
	SBI  0x6,6
; 0002 0087 while((ADCSRA & (1<<ADSC)));
_0x40016:
	SBIC 0x6,6
	RJMP _0x40016
; 0002 0088 boiler.water_temp_adc = ADCW;
	IN   R30,0x4
	IN   R31,0x4+1
	__PUTW1MN _boiler,4
; 0002 0089 boiler.water_voltage =adc2voltageApprox(boiler.vdd, boiler.water_temp_adc, water ...
	CALL SUBOPT_0x1E
	__GETW1MN _boiler,4
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_water_k1
	LDS  R31,_water_k1+1
	LDS  R22,_water_k1+2
	LDS  R23,_water_k1+3
	CALL __PUTPARD1
	LDS  R30,_water_k2
	LDS  R31,_water_k2+1
	LDS  R22,_water_k2+2
	LDS  R23,_water_k2+3
	CALL __PUTPARD1
	LDS  R30,_water_b1
	LDS  R31,_water_b1+1
	LDS  R22,_water_b1+2
	LDS  R23,_water_b1+3
	CALL __PUTPARD1
	LDS  R30,_water_b2
	LDS  R31,_water_b2+1
	LDS  R22,_water_b2+2
	LDS  R23,_water_b2+3
	CALL __PUTPARD1
	LDS  R26,_water_c
	LDS  R27,_water_c+1
	LDS  R24,_water_c+2
	LDS  R25,_water_c+3
	RCALL _adc2voltageApprox
	__PUTD1MN _boiler,34
; 0002 008A boiler.water_resistance = (R_S_water + R_GND_water)*( boiler.vdd / boiler.water_ ...
	CALL SUBOPT_0x1F
	__GETD1MN _boiler,34
	CALL SUBOPT_0x20
	__GETD2N 0x46C2A090
	CALL __MULF12
	__PUTD1MN _boiler,26
; 0002 008B logR = log(boiler.water_resistance);
	__GETD2MN _boiler,26
	CALL SUBOPT_0x21
; 0002 008C boiler.water_temp = 1/(A_coef + logR*(B_coef+C_coef*logR*logR))+t_correction + T ...
	__PUTD1MN _boiler,18
; 0002 008D ADCSRA &=~(1<<ADSC);
	CBI  0x6,6
; 0002 008E }
	RJMP _0x214001B
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
; 0004 000F void setActivePage(void* data, type_tip none){

	.CSEG
_setActivePage:
; .FSTART _setActivePage
; 0004 0010 (void)none;
	CALL SUBOPT_0x22
;	*data -> R18,R19
;	none -> R17
; 0004 0011 activePage = (menuPage_t*)data;
	MOVW R6,R18
; 0004 0012 activePage->selectedIndex = activePage->activeIndex;
	MOVW R26,R6
	ADIW R26,10
	CALL __GETD1P_INC
	__PUTD1RNS 6,6
; 0004 0013 }
	CALL __LOADLOCR4
	ADIW R28,6
	RET
; .FEND
; 0004 0015 int str_length(char str[]) {
_str_length:
; .FSTART _str_length
; 0004 0016 int count;
; 0004 0017 for (count = 0; str[count] != '\0'; ++count);
	CALL __SAVELOCR4
	MOVW R18,R26
;	str -> R18,R19
;	count -> R16,R17
	__GETWRN 16,17,0
_0x80004:
	MOVW R30,R16
	ADD  R30,R18
	ADC  R31,R19
	LD   R30,Z
	CPI  R30,0
	BREQ _0x80005
	__ADDWRN 16,17,1
	RJMP _0x80004
_0x80005:
; 0004 0018 return count*6;
	MOVW R30,R16
	LDI  R26,LOW(6)
	LDI  R27,HIGH(6)
	CALL __MULW12
	CALL __LOADLOCR4
	RJMP _0x214001B
; 0004 0019 }
; .FEND
; 0004 001B void dataAssign(entry_t *entry){
_dataAssign:
; .FSTART _dataAssign
; 0004 001C void* data = entry->data.v;
; 0004 001D switch (entry->type){
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	*entry -> Y+2
;	*data -> R16,R17
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,10
	CALL __GETW1P
	MOVW R16,R30
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	LDD  R30,Z+26
	LDI  R31,0
; 0004 001E case void_e:
	SBIW R30,0
	BRNE _0x80009
; 0004 001F break;
	RJMP _0x80008
; 0004 0020 case char_e:
_0x80009:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x8000A
; 0004 0021 entry->prev_data.ch = *((char*)data);
	CALL SUBOPT_0x23
; 0004 0022 break;
	RJMP _0x80008
; 0004 0023 case int8_t_e:
_0x8000A:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x8000B
; 0004 0024 entry->prev_data.i8 = *((int8_t*)data);
	CALL SUBOPT_0x23
; 0004 0025 //glcd_printf(" %3d", *((int8_t*)data));
; 0004 0026 break;
	RJMP _0x80008
; 0004 0027 case int16_t_e:
_0x8000B:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x8000C
; 0004 0028 entry->prev_data.i16 = *((int16_t*)data);
	MOVW R26,R16
	RJMP _0x80095
; 0004 0029 //glcd_printf(" %3d", *((int16_t*)data));
; 0004 002A break;
; 0004 002B case int32_t_e:
_0x8000C:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x8000D
; 0004 002C entry->prev_data.i32 = *((int32_t*)data);
	CALL SUBOPT_0x24
; 0004 002D //glcd_printf(" %3d", *((int32_t*)data));
; 0004 002E break;
	RJMP _0x80008
; 0004 002F case uint8_t_e:
_0x8000D:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x8000E
; 0004 0030 if(entry->useStrStorage){
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	CALL SUBOPT_0x25
	BRNE _0x80010
; 0004 0031 PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
; 0004 0032 PRINT("pointer = %d\r\n", *(entry->data.u8));
; 0004 0033 //entry->str_storage = entry->str_storage[*entry->data.u8];
; 0004 0034 //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
; 0004 0035 }
; 0004 0036 else{
; 0004 0037 entry->prev_data.u8 = *entry->data.u8;
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X
	__PUTB1SNS 2,12
; 0004 0038 //glcd_printf(" %3d", *entry->data.u8);
; 0004 0039 }
_0x80010:
; 0004 003A break;
	RJMP _0x80008
; 0004 003B case uint16_t_e:
_0x8000E:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x80011
; 0004 003C entry->prev_data.u16 = *((uint16_t*)data);
	MOVW R26,R16
	RJMP _0x80095
; 0004 003D //glcd_printf(" %3d", *((uint16_t*)data));
; 0004 003E break;
; 0004 003F case uint32_t_e:
_0x80011:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BRNE _0x80012
; 0004 0040 entry->prev_data.u32 =*((uint32_t*)data);
	CALL SUBOPT_0x24
; 0004 0041 //glcd_printf(" %3d", *((uint32_t*)data));
; 0004 0042 break;
	RJMP _0x80008
; 0004 0043 case float_e:
_0x80012:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0x80013
; 0004 0044 entry->prev_data.f = *((float*)data);
	CALL SUBOPT_0x24
; 0004 0045 // glcd_printf(" %3.0f", *((float*)data));
; 0004 0046 break;
	RJMP _0x80008
; 0004 0047 case str_e:
_0x80013:
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x80008
; 0004 0048 entry->prev_data.str =entry->data.str;
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,10
_0x80095:
	LD   R30,X+
	LD   R31,X+
	__PUTW1SNS 2,12
; 0004 0049 //glcd_printf(" %s", entry->data.str);
; 0004 004A break;
; 0004 004B }
_0x80008:
; 0004 004C }
	LDD  R17,Y+1
	LDD  R16,Y+0
_0x214001B:
	ADIW R28,4
	RET
; .FEND
; 0004 004E void renderMenu(void){
_renderMenu:
; .FSTART _renderMenu
; 0004 004F int i,x,y,py;
; 0004 0050 static void* data;
; 0004 0051 entry_t* entry;
; 0004 0052 uint32_t  index_selected,index_1stline,index,data_index;
; 0004 0053 static uint32_t prev_index = 1;

	.DSEG

	.CSEG
; 0004 0054 static uint32_t prev_index_1stline = 0;
; 0004 0055 static menuPage_t* prev_activePage = 0;
; 0004 0056 int fstline = 10;
; 0004 0057 //clear
; 0004 0058 PRINT(">>>renderMenu\r\n");
; 0004 0059 if(!activePage){
	SBIW R28,22
	LDI  R30,LOW(10)
	ST   Y,R30
	LDI  R30,LOW(0)
	STD  Y+1,R30
	CALL __SAVELOCR6
;	i -> R16,R17
;	x -> R18,R19
;	y -> R20,R21
;	py -> Y+26
;	*entry -> Y+24
;	index_selected -> Y+20
;	index_1stline -> Y+16
;	index -> Y+12
;	data_index -> Y+8
;	fstline -> Y+6
	MOV  R0,R6
	OR   R0,R7
	BRNE _0x80016
; 0004 005A PRINT("empty page!\r\n");
; 0004 005B PRINT("<<<renderMenu\r\n");
; 0004 005C return;
	RJMP _0x2140019
; 0004 005D }
; 0004 005E 
; 0004 005F //1st line
; 0004 0060 
; 0004 0061 index_1stline = (activePage->selectedIndex / MENU_LINES) * MENU_LINES;
_0x80016:
	CALL SUBOPT_0x26
	CALL __DIVD21U
	__GETD2N 0x3
	CALL __MULD12U
	CALL SUBOPT_0x27
; 0004 0062 
; 0004 0063 if(index_1stline != prev_index_1stline || prev_activePage != activePage){
	CALL SUBOPT_0x28
	BRNE _0x80018
	CALL SUBOPT_0x29
	BRNE _0x80018
	RJMP _0x80017
_0x80018:
; 0004 0064 glcd_setfillcolor(0);
	LDI  R30,LOW(0)
	__PUTB1MN _glcd_state,16
; 0004 0065 glcd_fillrectround(0,fstline,128,LINE_HEIGHT*MENU_LINES,0);
	ST   -Y,R30
	LDD  R30,Y+7
	ST   -Y,R30
	LDI  R30,LOW(128)
	ST   -Y,R30
	LDI  R30,LOW(24)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_fillrectround
; 0004 0066 for(i = 0; i < MENU_LINES; i++){
	__GETWRN 16,17,0
_0x8001B:
	__CPWRN 16,17,3
	BRLT PC+2
	RJMP _0x8001C
; 0004 0067 y=i*LINE_HEIGHT + fstline;
	MOVW R30,R16
	CALL __LSLW3
	CALL SUBOPT_0x2A
; 0004 0068 index = index_1stline + i;
	MOVW R30,R16
	CALL SUBOPT_0x2B
	CALL __CWD1
	CALL __ADDD12
	CALL SUBOPT_0x2C
; 0004 0069 entry = &activePage->entries[index];
	CALL SUBOPT_0x2D
	ADD  R30,R22
	ADC  R31,R23
	STD  Y+24,R30
	STD  Y+24+1,R31
; 0004 006A if(index_1stline != prev_index_1stline || prev_activePage != activePage){
	CALL SUBOPT_0x28
	BRNE _0x8001E
	CALL SUBOPT_0x29
	BREQ _0x8001D
_0x8001E:
; 0004 006B if(index >= activePage->size){
	MOVW R26,R6
	ADIW R26,2
	CALL __GETD1P_INC
	CALL SUBOPT_0x2E
	CALL __CPD21
	BRLO _0x80020
; 0004 006C break;
	RJMP _0x8001C
; 0004 006D }
; 0004 006E glcd_printfxy (7, y, "%s",  entry->text);
_0x80020:
	LDI  R30,LOW(7)
	ST   -Y,R30
	CALL SUBOPT_0x2F
	LDD  R26,Y+28
	LDD  R27,Y+28+1
	ADIW R26,24
	CALL SUBOPT_0x30
; 0004 006F //glcd_printfxy (90, y, "%d", str_length(entry->text));
; 0004 0070 }
; 0004 0071 if(activePage->entries[index].displayData){
_0x8001D:
	CALL SUBOPT_0x2D
	CALL SUBOPT_0x31
	BRNE PC+2
	RJMP _0x80021
; 0004 0072 //PRINT("displaying %s = %d (%s) type 0x%X disp 0x%X\r\n",  entry->text, *(int16 ...
; 0004 0073 x=str_length(entry->text)+15;
	CALL SUBOPT_0x32
; 0004 0074 data = entry->data.v;
	CALL SUBOPT_0x33
; 0004 0075 switch (entry->type){
; 0004 0076 case void_e:
	BRNE _0x80025
; 0004 0077 break;
	RJMP _0x80024
; 0004 0078 case char_e:
_0x80025:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x80026
; 0004 0079 //glcd_printfxy(x, y,"%3d", *((char*)data));
; 0004 007A glcd_printfxy(x,y," %3d", *((char*)data));
	CALL SUBOPT_0x34
	RJMP _0x80096
; 0004 007B break;
; 0004 007C case int8_t_e:
_0x80026:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x80027
; 0004 007D glcd_printfxy(x, y,"%3d", *((int8_t*)data));
	CALL SUBOPT_0x35
	LD   R30,X
	CALL __CBD1
	RJMP _0x80096
; 0004 007E //glcd_printf(" %3d", *((int8_t*)data));
; 0004 007F break;
; 0004 0080 case int16_t_e:
_0x80027:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x80028
; 0004 0081 glcd_printfxy(x, y,"%3d", *((int16_t*)data));
	CALL SUBOPT_0x35
	CALL __GETW1P
	CALL __CWD1
	RJMP _0x80096
; 0004 0082 //glcd_printf(" %3d", *((int16_t*)data));
; 0004 0083 break;
; 0004 0084 case int32_t_e:
_0x80028:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x80029
; 0004 0085 glcd_printfxy(x, y,"%3d", *((int32_t*)data));
	CALL SUBOPT_0x35
	CALL __GETD1P
	RJMP _0x80096
; 0004 0086 //glcd_printf(" %3d", *((int32_t*)data));
; 0004 0087 break;
; 0004 0088 case uint8_t_e:
_0x80029:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x8002A
; 0004 0089 if(entry->useStrStorage){
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	CALL SUBOPT_0x25
	BREQ _0x8002B
; 0004 008A PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
; 0004 008B PRINT("pointer = %d\r\n", *(entry->data.u8));
; 0004 008C glcd_printfxy(x, y,"%s", entry->str_storage[*entry->data.u8]);
	ST   -Y,R18
	CALL SUBOPT_0x2F
	CALL SUBOPT_0x36
	RJMP _0x80097
; 0004 008D //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
; 0004 008E }
; 0004 008F else{
_0x8002B:
; 0004 0090 glcd_printfxy(x, y,"%3d", *entry->data.u8);
	CALL SUBOPT_0x37
_0x80097:
	CALL __PUTPARD1
	CALL SUBOPT_0x38
; 0004 0091 //glcd_printf(" %3d", *entry->data.u8);
; 0004 0092 }
; 0004 0093 break;
	RJMP _0x80024
; 0004 0094 case uint16_t_e:
_0x8002A:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x8002D
; 0004 0095 glcd_printfxy(x, y,"%3d", *((uint16_t*)data));
	CALL SUBOPT_0x35
	RJMP _0x80098
; 0004 0096 //glcd_printf(" %3d", *((uint16_t*)data));
; 0004 0097 break;
; 0004 0098 case uint32_t_e:
_0x8002D:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BRNE _0x8002E
; 0004 0099 glcd_printfxy(x, y,"%3d", *((uint32_t*)data));
	CALL SUBOPT_0x35
	CALL __GETD1P
	RJMP _0x80096
; 0004 009A //glcd_printf(" %3d", *((uint32_t*)data));
; 0004 009B break;
; 0004 009C case float_e:
_0x8002E:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0x8002F
; 0004 009D glcd_printfxy(x, y,"%3.0f", *((float*)data));
	CALL SUBOPT_0x39
	CALL __GETD1P
	RJMP _0x80096
; 0004 009E // glcd_printf(" %3.0f", *((float*)data));
; 0004 009F break;
; 0004 00A0 case str_e:
_0x8002F:
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x80024
; 0004 00A1 glcd_printfxy(x, y,"%s", entry->data.str);
	ST   -Y,R18
	CALL SUBOPT_0x2F
	LDD  R26,Y+28
	LDD  R27,Y+28+1
	ADIW R26,10
_0x80098:
	LD   R30,X+
	LD   R31,X+
	CLR  R22
	CLR  R23
_0x80096:
	CALL __PUTPARD1
	CALL SUBOPT_0x38
; 0004 00A2 //glcd_printf(" %s", entry->data.str);
; 0004 00A3 break;
; 0004 00A4 }
_0x80024:
; 0004 00A5 dataAssign(entry);
	LDD  R26,Y+24
	LDD  R27,Y+24+1
	RCALL _dataAssign
; 0004 00A6 }
; 0004 00A7 }
_0x80021:
	__ADDWRN 16,17,1
	RJMP _0x8001B
_0x8001C:
; 0004 00A8 prev_index=1;
	CALL SUBOPT_0x3A
	CALL SUBOPT_0x3B
; 0004 00A9 }
; 0004 00AA 
; 0004 00AB index_selected = activePage->selectedIndex%MENU_LINES;
_0x80017:
	CALL SUBOPT_0x26
	CALL __MODD21U
	__PUTD1S 20
; 0004 00AC 
; 0004 00AD if(index_selected!=prev_index){
	LDS  R30,_prev_index_S0040003000
	LDS  R31,_prev_index_S0040003000+1
	LDS  R22,_prev_index_S0040003000+2
	LDS  R23,_prev_index_S0040003000+3
	__GETD2S 20
	CALL __CPD12
	BREQ _0x80031
; 0004 00AE y=index_selected*LINE_HEIGHT + fstline;
	CALL SUBOPT_0x3C
; 0004 00AF py=prev_index*LINE_HEIGHT + fstline;
	LDS  R26,_prev_index_S0040003000
	LDS  R27,_prev_index_S0040003000+1
	LDI  R30,LOW(8)
	CALL __MULB1W2U
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+26,R30
	STD  Y+26+1,R31
; 0004 00B0 glcd_printfxy (0, y, ">");
	LDI  R30,LOW(0)
	ST   -Y,R30
	ST   -Y,R20
	__POINTW1FN _0x80000,14
	CALL SUBOPT_0x3D
; 0004 00B1 glcd_printfxy (0, py, " ");
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R30,Y+27
	ST   -Y,R30
	__POINTW1FN _0x80000,16
	CALL SUBOPT_0x3D
; 0004 00B2 }
; 0004 00B3 
; 0004 00B4 
; 0004 00B5 data_index = index_selected+index_1stline;
_0x80031:
	CALL SUBOPT_0x3E
	__GETD2S 20
	CALL __ADDD12
	__PUTD1S 8
; 0004 00B6 if(activePage->entries[data_index].displayData){
	CALL SUBOPT_0x3F
	CALL SUBOPT_0x31
	BRNE PC+2
	RJMP _0x80032
; 0004 00B7 entry = &activePage->entries[data_index];
	CALL SUBOPT_0x3F
	ADD  R30,R22
	ADC  R31,R23
	STD  Y+24,R30
	STD  Y+24+1,R31
; 0004 00B8 x=str_length(entry->text)+15;
	CALL SUBOPT_0x32
; 0004 00B9 y=index_selected*LINE_HEIGHT + fstline;
	CALL SUBOPT_0x3C
; 0004 00BA data = entry->data.v;
	CALL SUBOPT_0x33
; 0004 00BB switch (entry->type){
; 0004 00BC case void_e:
	BRNE _0x80036
; 0004 00BD break;
	RJMP _0x80035
; 0004 00BE case char_e:
_0x80036:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x80037
; 0004 00BF if(entry->prev_data.i16 != *((char*)data)){
	CALL SUBOPT_0x40
	LDI  R31,0
	CP   R30,R26
	CPC  R31,R27
	BREQ _0x80038
; 0004 00C0 //glcd_printfxy(x, y,"%3d", *((char*)data));
; 0004 00C1 glcd_printfxy(x,y," %3d", *((char*)data));
	CALL SUBOPT_0x34
	CALL SUBOPT_0x41
; 0004 00C2 }
; 0004 00C3 break;
_0x80038:
	RJMP _0x80035
; 0004 00C4 case int8_t_e:
_0x80037:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x80039
; 0004 00C5 if(entry->prev_data.i16 != *((int8_t*)data)){
	CALL SUBOPT_0x40
	LDI  R31,0
	SBRC R30,7
	SER  R31
	CP   R30,R26
	CPC  R31,R27
	BREQ _0x8003A
; 0004 00C6 glcd_printfxy(x, y,"%3d", *((int8_t*)data));
	CALL SUBOPT_0x35
	LD   R30,X
	CALL __CBD1
	CALL SUBOPT_0x41
; 0004 00C7 //glcd_printf(" %3d", *((int8_t*)data));
; 0004 00C8 }
; 0004 00C9 break;
_0x8003A:
	RJMP _0x80035
; 0004 00CA case int16_t_e:
_0x80039:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x8003B
; 0004 00CB if(entry->prev_data.i16 != *((int16_t*)data)){
	CALL SUBOPT_0x42
	BREQ _0x8003C
; 0004 00CC glcd_printfxy(x, y,"%3d", *((int16_t*)data));
	CALL SUBOPT_0x35
	LD   R30,X+
	LD   R31,X+
	CALL __CWD1
	CALL SUBOPT_0x41
; 0004 00CD entry->prev_data.i16 = *((int16_t*)data);
	CALL SUBOPT_0x43
	LD   R30,X+
	LD   R31,X+
	__PUTW1SNS 24,12
; 0004 00CE }
; 0004 00CF //glcd_printf(" %3d", *((int16_t*)data));
; 0004 00D0 break;
_0x8003C:
	RJMP _0x80035
; 0004 00D1 case int32_t_e:
_0x8003B:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x8003D
; 0004 00D2 if(entry->prev_data.i32 != *((int32_t*)data)){
	CALL SUBOPT_0x44
	BREQ _0x8003E
; 0004 00D3 glcd_printfxy(x, y,"%3d", *((int32_t*)data));
	CALL SUBOPT_0x35
	CALL SUBOPT_0x45
; 0004 00D4 //glcd_printf(" %3d", *((int32_t*)data));
; 0004 00D5 }
; 0004 00D6 break;
_0x8003E:
	RJMP _0x80035
; 0004 00D7 case uint8_t_e:
_0x8003D:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x8003F
; 0004 00D8 if(entry->prev_data.i8 != *((int8_t*)data)){
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	LDD  R0,Z+12
	CALL SUBOPT_0x43
	LD   R30,X
	CP   R30,R0
	BREQ _0x80040
; 0004 00D9 if(entry->useStrStorage){
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	CALL SUBOPT_0x25
	BREQ _0x80041
; 0004 00DA PRINT("storage = %s\r\n", entry->str_storage[*(entry->data.u8)]);
; 0004 00DB PRINT("pointer = %d\r\n", *(entry->data.u8));
; 0004 00DC glcd_printfxy(x, y,"%s", entry->str_storage[*entry->data.u8]);
	ST   -Y,R18
	CALL SUBOPT_0x2F
	CALL SUBOPT_0x36
	RJMP _0x80099
; 0004 00DD //glcd_printf(" %s", entry->str_storage[*entry->data.u8]);
; 0004 00DE }
; 0004 00DF else{
_0x80041:
; 0004 00E0 glcd_printfxy(x, y,"%3d", *entry->data.u8);
	CALL SUBOPT_0x37
_0x80099:
	CALL __PUTPARD1
	CALL SUBOPT_0x38
; 0004 00E1 //glcd_printf(" %3d", *entry->data.u8);
; 0004 00E2 }
; 0004 00E3 }
; 0004 00E4 break;
_0x80040:
	RJMP _0x80035
; 0004 00E5 case uint16_t_e:
_0x8003F:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x80043
; 0004 00E6 if(entry->prev_data.u16 != *((uint16_t*)data)){
	CALL SUBOPT_0x42
	BREQ _0x80044
; 0004 00E7 glcd_printfxy(x, y,"%3d", *((uint16_t*)data));
	CALL SUBOPT_0x35
	CALL SUBOPT_0x30
; 0004 00E8 //glcd_printf(" %3d", *((uint16_t*)data));
; 0004 00E9 }
; 0004 00EA break;
_0x80044:
	RJMP _0x80035
; 0004 00EB case uint32_t_e:
_0x80043:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BRNE _0x80045
; 0004 00EC if(entry->prev_data.u32 != *((uint32_t*)data)){
	CALL SUBOPT_0x44
	BREQ _0x80046
; 0004 00ED glcd_printfxy(x, y,"%3d", *((uint32_t*)data));
	CALL SUBOPT_0x35
	CALL SUBOPT_0x45
; 0004 00EE //glcd_printf(" %3d", *((uint32_t*)data));
; 0004 00EF }
; 0004 00F0 break;
_0x80046:
	RJMP _0x80035
; 0004 00F1 case float_e:
_0x80045:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0x80047
; 0004 00F2 if(entry->prev_data.f != *((float*)data)){
	CALL SUBOPT_0x44
	BREQ _0x80048
; 0004 00F3 glcd_printfxy(x, y,"%3.0f", *((float*)data));
	CALL SUBOPT_0x39
	CALL SUBOPT_0x45
; 0004 00F4 // glcd_printf(" %3.0f", *((float*)data));
; 0004 00F5 }
; 0004 00F6 break;
_0x80048:
	RJMP _0x80035
; 0004 00F7 case str_e:
_0x80047:
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x80035
; 0004 00F8 if(entry->prev_data.str != entry->data.str){
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	__GETWRZ 0,1,12
	LDD  R26,Y+24
	LDD  R27,Y+24+1
	ADIW R26,10
	CALL SUBOPT_0x46
	BREQ _0x8004A
; 0004 00F9 glcd_printfxy(x, y,"%s", entry->data.str);
	ST   -Y,R18
	CALL SUBOPT_0x2F
	LDD  R26,Y+28
	LDD  R27,Y+28+1
	ADIW R26,10
	CALL SUBOPT_0x30
; 0004 00FA //glcd_printf(" %s", entry->data.str);
; 0004 00FB }
; 0004 00FC break;
_0x8004A:
; 0004 00FD }
_0x80035:
; 0004 00FE dataAssign(entry);
	LDD  R26,Y+24
	LDD  R27,Y+24+1
	RCALL _dataAssign
; 0004 00FF }
; 0004 0100 
; 0004 0101 prev_index_1stline = index_1stline;
_0x80032:
	CALL SUBOPT_0x3E
	STS  _prev_index_1stline_S0040003000,R30
	STS  _prev_index_1stline_S0040003000+1,R31
	STS  _prev_index_1stline_S0040003000+2,R22
	STS  _prev_index_1stline_S0040003000+3,R23
; 0004 0102 prev_activePage = activePage;
	__PUTWMRN _prev_activePage_S0040003000,0,6,7
; 0004 0103 prev_index=index_selected;
	__GETD1S 20
	CALL SUBOPT_0x3B
; 0004 0104 PRINT("<<<renderMenu\r\n");
; 0004 0105 }
_0x2140019:
	CALL __LOADLOCR6
_0x214001A:
	ADIW R28,28
	RET
; .FEND
; 0004 0107 void menuCommand(menuCommands_e command){
_menuCommand:
; .FSTART _menuCommand
; 0004 0108 entry_t* entry = &(activePage->entries[activePage->selectedIndex]);
; 0004 0109 switch(command){
	CALL __SAVELOCR4
	MOV  R19,R26
;	command -> R19
;	*entry -> R16,R17
	MOVW R26,R6
	LD   R0,X+
	LD   R1,X
	MOVW R26,R6
	ADIW R26,6
	LD   R30,X+
	LD   R31,X+
	MOVW R22,R0
	LDI  R26,LOW(29)
	LDI  R27,HIGH(29)
	CALL __MULW12U
	ADD  R30,R22
	ADC  R31,R23
	MOVW R16,R30
	MOV  R30,R19
	LDI  R31,0
; 0004 010A case nothing:
	SBIW R30,0
	BRNE _0x8004E
; 0004 010B break;
	RJMP _0x8004D
; 0004 010C case up_e:
_0x8004E:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x8004F
; 0004 010D if(activePage->selectedIndex == 0){
	MOVW R26,R6
	ADIW R26,6
	CALL __GETD1P
	CALL __CPD10
	BRNE _0x80050
; 0004 010E activePage->selectedIndex = activePage->size - 1;
	CALL SUBOPT_0x47
	__PUTD1RNS 6,6
; 0004 010F }
; 0004 0110 else{
	RJMP _0x80051
_0x80050:
; 0004 0111 activePage->selectedIndex--;
	MOVW R26,R6
	ADIW R26,6
	CALL SUBOPT_0x48
; 0004 0112 
; 0004 0113 }
_0x80051:
; 0004 0114 break;
	RJMP _0x8004D
; 0004 0115 case down_e:
_0x8004F:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x80052
; 0004 0116 if(activePage->selectedIndex < (activePage->size - 1)){
	MOVW R30,R6
	__GETD2Z 6
	PUSH R25
	PUSH R24
	PUSH R27
	PUSH R26
	CALL SUBOPT_0x47
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CPD21
	BRSH _0x80053
; 0004 0117 activePage->selectedIndex++;
	MOVW R26,R6
	ADIW R26,6
	CALL SUBOPT_0x1
; 0004 0118 }
; 0004 0119 else{
	RJMP _0x80054
_0x80053:
; 0004 011A activePage->selectedIndex = 0;
	MOVW R26,R6
	ADIW R26,6
	CALL SUBOPT_0x2
	CALL __PUTDP1
; 0004 011B }
_0x80054:
; 0004 011C break;
	RJMP _0x8004D
; 0004 011D case right_e:
_0x80052:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x80055
; 0004 011E if(entry->right_callback)
	MOVW R26,R16
	ADIW R26,4
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x80056
; 0004 011F entry->right_callback(entry);
	MOVW R30,R16
	__GETWRZ 0,1,4
	MOVW R26,R16
	MOVW R30,R0
	ICALL
; 0004 0120 break;
_0x80056:
	RJMP _0x8004D
; 0004 0121 case left_e:
_0x80055:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x80057
; 0004 0122 if(entry->left_callback)
	MOVW R26,R16
	ADIW R26,2
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x80058
; 0004 0123 entry->left_callback(entry);
	MOVW R30,R16
	__GETWRZ 0,1,2
	MOVW R26,R16
	MOVW R30,R0
	ICALL
; 0004 0124 break;
_0x80058:
	RJMP _0x8004D
; 0004 0125 case left_right_e:
_0x80057:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x80059
; 0004 0126 if(entry->left_right_callback)
	MOVW R26,R16
	ADIW R26,6
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x8005A
; 0004 0127 entry->left_right_callback(entry);
	MOVW R30,R16
	__GETWRZ 0,1,6
	MOVW R26,R16
	MOVW R30,R0
	ICALL
; 0004 0128 break;
_0x8005A:
	RJMP _0x8004D
; 0004 0129 case enter_e:
_0x80059:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x8004D
; 0004 012A if(entry->useActiveIndex){
	MOVW R30,R16
	LDD  R26,Z+27
	LDD  R27,Z+28
	MOVW R30,R26
	ANDI R30,LOW(0x2)
	BREQ _0x8005C
; 0004 012B activePage->activeIndex = activePage->selectedIndex;
	MOVW R26,R6
	ADIW R26,6
	CALL __GETD1P_INC
	__PUTD1RNS 6,10
; 0004 012C }
; 0004 012D if(entry->sel_callback)
_0x8005C:
	MOVW R26,R16
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x8005D
; 0004 012E entry->sel_callback(entry);
	LD   R30,X+
	LD   R31,X+
	PUSH R31
	PUSH R30
	MOVW R26,R16
	POP  R30
	POP  R31
	ICALL
; 0004 012F break;
_0x8005D:
; 0004 0130 }
_0x8004D:
; 0004 0131 renderMenu();
	RCALL _renderMenu
; 0004 0132 }
	JMP  _0x2140014
; .FEND
; 0004 0136 void printMenuInfo(void){
; 0004 0137 PRINT("MENU: ");
; 0004 0138 PRINT("");
; 0004 0139 }
; 0004 013C void printEntryData(entry_t* e){
; 0004 013D //void* data = e->data.v;
; 0004 013E switch (e->type){
;	*e -> R16,R17
; 0004 013F case void_e:
; 0004 0140 break;
; 0004 0141 case char_e:
; 0004 0142 PRINT(" %3d",  *(e->data.ch));
; 0004 0143 break;
; 0004 0144 case int8_t_e:
; 0004 0145 PRINT(" %3d", *(e->data.i8));
; 0004 0146 break;
; 0004 0147 case int16_t_e:
; 0004 0148 PRINT(" %3d", *(e->data.i16));
; 0004 0149 break;
; 0004 014A case int32_t_e:
; 0004 014B PRINT(" %3d", *(e->data.i32));
; 0004 014C break;
; 0004 014D case uint8_t_e:
; 0004 014E PRINT(" %3d", *(e->data.u8));
; 0004 014F break;
; 0004 0150 case uint16_t_e:
; 0004 0151 PRINT(" %3d", *(e->data.u16));
; 0004 0152 break;
; 0004 0153 case uint32_t_e:
; 0004 0154 PRINT(" %3d", *(e->data.u32));
; 0004 0155 break;
; 0004 0156 case float_e:
; 0004 0157 PRINT(" %3.0f", *(e->data.f));
; 0004 0158 break;
; 0004 0159 case str_e:
; 0004 015A PRINT(" %s", e->data.str);
; 0004 015B break;
; 0004 015C }
; 0004 015D }
; 0004 015F void printEntry(entry_t* e){
; 0004 0160 PRINT(">>>printEntry\r\n");
;	*e -> R16,R17
; 0004 0161 PRINT("text = %s\r\n", e->text);
; 0004 0162 PRINT("data = ");
; 0004 0163 printEntryData(e);
; 0004 0164 PRINT("\r\n");
; 0004 0165 PRINT("type = %d\r\n", e->type);
; 0004 0166 PRINT("disp = %d\r\n", e->displayData);
; 0004 0167 PRINT("useActId = %d\r\n", e->useActiveIndex);
; 0004 0168 PRINT("<<<printEntry\r\n");
; 0004 0169 }
; 0004 016C void incrementEntry(entry_t* e){
_incrementEntry:
; .FSTART _incrementEntry
; 0004 016D PRINT(">>>increment\r\n");
	CALL SUBOPT_0x49
;	*e -> R16,R17
; 0004 016E switch (e->type)
; 0004 016F {
; 0004 0170 case void_e:
	BRNE _0x8006E
; 0004 0171 break;
	RJMP _0x8006D
; 0004 0172 case char_e:
_0x8006E:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x8006F
; 0004 0173 if(*(e->data.ch) < e->max.ch){
	CALL SUBOPT_0x4A
	BRSH _0x80070
; 0004 0174 (*(e->data.ch))++;
	CALL SUBOPT_0x4B
; 0004 0175 }
; 0004 0176 break;
_0x80070:
	RJMP _0x8006D
; 0004 0177 case int8_t_e:
_0x8006F:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x80071
; 0004 0178 if(*(e->data.i8) < e->max.i8){
	CALL SUBOPT_0x4A
	BRGE _0x80072
; 0004 0179 (*(e->data.i8))++;
	CALL SUBOPT_0x4B
; 0004 017A }
; 0004 017B break;
_0x80072:
	RJMP _0x8006D
; 0004 017C case int16_t_e:
_0x80071:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x80073
; 0004 017D if(*(e->data.i16) < e->max.i16){
	CALL SUBOPT_0x4C
	BRGE _0x80074
; 0004 017E (*(e->data.i16))++;
	CALL SUBOPT_0x4D
; 0004 017F }
; 0004 0180 break;
_0x80074:
	RJMP _0x8006D
; 0004 0181 case int32_t_e:
_0x80073:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x80075
; 0004 0182 if(*(e->data.i32) < e->max.i32){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x4F
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CPD21
	BRGE _0x80076
; 0004 0183 (*(e->data.i32))++;
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	CALL SUBOPT_0x1
; 0004 0184 }
; 0004 0185 break;
_0x80076:
	RJMP _0x8006D
; 0004 0186 case uint8_t_e:
_0x80075:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x80077
; 0004 0187 if(*(e->data.u8) < e->max.u8){
	CALL SUBOPT_0x4A
	BRSH _0x80078
; 0004 0188 (*(e->data.u8))++;
	CALL SUBOPT_0x4B
; 0004 0189 }
; 0004 018A break;
_0x80078:
	RJMP _0x8006D
; 0004 018B case uint16_t_e:
_0x80077:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x80079
; 0004 018C if(*(e->data.u16) < e->max.u16){
	CALL SUBOPT_0x4C
	BRSH _0x8007A
; 0004 018D (*(e->data.u16))++;
	CALL SUBOPT_0x4D
; 0004 018E }
; 0004 018F break;
_0x8007A:
	RJMP _0x8006D
; 0004 0190 case uint32_t_e:
_0x80079:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BRNE _0x8007B
; 0004 0191 if(*(e->data.u32) < e->max.u32){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x4F
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CPD21
	BRSH _0x8007C
; 0004 0192 (*(e->data.u32))++;
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	CALL SUBOPT_0x1
; 0004 0193 }
; 0004 0194 break;
_0x8007C:
	RJMP _0x8006D
; 0004 0195 case float_e:
_0x8007B:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0x8007D
; 0004 0196 if(*(e->data.f) < e->max.f){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x4F
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CMPF12
	BRSH _0x8007E
; 0004 0197 (*(e->data.f))++;
	CALL SUBOPT_0x4E
	CALL SUBOPT_0x50
	CALL __PUTDP1
	CALL SUBOPT_0x51
; 0004 0198 }
; 0004 0199 break;
_0x8007E:
; 0004 019A case str_e:
_0x8007D:
; 0004 019B break;
; 0004 019C }
_0x8006D:
; 0004 019D PRINT("<<<icrement\r\n");
; 0004 019E }
	JMP  _0x2140017
; .FEND
; 0004 01A1 void decrementEntry(entry_t* e){
_decrementEntry:
; .FSTART _decrementEntry
; 0004 01A2 PRINT(">>>decrement\r\n");
	CALL SUBOPT_0x49
;	*e -> R16,R17
; 0004 01A3 switch (e->type)
; 0004 01A4 {
; 0004 01A5 case void_e:
	BRNE _0x80083
; 0004 01A6 break;
	RJMP _0x80082
; 0004 01A7 case char_e:
_0x80083:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x80084
; 0004 01A8 if(*(e->data.ch) > e->min.ch){
	CALL SUBOPT_0x52
	BRSH _0x80085
; 0004 01A9 (*(e->data.ch))--;
	CALL SUBOPT_0x53
; 0004 01AA }
; 0004 01AB break;
_0x80085:
	RJMP _0x80082
; 0004 01AC case int8_t_e:
_0x80084:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x80086
; 0004 01AD if(*(e->data.i8) > e->min.i8){
	CALL SUBOPT_0x52
	BRGE _0x80087
; 0004 01AE (*(e->data.i8))--;
	CALL SUBOPT_0x53
; 0004 01AF }
; 0004 01B0 break;
_0x80087:
	RJMP _0x80082
; 0004 01B1 case int16_t_e:
_0x80086:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x80088
; 0004 01B2 if(*(e->data.i16) > e->min.i16){
	CALL SUBOPT_0x54
	BRGE _0x80089
; 0004 01B3 (*(e->data.i16))--;
	CALL SUBOPT_0x55
; 0004 01B4 }
; 0004 01B5 break;
_0x80089:
	RJMP _0x80082
; 0004 01B6 case int32_t_e:
_0x80088:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BRNE _0x8008A
; 0004 01B7 if(*(e->data.i32) > e->min.i32){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x56
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CPD12
	BRGE _0x8008B
; 0004 01B8 (*(e->data.i32))--;
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	CALL SUBOPT_0x48
; 0004 01B9 }
; 0004 01BA break;
_0x8008B:
	RJMP _0x80082
; 0004 01BB case uint8_t_e:
_0x8008A:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x8008C
; 0004 01BC PRINT("data = %d min %d max %d\r\n",*(e->data.u8),  e->min.u8,  e->max.u8 );
; 0004 01BD if(*(e->data.u8) > e->min.u8){
	CALL SUBOPT_0x52
	BRSH _0x8008D
; 0004 01BE PRINT("--\r\n");
; 0004 01BF (*(e->data.u8))--;
	CALL SUBOPT_0x53
; 0004 01C0 //(*(e->data.u8)) = (*(e->data.u8)) - 1;
; 0004 01C1 }
; 0004 01C2 PRINT("data = %d min %d max %d\r\n",*(e->data.u8),  e->min.u8,  e->max.u8 );
_0x8008D:
; 0004 01C3 break;
	RJMP _0x80082
; 0004 01C4 case uint16_t_e:
_0x8008C:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BRNE _0x8008E
; 0004 01C5 if(*(e->data.u16) > e->min.u16){
	CALL SUBOPT_0x54
	BRSH _0x8008F
; 0004 01C6 (*(e->data.u16))--;
	CALL SUBOPT_0x55
; 0004 01C7 }
; 0004 01C8 break;
_0x8008F:
	RJMP _0x80082
; 0004 01C9 case uint32_t_e:
_0x8008E:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BRNE _0x80090
; 0004 01CA if(*(e->data.u32) > e->min.u32){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x56
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CPD12
	BRSH _0x80091
; 0004 01CB (*(e->data.u32))--;
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	CALL SUBOPT_0x48
; 0004 01CC }
; 0004 01CD break;
_0x80091:
	RJMP _0x80082
; 0004 01CE case float_e:
_0x80090:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0x80092
; 0004 01CF if(*(e->data.f) > e->min.f){
	CALL SUBOPT_0x4E
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0x56
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __CMPF12
	BREQ PC+2
	BRCC PC+2
	RJMP _0x80093
; 0004 01D0 (*(e->data.f))--;
	CALL SUBOPT_0x4E
	CALL SUBOPT_0x51
	CALL __PUTDP1
	CALL SUBOPT_0x50
; 0004 01D1 }
; 0004 01D2 break;
_0x80093:
; 0004 01D3 case str_e:
_0x80092:
; 0004 01D4 break;
; 0004 01D5 }
_0x80082:
; 0004 01D6 PRINT("<<<decrement\r\n");
; 0004 01D7 }
	JMP  _0x2140017
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;typedef enum{
;pressed_none = 0,
;pressed_RightButton  = 0x1<<0,
;pressed_LeftButton   = 0x1<<1,
;pressed_TopButton    = 0x1<<2,
;pressed_BottomButton = 0x1<<3,
;pressed_SelButton    = 0x1<<4,
;}button_pressed_e;
;void emit_command(button_callbacks_t* bc, button_pressed_e cmd){
; 0005 001B void emit_command(button_callbacks_t* bc, button_pressed_e cmd){

	.CSEG
_emit_command:
; .FSTART _emit_command
; 0005 001C switch (cmd){
	CALL SUBOPT_0x22
;	*bc -> R18,R19
;	cmd -> R17
	LDI  R31,0
; 0005 001D case pressed_none:
	SBIW R30,0
	BREQ _0xA0005
; 0005 001E break;
; 0005 001F case pressed_RightButton:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0xA0007
; 0005 0020 bc->right();
	MOVW R30,R18
	__GETWRZ 0,1,2
	RJMP _0xA0028
; 0005 0021 break;
; 0005 0022 case pressed_LeftButton:
_0xA0007:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0xA0008
; 0005 0023 bc->left();
	MOVW R26,R18
	LD   R30,X+
	LD   R31,X+
	RJMP _0xA0029
; 0005 0024 break;
; 0005 0025 case pressed_TopButton:
_0xA0008:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0xA0009
; 0005 0026 bc->up();
	MOVW R30,R18
	__GETWRZ 0,1,4
	RJMP _0xA0028
; 0005 0027 break;
; 0005 0028 case pressed_BottomButton:
_0xA0009:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BRNE _0xA000A
; 0005 0029 bc->down();
	MOVW R30,R18
	__GETWRZ 0,1,6
	RJMP _0xA0028
; 0005 002A break;
; 0005 002B case pressed_SelButton:
_0xA000A:
	CPI  R30,LOW(0x10)
	LDI  R26,HIGH(0x10)
	CPC  R31,R26
	BRNE _0xA0005
; 0005 002C bc->select();
	MOVW R30,R18
	__GETWRZ 0,1,8
_0xA0028:
	MOVW R30,R0
_0xA0029:
	ICALL
; 0005 002D break;
; 0005 002E }
_0xA0005:
; 0005 002F }
	CALL __LOADLOCR4
	ADIW R28,6
	RET
; .FEND
;void button_update(button_callbacks_t* bc){
; 0005 0032 void button_update(button_callbacks_t* bc){
_button_update:
; .FSTART _button_update
; 0005 0033 
; 0005 0034 static button_pressed_e pressed = pressed_none;
; 0005 0035 button_pressed_e currently_pressed = pressed_none;
; 0005 0036 uint8_t buttons_pressed = 0;
; 0005 0037 static uint32_t time_pressed = 0;//for repeatedly emitting commands
; 0005 0038 //without button being released
; 0005 0039 //select button needs to be handled differently
; 0005 003A static uint32_t time_emitted = 0;
; 0005 003B uint16_t timeout_repeat = BUTTON_REPEAT_TIMEOUT_1;
; 0005 003C int i = 0;
; 0005 003D PRINT(">>>button_update()\r\n");
; 0005 003E //jump to what was pressed last time, if user press
; 0005 003F // another button while keeping 1st button, we ignore that
; 0005 0040 currently_pressed |= RightButton ? pressed_RightButton : pressed_none;
	CALL SUBOPT_0x57
;	*bc -> Y+6
;	currently_pressed -> R17
;	buttons_pressed -> R16
;	timeout_repeat -> R18,R19
;	i -> R20,R21
	LDI  R17,0
	LDI  R16,0
	__GETWRN 18,19,350
	__GETWRN 20,21,0
	SBIC 0x1,5
	RJMP _0xA000C
	LDI  R30,LOW(1)
	RJMP _0xA000D
_0xA000C:
	LDI  R30,LOW(0)
_0xA000D:
	OR   R17,R30
; 0005 0041 currently_pressed |= LeftButton ? pressed_LeftButton : pressed_none;
	SBIC 0x1,6
	RJMP _0xA000F
	LDI  R30,LOW(2)
	RJMP _0xA0010
_0xA000F:
	LDI  R30,LOW(0)
_0xA0010:
	OR   R17,R30
; 0005 0042 currently_pressed |= TopButton ? pressed_TopButton : pressed_none;
	SBIC 0x1,4
	RJMP _0xA0012
	LDI  R30,LOW(4)
	RJMP _0xA0013
_0xA0012:
	LDI  R30,LOW(0)
_0xA0013:
	OR   R17,R30
; 0005 0043 currently_pressed |= BottomButton ? pressed_BottomButton : pressed_none;
	SBIC 0x1,3
	RJMP _0xA0015
	LDI  R30,LOW(8)
	RJMP _0xA0016
_0xA0015:
	LDI  R30,LOW(0)
_0xA0016:
	OR   R17,R30
; 0005 0044 currently_pressed |= SelButton ? pressed_SelButton : pressed_none;
	SBIC 0x1,2
	RJMP _0xA0018
	LDI  R30,LOW(16)
	RJMP _0xA0019
_0xA0018:
	LDI  R30,LOW(0)
_0xA0019:
	OR   R17,R30
; 0005 0045 
; 0005 0046 for (i = 0; i<8; i++){
	__GETWRN 20,21,0
_0xA001C:
	__CPWRN 20,21,8
	BRGE _0xA001D
; 0005 0047 buttons_pressed += (currently_pressed >> i) & 0x01;
	MOV  R30,R20
	MOV  R26,R17
	CALL __LSRB12
	ANDI R30,LOW(0x1)
	ADD  R16,R30
; 0005 0048 }
	__ADDWRN 20,21,1
	RJMP _0xA001C
_0xA001D:
; 0005 0049 //PRINT("buttons %d\r\n", buttons_pressed);
; 0005 004A if(buttons_pressed == 0 || buttons_pressed > 1 ||
; 0005 004B (!(currently_pressed & pressed) && pressed != pressed_none)){
	CPI  R16,0
	BREQ _0xA001F
	CPI  R16,2
	BRSH _0xA001F
	LDS  R30,_pressed_S0050001000
	AND  R30,R17
	BRNE _0xA0020
	LDS  R26,_pressed_S0050001000
	CPI  R26,LOW(0x0)
	BRNE _0xA001F
_0xA0020:
	RJMP _0xA001E
_0xA001F:
; 0005 004C PRINT("=====RESET buttons_pressed = %d\r\n", buttons_pressed);
; 0005 004D time_pressed = 0;
	LDI  R30,LOW(0)
	STS  _time_pressed_S0050001000,R30
	STS  _time_pressed_S0050001000+1,R30
	STS  _time_pressed_S0050001000+2,R30
	STS  _time_pressed_S0050001000+3,R30
; 0005 004E time_emitted = 0;
	STS  _time_emitted_S0050001000,R30
	STS  _time_emitted_S0050001000+1,R30
	STS  _time_emitted_S0050001000+2,R30
	STS  _time_emitted_S0050001000+3,R30
; 0005 004F pressed = pressed_none;
	STS  _pressed_S0050001000,R30
; 0005 0050 PRINT("<<<button_update()\r\n");
; 0005 0051 return;
	RJMP _0x2140018
; 0005 0052 }
; 0005 0053 
; 0005 0054 //now we have only one unique button pressed
; 0005 0055 if(pressed == pressed_none){//1st press
_0xA001E:
	LDS  R30,_pressed_S0050001000
	CPI  R30,0
	BRNE _0xA0023
; 0005 0056 PRINT("====BUTTON 0x%d prev = 0x%d==\r\n", currently_pressed, pressed);
; 0005 0057 emit_command(bc, currently_pressed);
	CALL SUBOPT_0x58
; 0005 0058 pressed = currently_pressed;
	STS  _pressed_S0050001000,R17
; 0005 0059 time_pressed = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_pressed_S0050001000,R30
	STS  _time_pressed_S0050001000+1,R31
	STS  _time_pressed_S0050001000+2,R22
	STS  _time_pressed_S0050001000+3,R23
; 0005 005A time_emitted = GetTick_ms();
	CALL SUBOPT_0x59
; 0005 005B }
; 0005 005C //PRINT("tick_ms %d time_emitted %d time_pressed %d\r\n", tick_ms, time_emitted, ...
; 0005 005D PRINT("PRESSED %d\r\n", tick_ms - time_pressed);
_0xA0023:
; 0005 005E if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_2){
	CALL SUBOPT_0x5A
	__CPD2N 0x7D1
	BRLO _0xA0024
; 0005 005F timeout_repeat =  BUTTON_REPEAT_TIMEOUT_2;
	__GETWRN 18,19,200
; 0005 0060 }
; 0005 0061 if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_3){
_0xA0024:
	CALL SUBOPT_0x5A
	CALL SUBOPT_0x19
	BRLO _0xA0025
; 0005 0062 timeout_repeat =  BUTTON_REPEAT_TIMEOUT_3;
	__GETWRN 18,19,100
; 0005 0063 }
; 0005 0064 if(GetTick_ms() - time_emitted > timeout_repeat){
_0xA0025:
	CALL _GetTick_ms
	LDS  R26,_time_emitted_S0050001000
	LDS  R27,_time_emitted_S0050001000+1
	LDS  R24,_time_emitted_S0050001000+2
	LDS  R25,_time_emitted_S0050001000+3
	CALL __SUBD12
	MOVW R26,R30
	MOVW R24,R22
	MOVW R30,R18
	CLR  R22
	CLR  R23
	CALL __CPD12
	BRSH _0xA0026
; 0005 0065 //PRINT("timeout_repeat\r\n");
; 0005 0066 if(currently_pressed != pressed_SelButton){
	CPI  R17,16
	BREQ _0xA0027
; 0005 0067 emit_command(bc, currently_pressed);
	CALL SUBOPT_0x58
; 0005 0068 PRINT("====continous=============\r\n");
; 0005 0069 }
; 0005 006A time_emitted = GetTick_ms();
_0xA0027:
	CALL SUBOPT_0x59
; 0005 006B }
; 0005 006C 
; 0005 006D 
; 0005 006E PRINT("<<<button_update()\r\n");
_0xA0026:
; 0005 006F }
_0x2140018:
	CALL __LOADLOCR6
	ADIW R28,8
	RET
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;extern menuPage_t main_page;
;void incrementEntry(entry_t* e);
;void decrementEntry(entry_t* e);
;void boiler_toggle_wrap(entry_t* e){
; 0006 0014 void boiler_toggle_wrap(entry_t* e){

	.CSEG
_boiler_toggle_wrap:
; .FSTART _boiler_toggle_wrap
; 0006 0015 (void)e;
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
;	*e -> R16,R17
	MOVW R30,R16
; 0006 0016 boiler_toggle();
	CALL _boiler_toggle
; 0006 0017 }
_0x2140017:
	LD   R16,Y+
	LD   R17,Y+
	RET
; .FEND
;volatile entry_t main_page_list[] = {
;{ .sel_callback = boiler_toggle_wrap, .left_callback = 0,               .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;{ .sel_callback = 0,                  .left_callback = decrementEntry,  .right_c ...
;};

	.DSEG
_0xC0003:
	.BYTE 0x4C
;menuPage_t main_page = {
;main_page_list,
;NUM_MAIN_PAGE,
;0,
;};
;button_callbacks_t buttonCallbacks;
;void cmdUp(void){
; 0006 002D void cmdUp(void){

	.CSEG
_cmdUp:
; .FSTART _cmdUp
; 0006 002E menuCommand(up_e);
	LDI  R26,LOW(1)
	RJMP _0x2140016
; 0006 002F }
; .FEND
;void cmdDown(void){
; 0006 0031 void cmdDown(void){
_cmdDown:
; .FSTART _cmdDown
; 0006 0032 menuCommand(down_e);
	LDI  R26,LOW(2)
	RJMP _0x2140016
; 0006 0033 }
; .FEND
;void cmdLeft(void){
; 0006 0035 void cmdLeft(void){
_cmdLeft:
; .FSTART _cmdLeft
; 0006 0036 menuCommand(right_e);
	LDI  R26,LOW(3)
	RJMP _0x2140016
; 0006 0037 }
; .FEND
;void cmdRight(void){
; 0006 0039 void cmdRight(void){
_cmdRight:
; .FSTART _cmdRight
; 0006 003A menuCommand(left_e);
	LDI  R26,LOW(4)
	RJMP _0x2140016
; 0006 003B }
; .FEND
;void cmdSelect(void){
; 0006 003D void cmdSelect(void){
_cmdSelect:
; .FSTART _cmdSelect
; 0006 003E menuCommand(enter_e);
	LDI  R26,LOW(6)
_0x2140016:
	CALL _menuCommand
; 0006 003F }
	RET
; .FEND
;void menu_buttons_init(void){
; 0006 0044 void menu_buttons_init(void){
_menu_buttons_init:
; .FSTART _menu_buttons_init
; 0006 0045 PRINT(">>>menu_buttons_init()\r\n");
; 0006 0046 
; 0006 0047 PRINT("str = %s\r\n", main_page_list[2].str_storage[0]);
; 0006 0048 PRINT("dir = %s\r\n", weather_dep_str[0]);
; 0006 0049 PRINT("data = %d\r\n", *(main_page_list[2].data.u8));
; 0006 004A 
; 0006 004B //main_page_list[2].data.str =  weather_dep_str[boiler.weather];
; 0006 004C PRINT("weather_dep_str[boiler.weather] = %s\r\n", weather_dep_str[boiler.weather ...
; 0006 004D PRINT("main_page_list[2].data.str  = %s\r\n", main_page_list[2].data.str );
; 0006 004E buttonCallbacks.left = cmdLeft;
	LDI  R30,LOW(_cmdLeft)
	LDI  R31,HIGH(_cmdLeft)
	STS  _buttonCallbacks,R30
	STS  _buttonCallbacks+1,R31
; 0006 004F buttonCallbacks.right = cmdRight;
	LDI  R30,LOW(_cmdRight)
	LDI  R31,HIGH(_cmdRight)
	__PUTW1MN _buttonCallbacks,2
; 0006 0050 buttonCallbacks.up = cmdUp;
	LDI  R30,LOW(_cmdUp)
	LDI  R31,HIGH(_cmdUp)
	__PUTW1MN _buttonCallbacks,4
; 0006 0051 buttonCallbacks.down = cmdDown;
	LDI  R30,LOW(_cmdDown)
	LDI  R31,HIGH(_cmdDown)
	__PUTW1MN _buttonCallbacks,6
; 0006 0052 buttonCallbacks.select = cmdSelect;
	LDI  R30,LOW(_cmdSelect)
	LDI  R31,HIGH(_cmdSelect)
	__PUTW1MN _buttonCallbacks,8
; 0006 0053 setActivePage(&main_page, void_e);
	LDI  R30,LOW(_main_page)
	LDI  R31,HIGH(_main_page)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _setActivePage
; 0006 0054 renderMenu();
	CALL _renderMenu
; 0006 0055 
; 0006 0056 PRINT("str = %s\r\n", main_page_list[2].str_storage[0]);
; 0006 0057 PRINT("dir = %s\r\n", weather_dep_str[0]);
; 0006 0058 PRINT("data = %d\r\n", *(main_page_list[2].data.u8));
; 0006 0059 PRINT("<<<menu_buttons_init()\r\n");
; 0006 005A }
	RET
; .FEND
;void menu_buttons_update(void){
; 0006 005C void menu_buttons_update(void){
_menu_buttons_update:
; .FSTART _menu_buttons_update
; 0006 005D button_update(&buttonCallbacks);
	LDI  R26,LOW(_buttonCallbacks)
	LDI  R27,HIGH(_buttonCallbacks)
	RCALL _button_update
; 0006 005E }
	RET
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){
; 0007 0016 void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){

	.CSEG
_clear:
; .FSTART _clear
; 0007 0017 glcd_setfillcolor(0);
	CALL __PUTPARD2
;	x -> Y+12
;	y -> Y+8
;	w -> Y+4
;	h -> Y+0
	LDI  R30,LOW(0)
	__PUTB1MN _glcd_state,16
; 0007 0018 glcd_fillrectround(x,y,w,h,0);
	LDD  R30,Y+12
	ST   -Y,R30
	LDD  R30,Y+9
	ST   -Y,R30
	LDD  R30,Y+6
	ST   -Y,R30
	LDD  R30,Y+3
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_fillrectround
; 0007 0019 }
	ADIW R28,16
	RET
; .FEND
;void drawAirTemp(void){
; 0007 001C void drawAirTemp(void){
_drawAirTemp:
; .FSTART _drawAirTemp
; 0007 001D static uint32_t time = 0;
; 0007 001E uint16_t x = 0;
; 0007 001F uint16_t y = 0;
; 0007 0020 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL SUBOPT_0x5B
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 18,19,0
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S0070001000
	LDS  R31,_time_S0070001000+1
	LDS  R22,_time_S0070001000+2
	LDS  R23,_time_S0070001000+3
	CALL SUBOPT_0x5C
	BRLO _0xE0003
; 0007 0021 glcd_printfxy(x,y, "%3.0f", boiler.air_temp);
	ST   -Y,R16
	ST   -Y,R18
	__POINTW1FN _0xE0000,0
	ST   -Y,R31
	ST   -Y,R30
	__GETD1MN _boiler,14
	CALL SUBOPT_0x41
; 0007 0022 time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S0070001000,R30
	STS  _time_S0070001000+1,R31
	STS  _time_S0070001000+2,R22
	STS  _time_S0070001000+3,R23
; 0007 0023 }
; 0007 0024 }
_0xE0003:
	JMP  _0x2140014
; .FEND
;void drawWaterTemp(void){
; 0007 0026 void drawWaterTemp(void){
; 0007 0027 static uint32_t time = 0;
; 0007 0028 uint16_t x = 127-7*6;
; 0007 0029 uint16_t y = 0;
; 0007 002A if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 002B glcd_printfxy(x,y, "%3.0f->%d", boiler.water_temp, boiler.water_goal_temp);
; 0007 002C time = GetTick_ms();
; 0007 002D }
; 0007 002E 
; 0007 002F }
;void drawModelName(void){
; 0007 0031 void drawModelName(void){
_drawModelName:
; .FSTART _drawModelName
; 0007 0032 static uint32_t time = 0;
; 0007 0033 static char* br_str="";

	.DSEG
_0xE0005:
	.BYTE 0x1

	.CSEG
; 0007 0034 uint16_t x = 127/4;
; 0007 0035 uint16_t y = 0;
; 0007 0036 //glcd_printfxy(x,y, "%s",br_str);
; 0007 0037 if(br_str != boiler_role_str[boiler.role]){
	CALL __SAVELOCR4
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 16,17,31
	__GETWRN 18,19,0
	CALL SUBOPT_0x5D
	LD   R30,X+
	LD   R31,X+
	LDS  R26,_br_str_S0070003000
	LDS  R27,_br_str_S0070003000+1
	CP   R30,R26
	CPC  R31,R27
	BREQ _0xE0007
; 0007 0038 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S0070003000
	LDS  R31,_time_S0070003000+1
	LDS  R22,_time_S0070003000+2
	LDS  R23,_time_S0070003000+3
	CALL SUBOPT_0x5C
	BRLO _0xE0008
; 0007 0039 glcd_printfxy(x,y, "%s", boiler_role_str[boiler.role]);
	ST   -Y,R16
	ST   -Y,R18
	__POINTW1FN _0xE0000,16
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x5D
	CALL SUBOPT_0x30
; 0007 003A br_str=boiler_role_str[boiler.role];
	CALL SUBOPT_0x5D
	LD   R30,X+
	LD   R31,X+
	STS  _br_str_S0070003000,R30
	STS  _br_str_S0070003000+1,R31
; 0007 003B time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S0070003000,R30
	STS  _time_S0070003000+1,R31
	STS  _time_S0070003000+2,R22
	STS  _time_S0070003000+3,R23
; 0007 003C }
; 0007 003D 
; 0007 003E }
_0xE0008:
; 0007 003F 
; 0007 0040 }
_0xE0007:
	JMP  _0x2140014
; .FEND
;void drawPump(void){
; 0007 0042 void drawPump(void){
_drawPump:
; .FSTART _drawPump
; 0007 0043 static uint32_t time = 0;
; 0007 0044 static char drawn = 0;
; 0007 0045 uint16_t x = 0;
; 0007 0046 uint16_t y = 56;
; 0007 0047 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL SUBOPT_0x5B
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 18,19,56
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S0070004000
	LDS  R31,_time_S0070004000+1
	LDS  R22,_time_S0070004000+2
	LDS  R23,_time_S0070004000+3
	CALL SUBOPT_0x5C
	BRLO _0xE0009
; 0007 0048 if(isSetevoi_nasos_ON){
	SBIS 0x12,5
	RJMP _0xE000A
; 0007 0049 //glcd_printfxy(x,y, "TOPL_ON ");
; 0007 004A if(!drawn){
	LDS  R30,_drawn_S0070004000
	CPI  R30,0
	BRNE _0xE000B
; 0007 004B glcd_putimagef(CIRCULATION_X,DEFAULT_Y ,circulation,0);
	LDI  R30,LOW(46)
	ST   -Y,R30
	LDI  R30,LOW(44)
	ST   -Y,R30
	LDI  R30,LOW(_circulation*2)
	LDI  R31,HIGH(_circulation*2)
	CALL SUBOPT_0x5E
; 0007 004C drawn = 1;
	LDI  R30,LOW(1)
	STS  _drawn_S0070004000,R30
; 0007 004D }
; 0007 004E }
_0xE000B:
; 0007 004F else{
	RJMP _0xE000C
_0xE000A:
; 0007 0050 //glcd_printfxy(x,y, "TOPL_OFF");
; 0007 0051 if(drawn){
	LDS  R30,_drawn_S0070004000
	CPI  R30,0
	BREQ _0xE000D
; 0007 0052 clear(CIRCULATION_X-1,DEFAULT_Y-1,circulation[0]+2,circulation[2]+2);
	__GETD1N 0x2D
	CALL SUBOPT_0x5F
	LDI  R30,LOW(_circulation*2)
	LDI  R31,HIGH(_circulation*2)
	CALL SUBOPT_0x60
	CALL __PUTPARD1
	__POINTW1FN _circulation,2
	CALL SUBOPT_0x60
	MOVW R26,R30
	MOVW R24,R22
	RCALL _clear
; 0007 0053 drawn = 0;
	LDI  R30,LOW(0)
	STS  _drawn_S0070004000,R30
; 0007 0054 }
; 0007 0055 }
_0xE000D:
_0xE000C:
; 0007 0056 time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S0070004000,R30
	STS  _time_S0070004000+1,R31
	STS  _time_S0070004000+2,R22
	STS  _time_S0070004000+3,R23
; 0007 0057 }
; 0007 0058 }
_0xE0009:
	RJMP _0x2140014
; .FEND
;void drawBurner(void){
; 0007 005A void drawBurner(void){
_drawBurner:
; .FSTART _drawBurner
; 0007 005B static uint32_t time = 0;
; 0007 005C static uint32_t j=0;
; 0007 005D uint16_t x = 0;
; 0007 005E uint16_t y = 48;
; 0007 005F if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL SUBOPT_0x5B
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 18,19,48
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S0070005000
	LDS  R31,_time_S0070005000+1
	LDS  R22,_time_S0070005000+2
	LDS  R23,_time_S0070005000+3
	CALL SUBOPT_0x5C
	BRLO _0xE000E
; 0007 0060 //glcd_printfxy(x,y, "BURNER");
; 0007 0061 glcd_putimagef(BURNER_X,DEFAULT_Y,burner[j%3],0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R30,LOW(44)
	ST   -Y,R30
	LDS  R26,_j_S0070005000
	LDS  R27,_j_S0070005000+1
	LDS  R24,_j_S0070005000+2
	LDS  R25,_j_S0070005000+3
	__GETD1N 0x3
	CALL __MODD21U
	CALL __LSLW2
	CALL __LSLW4
	SUBI R30,LOW(-_burner*2)
	SBCI R31,HIGH(-_burner*2)
	CALL SUBOPT_0x5E
; 0007 0062 if(isVentilaytor_ON){
	SBIS 0x12,3
	RJMP _0xE000F
; 0007 0063 j++;// if(isVentilaytor_ON)
	LDI  R26,LOW(_j_S0070005000)
	LDI  R27,HIGH(_j_S0070005000)
	CALL SUBOPT_0x1
; 0007 0064 }
; 0007 0065 time = GetTick_ms();
_0xE000F:
	CALL _GetTick_ms
	STS  _time_S0070005000,R30
	STS  _time_S0070005000+1,R31
	STS  _time_S0070005000+2,R22
	STS  _time_S0070005000+3,R23
; 0007 0066 }
; 0007 0067 }
_0xE000E:
	RJMP _0x2140014
; .FEND
;void drawFire(void){
; 0007 0069 void drawFire(void){
_drawFire:
; .FSTART _drawFire
; 0007 006A static uint32_t time = 0;
; 0007 006B static char drawn = 0;
; 0007 006C uint16_t x = 0;
; 0007 006D uint16_t y = 40;
; 0007 006E if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL SUBOPT_0x5B
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 18,19,40
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S0070006000
	LDS  R31,_time_S0070006000+1
	LDS  R22,_time_S0070006000+2
	LDS  R23,_time_S0070006000+3
	CALL SUBOPT_0x5C
	BRSH PC+2
	RJMP _0xE0010
; 0007 006F if(plamya_out ||\
; 0007 0070 Ion_out ||\
; 0007 0071 ((boiler.role == role_UK_303) && clapan_out())){
	SBIC 0x0,7
	RJMP _0xE0012
	SBIS 0x0,4
	RJMP _0xE0012
	__GETB2MN _boiler,57
	CPI  R26,LOW(0x3)
	BRNE _0xE0013
	SBIC 0x0,6
	RJMP _0xE0012
_0xE0013:
	RJMP _0xE0011
_0xE0012:
; 0007 0072 //glcd_printfxy(x,y, "FIRE_ON ");
; 0007 0073 if(!drawn){
	LDS  R30,_drawn_S0070006000
	CPI  R30,0
	BRNE _0xE0016
; 0007 0074 glcd_putimagef(FIRE_X,DEFAULT_Y-1,flame,0);
	LDI  R30,LOW(22)
	ST   -Y,R30
	LDI  R30,LOW(43)
	ST   -Y,R30
	LDI  R30,LOW(_flame*2)
	LDI  R31,HIGH(_flame*2)
	CALL SUBOPT_0x5E
; 0007 0075 drawn = 1;
	LDI  R30,LOW(1)
	STS  _drawn_S0070006000,R30
; 0007 0076 }
; 0007 0077 }
_0xE0016:
; 0007 0078 else{
	RJMP _0xE0017
_0xE0011:
; 0007 0079 //glcd_printfxy(x,y, "FIRE_OFF");
; 0007 007A if(drawn){
	LDS  R30,_drawn_S0070006000
	CPI  R30,0
	BREQ _0xE0018
; 0007 007B clear(FIRE_X-1,DEFAULT_Y-1,flame[0]+2,flame[2]+2);
	__GETD1N 0x15
	CALL SUBOPT_0x5F
	LDI  R30,LOW(_flame*2)
	LDI  R31,HIGH(_flame*2)
	CALL SUBOPT_0x60
	CALL __PUTPARD1
	__POINTW1FN _flame,2
	CALL SUBOPT_0x60
	MOVW R26,R30
	MOVW R24,R22
	RCALL _clear
; 0007 007C drawn = 0;
	LDI  R30,LOW(0)
	STS  _drawn_S0070006000,R30
; 0007 007D }
; 0007 007E }
_0xE0018:
_0xE0017:
; 0007 007F time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S0070006000,R30
	STS  _time_S0070006000+1,R31
	STS  _time_S0070006000+2,R22
	STS  _time_S0070006000+3,R23
; 0007 0080 }
; 0007 0081 }
_0xE0010:
	RJMP _0x2140014
; .FEND
;void drawFan(void){
; 0007 0083 void drawFan(void){
; 0007 0084 static uint32_t time = 0;
; 0007 0085 uint16_t x = 0;
; 0007 0086 uint16_t y =  32;
; 0007 0087 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 0088 if(isVentilaytor_ON){
; 0007 0089 glcd_printfxy(x,y, "FAN_ON ");
; 0007 008A }
; 0007 008B else{
; 0007 008C glcd_printfxy(x,y, "FAN_OFF");
; 0007 008D }
; 0007 008E 
; 0007 008F time = GetTick_ms();
; 0007 0090 }
; 0007 0091 }
;void drawClapan1(void){
; 0007 0093 void drawClapan1(void){
; 0007 0094 static uint32_t time = 0;
; 0007 0095 uint16_t x = 50;
; 0007 0096 uint16_t y = 32;
; 0007 0097 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 0098 if(isKlapan1_ON){
; 0007 0099 glcd_printfxy(x,y, "CL1_ON ");
; 0007 009A }
; 0007 009B else{
; 0007 009C glcd_printfxy(x,y, "CL1_OFF");
; 0007 009D }
; 0007 009E 
; 0007 009F time = GetTick_ms();
; 0007 00A0 }
; 0007 00A1 }
;void drawClapan2(void){
; 0007 00A3 void drawClapan2(void){
; 0007 00A4 static uint32_t time = 0;
; 0007 00A5 uint16_t x = 50;
; 0007 00A6 uint16_t y = 40;
; 0007 00A7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 00A8 if(isKlapan2_ON){
; 0007 00A9 glcd_printfxy(x,y, "CL2_ON ");
; 0007 00AA }
; 0007 00AB else{
; 0007 00AC glcd_printfxy(x,y, "CL2_OFF");
; 0007 00AD }
; 0007 00AE 
; 0007 00AF time = GetTick_ms();
; 0007 00B0 }
; 0007 00B1 }
;void drawState(void){
; 0007 00B3 void drawState(void){
; 0007 00B4 static uint32_t time = 0;
; 0007 00B5 uint16_t x = 50;
; 0007 00B6 uint16_t y = 48;
; 0007 00B7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 00B8 glcd_printfxy(x,y, "%s", boiler_state_str[boiler.state]);
; 0007 00B9 //PRINT("%s\r\n", boiler_state_str[boiler.state]);
; 0007 00BA time = GetTick_ms();
; 0007 00BB }
; 0007 00BC }
;void drawStartState(void){
; 0007 00BE void drawStartState(void){
; 0007 00BF static uint32_t time = 0;
; 0007 00C0 uint16_t x = 50;
; 0007 00C1 uint16_t y = 56;
; 0007 00C2 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 00C3 glcd_printfxy(x,y, "%s", start_sequence_stage_str[boiler.start_stage]);
; 0007 00C4 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00C5 time = GetTick_ms();
; 0007 00C6 }
; 0007 00C7 }
;void drawCmdState(void){
; 0007 00C9 void drawCmdState(void){
; 0007 00CA static uint32_t time = 0;
; 0007 00CB uint16_t x = 0;
; 0007 00CC uint16_t y = 48;
; 0007 00CD if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;	x -> R16,R17
;	y -> R18,R19
; 0007 00CE glcd_printfxy(x,y, "%s", boiler_state_str[boiler.command]);
; 0007 00CF //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00D0 time = GetTick_ms();
; 0007 00D1 }
; 0007 00D2 }
;void drawError(void){
; 0007 00D4 void drawError(void){
_drawError:
; .FSTART _drawError
; 0007 00D5 static uint32_t time = 0;
; 0007 00D6 uint16_t x = 30;
; 0007 00D7 uint16_t y = 40;
; 0007 00D8 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL __SAVELOCR4
;	x -> R16,R17
;	y -> R18,R19
	__GETWRN 16,17,30
	__GETWRN 18,19,40
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S007000D000
	LDS  R31,_time_S007000D000+1
	LDS  R22,_time_S007000D000+2
	LDS  R23,_time_S007000D000+3
	CALL SUBOPT_0x5C
	BRLO _0xE0025
; 0007 00D9 //glcd_printfxy(x,y, "Error %d", boiler.error);
; 0007 00DA glcd_printfxy(x,y, "\x8F\xB9\xA9\xA2\xAB\xA1 %d", boiler.error);
	ST   -Y,R16
	ST   -Y,R18
	__POINTW1FN _0xE0000,67
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _boiler,59
	CLR  R31
	CLR  R22
	CLR  R23
	CALL SUBOPT_0x41
; 0007 00DB glcd_printfxy(x,y+12, "%s", errors_str[boiler.error]);
	ST   -Y,R16
	MOV  R30,R18
	SUBI R30,-LOW(12)
	ST   -Y,R30
	__POINTW1FN _0xE0000,16
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _boiler,59
	LDI  R26,LOW(_errors_str)
	LDI  R27,HIGH(_errors_str)
	LDI  R31,0
	LSL  R30
	ROL  R31
	ADD  R26,R30
	ADC  R27,R31
	CALL SUBOPT_0x30
; 0007 00DC glcd_putimagef(BURNER_X,DEFAULT_Y,error_icon,0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R30,LOW(44)
	ST   -Y,R30
	LDI  R30,LOW(_error_icon*2)
	LDI  R31,HIGH(_error_icon*2)
	CALL SUBOPT_0x5E
; 0007 00DD //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00DE time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S007000D000,R30
	STS  _time_S007000D000+1,R31
	STS  _time_S007000D000+2,R22
	STS  _time_S007000D000+3,R23
; 0007 00DF }
; 0007 00E0 }
_0xE0025:
	RJMP _0x2140014
; .FEND
;void drawAntiFreeze(void){
; 0007 00E2 void drawAntiFreeze(void){
_drawAntiFreeze:
; .FSTART _drawAntiFreeze
; 0007 00E3 static uint32_t time = 0;
; 0007 00E4 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_S007000E000
	LDS  R31,_time_S007000E000+1
	LDS  R22,_time_S007000E000+2
	LDS  R23,_time_S007000E000+3
	CALL SUBOPT_0x5C
	BRLO _0xE0026
; 0007 00E5 glcd_putimagef(ANTIFREEZE_X,DEFAULT_Y,snow,0);
	LDI  R30,LOW(81)
	ST   -Y,R30
	LDI  R30,LOW(44)
	ST   -Y,R30
	LDI  R30,LOW(_snow*2)
	LDI  R31,HIGH(_snow*2)
	CALL SUBOPT_0x5E
; 0007 00E6 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00E7 time = GetTick_ms();
	CALL _GetTick_ms
	STS  _time_S007000E000,R30
	STS  _time_S007000E000+1,R31
	STS  _time_S007000E000+2,R22
	STS  _time_S007000E000+3,R23
; 0007 00E8 }
; 0007 00E9 }
_0xE0026:
	RET
; .FEND
;typedef enum
;drawn_none = 0,
;drawn_pictures,
;drawn_error,
;}drawn_e;
;void widgetsUpdate(void){
; 0007 00F3 void widgetsUpdate(void){
_widgetsUpdate:
; .FSTART _widgetsUpdate
; 0007 00F4 static drawn_e state = drawn_none;
; 0007 00F5 //PRINT(">>>widgetsUpdate\r\n");
; 0007 00F6 drawAirTemp();
	RCALL _drawAirTemp
; 0007 00F7 //drawWaterTemp();
; 0007 00F8 drawModelName();
	RCALL _drawModelName
; 0007 00F9 // drawPump();
; 0007 00FA // //drawCmdState();
; 0007 00FB // drawFire();
; 0007 00FC // drawBurner();
; 0007 00FD // drawAntiFreeze();
; 0007 00FE if(boiler.error == error_None){
	__GETB1MN _boiler,59
	CPI  R30,0
	BRNE _0xE0027
; 0007 00FF if(state != drawn_pictures){
	LDS  R26,_state_S007000F000
	CPI  R26,LOW(0x1)
	BREQ _0xE0028
; 0007 0100 clear(0, 33, 127, 63);
	CALL SUBOPT_0x61
; 0007 0101 state = drawn_pictures;
	LDI  R30,LOW(1)
	STS  _state_S007000F000,R30
; 0007 0102 }
; 0007 0103 drawPump();
_0xE0028:
	RCALL _drawPump
; 0007 0104 //drawCmdState();
; 0007 0105 drawFire();
	RCALL _drawFire
; 0007 0106 drawBurner();
	RCALL _drawBurner
; 0007 0107 drawAntiFreeze();
	RCALL _drawAntiFreeze
; 0007 0108 //drawFan();
; 0007 0109 //drawClapan1();
; 0007 010A //drawClapan2();
; 0007 010B //drawState();
; 0007 010C //drawStartState();
; 0007 010D }
; 0007 010E else{
	RJMP _0xE0029
_0xE0027:
; 0007 010F if(state != drawn_error){
	LDS  R26,_state_S007000F000
	CPI  R26,LOW(0x2)
	BREQ _0xE002A
; 0007 0110 clear(0, 33, 127, 63);
	CALL SUBOPT_0x61
; 0007 0111 drawError();
	RCALL _drawError
; 0007 0112 state = drawn_error;
	LDI  R30,LOW(2)
	STS  _state_S007000F000,R30
; 0007 0113 }
; 0007 0114 }
_0xE002A:
_0xE0029:
; 0007 0115 //PRINT("<<<widgetsUpdate\r\n");
; 0007 0116 }
	RET
; .FEND
;flash unsigned char sun[]=
;0x09, 0x00,
;0x11, 0x01, 0x92, 0x00, 0x7C, 0x00, 0x44, 0x00,
;0xC7, 0x01, 0x44, 0x00, 0x7C, 0x00, 0x92, 0x00,
;0x11, 0x01
;0x11, 0x92, 0x7C, 0x44, 0xC7, 0x44, 0x7C, 0x92,
;0x11, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
;0x00, 0x01,
;};
;flash unsigned char water[]=
;0x09, 0x00,
;0x49, 0x00, 0x49, 0x00, 0x92, 0x00, 0x92, 0x00,
;0x92, 0x00, 0x49, 0x00, 0x49, 0x00, 0x92, 0x00,
;0x92, 0x00,
;0x63, 0x9C, 0x00, 0x63, 0x9C, 0x00, 0x63, 0x9C,
;0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,
;0x01, 0x00,
;};
;flash unsigned char burner[][64]=
;0x14, 0x00,
;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0x06,
;0x00, 0x1C, 0x73, 0x1E, 0x1C, 0x73, 0x9E, 0x1F,
;0x73, 0x9F, 0x1F, 0xE3, 0x81, 0x1D, 0x03, 0x8F,
;0x01, 0xF3, 0x9D, 0x01, 0xF3, 0x9D, 0x01, 0xF6,
;0xDC, 0x00, 0x06, 0xC0, 0x00, 0x1C, 0x70, 0x00,
;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
;0x00, 0xF8, 0x3F, 0x00
;0xC0, 0xF0, 0x38, 0x1C, 0xCC, 0xCE, 0xC6, 0x06,
;0x06, 0xC6, 0xC6, 0xC6, 0xC6, 0x06, 0x06, 0x86,
;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
;0x80, 0xB9, 0x3B, 0x3B, 0x3A, 0x1F, 0x05, 0x3D,
;0x3D, 0xB9, 0x80, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;},
;0x14, 0x00,
;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0xC6,
;0x01, 0x1C, 0xE3, 0x01, 0x1C, 0xE3, 0x9C, 0x1F,
;0xC3, 0xBE, 0x1F, 0x83, 0xBF, 0x1D, 0xFB, 0x83,
;0x01, 0xFB, 0x8E, 0x01, 0x73, 0x8E, 0x01, 0x06,
;0xCF, 0x00, 0x06, 0xC7, 0x00, 0x1C, 0x70, 0x00,
;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
;0x00, 0xF8, 0x3F, 0x00
;0xC0, 0xF0, 0x38, 0x1C, 0x0C, 0xCE, 0xE6, 0xE6,
;0x66, 0x06, 0x86, 0x86, 0x86, 0x06, 0x06, 0x86,
;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
;0x8C, 0x9C, 0x1C, 0x1D, 0x0F, 0x66, 0x7F, 0x7B,
;0x3B, 0x83, 0x83, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;},
;0x14, 0x00,
;0x00, 0x00, 0x1C, 0xE0, 0xFF, 0x1F, 0xF8, 0xFF,
;0x1F, 0x3C, 0x00, 0x1C, 0x0E, 0x00, 0x1C, 0x06,
;0x07, 0x1C, 0x23, 0x0F, 0x1C, 0x33, 0x8F, 0x1F,
;0x7B, 0x83, 0x1F, 0xFB, 0x9F, 0x1D, 0x33, 0xBD,
;0x01, 0x03, 0xB9, 0x01, 0xE3, 0x99, 0x01, 0xE6,
;0xC1, 0x00, 0xC6, 0xC1, 0x00, 0x1C, 0x70, 0x00,
;0x78, 0x38, 0x00, 0xF8, 0x3F, 0x00, 0x98, 0x33,
;0x00, 0xF8, 0x3F, 0x00
;0xC0, 0xF0, 0x38, 0x1C, 0x8C, 0xCE, 0x06, 0x06,
;0xE6, 0xE6, 0xE6, 0xC6, 0x06, 0x06, 0x06, 0x86,
;0x86, 0x86, 0xFF, 0xFF, 0xFF, 0x1F, 0x7F, 0xE0,
;0x83, 0x87, 0x37, 0x73, 0x72, 0x7F, 0x03, 0x06,
;0x1E, 0x9E, 0x8C, 0xE0, 0x7F, 0x1F, 0x01, 0x03,
;0x03, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0B,
;0x0B, 0x0E, 0x0E, 0x0E, 0x0A, 0x0B, 0x0F, 0x0F,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;flash unsigned char flame[]=
;0x0F, 0x00,
;0x0C, 0x00,
;0x38, 0x00, 0xFE, 0x01, 0xFF, 0x03, 0xFF, 0x07,
;0xE1, 0x0F, 0xC0, 0x7F, 0xE0, 0x3F, 0xF1, 0x1F,
;0xFF, 0x0F, 0xFF, 0x07, 0xFE, 0x03, 0x78, 0x00,
;0x9C, 0x0E, 0x0E, 0x0F, 0x8F, 0xDF, 0xFE, 0xFE,
;0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0x60, 0x20, 0x03,
;0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07,
;0x07, 0x03, 0x01, 0x00, 0x00, 0x00,
;};
;flash unsigned char circulation[]=
;0x13, 0x00,
;0x20, 0x00, 0x00, 0x30, 0x0F, 0x00, 0xF8, 0x3F,
;0x00, 0xF8, 0xF0, 0x00, 0x30, 0xC0, 0x01, 0x20,
;0x80, 0x01, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00,
;0x03, 0x00, 0x03, 0x03, 0x80, 0x07, 0x03, 0xC0,
;0x0F, 0x03, 0x00, 0x03, 0x03, 0x00, 0x03, 0x06,
;0x80, 0x03, 0x0E, 0x80, 0x01, 0x5C, 0xC0, 0x01,
;0x78, 0xF0, 0x00, 0x70, 0x3E, 0x00, 0x78, 0x0E,
;0x00,
;0xC0, 0xC0, 0x00, 0x0C, 0x1E, 0x3F, 0x0C, 0x0C,
;0x06, 0x06, 0x06, 0x06, 0x0C, 0x0C, 0x18, 0x38,
;0x30, 0x00, 0x00, 0x00, 0x1F, 0x7F, 0xE0, 0xC0,
;0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x84, 0xE6, 0xFF, 0x3F, 0x06, 0x04,
;0x00, 0x00, 0x00, 0x05, 0x07, 0x07, 0x07, 0x00,
;0x00, 0x06, 0x06, 0x06, 0x03, 0x03, 0x01, 0x01,
;0x00, 0x00, 0x00, 0x00,
;};
;flash unsigned char error_icon[]=
;0x14, 0x00,
;0x00, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1B,
;0x00, 0x80, 0x31, 0x00, 0x80, 0x31, 0x00, 0xC0,
;0x60, 0x00, 0xE0, 0xEE, 0x00, 0x60, 0xCE, 0x00,
;0x30, 0x8E, 0x01, 0x30, 0x8E, 0x01, 0x18, 0x0E,
;0x03, 0x18, 0x0E, 0x03, 0x0C, 0x0E, 0x06, 0x0C,
;0x04, 0x06, 0x06, 0x00, 0x0C, 0x06, 0x0E, 0x0C,
;0x03, 0x0E, 0x18, 0x03, 0x00, 0x18, 0xFF, 0xFF,
;0x1F, 0xFF, 0xFF, 0x1F,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0x78,
;0x1E, 0xC7, 0xC3, 0xC7, 0x1E, 0x78, 0xE0, 0xC0,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0,
;0x3C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x9F, 0xBF,
;0x9F, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x3C, 0xF0,
;0xC0, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C,
;0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0C,
;0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F,
;};
;flash unsigned char snow[]=
;0x14, 0x00,
;0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x60, 0x0D,
;0x00, 0xC8, 0x27, 0x00, 0x08, 0x21, 0x00, 0x0B,
;0xA1, 0x01, 0x0E, 0xE1, 0x00, 0x3C, 0x79, 0x00,
;0x67, 0xCD, 0x01, 0xC0, 0x07, 0x00, 0xC0, 0x07,
;0x00, 0x67, 0xCD, 0x01, 0x3C, 0x79, 0x00, 0x0E,
;0xE1, 0x00, 0x0B, 0xA1, 0x01, 0x88, 0x23, 0x00,
;0xC8, 0x27, 0x00, 0x60, 0x0D, 0x00, 0x00, 0x01,
;0x00, 0x00, 0x01, 0x00,
;0x20, 0x60, 0xC0, 0xF8, 0x80, 0x84, 0x0C, 0x08,
;0xFF, 0x08, 0x0C, 0x84, 0x80, 0xF8, 0xC0, 0x60,
;0x20, 0x49, 0x69, 0x39, 0xF0, 0x10, 0x19, 0x0F,
;0x86, 0xFF, 0x86, 0x0F, 0x19, 0x10, 0xF0, 0x39,
;0x69, 0x49, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02,
;0x03, 0x01, 0x0F, 0x01, 0x03, 0x02, 0x00, 0x01,
;0x00, 0x00, 0x00,
;};
;flash unsigned char disk[]=
;0x14, 0x00,
;0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x32, 0xF0,
;0x07, 0x32, 0xD0, 0x0D, 0x32, 0xD0, 0x09, 0x32,
;0xF0, 0x09, 0x32, 0xF0, 0x09, 0xF2, 0xFF, 0x08,
;0x02, 0x00, 0x08, 0xF2, 0xFF, 0x09, 0xFA, 0xFF,
;0x0B, 0x0E, 0x00, 0x0A, 0xEE, 0xFF, 0x0A, 0xEE,
;0xFF, 0x0A, 0xEE, 0xFF, 0x0A, 0xEE, 0xFF, 0x0A,
;0xEE, 0xFF, 0x0A, 0x0E, 0x00, 0x0A, 0x0E, 0x00,
;0x0E, 0xFE, 0xFF, 0x0F,
;0x00, 0xFE, 0x02, 0x02, 0xFE, 0xFE, 0x82, 0x82,
;0x82, 0x82, 0x82, 0x82, 0xFE, 0xE6, 0xFE, 0xFE,
;0x7E, 0x06, 0x0C, 0xF8, 0x00, 0xFF, 0xF8, 0xFC,
;0x06, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6, 0xF6,
;0xF6, 0xF6, 0xF6, 0xF6, 0x06, 0xFC, 0x00, 0xFF,
;0x00, 0x0F, 0x0F, 0x0F, 0x08, 0x09, 0x09, 0x09,
;0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
;0x08, 0x0F, 0x0C, 0x0F,
;};
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_st7920_delay_G100:
; .FSTART _st7920_delay_G100
    nop
    nop
    nop
	RET
; .FEND
_st7920_wrbus_G100:
; .FSTART _st7920_wrbus_G100
	ST   -Y,R17
	MOV  R17,R26
	CBI  0x15,2
	SBI  0x15,1
	LDI  R30,LOW(255)
	OUT  0x1A,R30
	OUT  0x1B,R17
	RCALL _st7920_delay_G100
	CBI  0x15,1
	RJMP _0x2140015
; .FEND
_st7920_rdbus_G100:
; .FSTART _st7920_rdbus_G100
	ST   -Y,R17
	CALL SUBOPT_0x62
	IN   R17,25
	CBI  0x15,1
	MOV  R30,R17
	RJMP _0x2140015
; .FEND
_st7920_busy_G100:
; .FSTART _st7920_busy_G100
	CBI  0x15,3
	CALL SUBOPT_0x62
_0x2000003:
	SBIC 0x19,7
	RJMP _0x2000003
	CBI  0x15,1
	__DELAY_USB 3
	RET
; .FEND
_st7920_wrdata:
; .FSTART _st7920_wrdata
	ST   -Y,R17
	MOV  R17,R26
	RCALL _st7920_busy_G100
	SBI  0x15,3
	MOV  R26,R17
	RCALL _st7920_wrbus_G100
	RJMP _0x2140015
; .FEND
_st7920_rddata:
; .FSTART _st7920_rddata
	RCALL _st7920_busy_G100
	SBI  0x15,3
	RCALL _st7920_rdbus_G100
	RET
; .FEND
_st7920_wrcmd:
; .FSTART _st7920_wrcmd
	ST   -Y,R17
	MOV  R17,R26
	RCALL _st7920_busy_G100
	MOV  R26,R17
	RCALL _st7920_wrbus_G100
	RJMP _0x2140015
; .FEND
_st7920_setxy_G100:
; .FSTART _st7920_setxy_G100
	CALL SUBOPT_0x63
	MOV  R30,R17
	ANDI R30,LOW(0x1F)
	ORI  R30,0x80
	MOV  R26,R30
	RCALL _st7920_wrcmd
	CPI  R17,32
	BRLO _0x2000006
	ORI  R16,LOW(128)
_0x2000006:
	MOV  R30,R16
	SWAP R30
	ANDI R30,0xF
	ORI  R30,0x80
	MOV  R26,R30
	RCALL _st7920_wrcmd
	JMP  _0x214000D
; .FEND
_glcd_display:
; .FSTART _glcd_display
	ST   -Y,R17
	MOV  R17,R26
	CALL SUBOPT_0x64
	CPI  R17,0
	BREQ _0x2000007
	LDI  R30,LOW(12)
	RJMP _0x2000008
_0x2000007:
	LDI  R30,LOW(8)
_0x2000008:
	MOV  R26,R30
	RCALL _st7920_wrcmd
	CPI  R17,0
	BREQ _0x200000A
	LDI  R30,LOW(2)
	RJMP _0x200000B
_0x200000A:
	LDI  R30,LOW(0)
_0x200000B:
	STS  _st7920_graphics_on_G100,R30
	CALL SUBOPT_0x64
	CALL SUBOPT_0x65
_0x2140015:
	LD   R17,Y+
	RET
; .FEND
_glcd_cleartext:
; .FSTART _glcd_cleartext
	CALL SUBOPT_0x64
	LDI  R26,LOW(1)
	RCALL _st7920_wrcmd
	LDI  R30,LOW(0)
	STS  _yt_G100,R30
	STS  _xt_G100,R30
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_moveto
	RET
; .FEND
_glcd_cleargraphics:
; .FSTART _glcd_cleargraphics
	CALL __SAVELOCR4
	LDI  R19,0
	__GETB1MN _glcd_state,1
	CPI  R30,0
	BREQ _0x200000D
	LDI  R19,LOW(255)
_0x200000D:
	CALL SUBOPT_0x65
	LDI  R16,LOW(0)
_0x200000E:
	CPI  R16,64
	BRSH _0x2000010
	LDI  R30,LOW(0)
	ST   -Y,R30
	MOV  R26,R16
	SUBI R16,-1
	RCALL _st7920_setxy_G100
	LDI  R17,LOW(16)
_0x2000011:
	MOV  R30,R17
	SUBI R17,1
	CPI  R30,0
	BREQ _0x2000013
	MOV  R26,R19
	RCALL _st7920_wrdata
	RJMP _0x2000011
_0x2000013:
	RJMP _0x200000E
_0x2000010:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_moveto
_0x2140014:
	CALL __LOADLOCR4
	ADIW R28,4
	RET
; .FEND
_glcd_clear:
; .FSTART _glcd_clear
	RCALL _glcd_cleartext
	RCALL _glcd_cleargraphics
	RET
; .FEND
_glcd_init:
; .FSTART _glcd_init
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
	SBI  0x14,1
	CBI  0x15,1
	SBI  0x14,2
	SBI  0x15,2
	SBI  0x14,3
	CBI  0x15,3
	SBI  0x14,0
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	CBI  0x15,0
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	SBI  0x15,0
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	CALL SUBOPT_0x66
	CALL SUBOPT_0x66
	LDI  R26,LOW(8)
	RCALL _st7920_wrbus_G100
	__DELAY_USW 400
	LDI  R26,LOW(1)
	RCALL _st7920_wrcmd
	LDI  R26,LOW(15)
	LDI  R27,0
	CALL _delay_ms
	LDI  R30,LOW(0)
	STS  _yt_G100,R30
	STS  _xt_G100,R30
	LDI  R26,LOW(6)
	RCALL _st7920_wrcmd
	LDI  R26,LOW(52)
	RCALL _st7920_wrcmd
	LDI  R26,LOW(64)
	RCALL _st7920_wrcmd
	LDI  R26,LOW(2)
	RCALL _st7920_wrcmd
	LDI  R30,LOW(0)
	STS  _st7920_graphics_on_G100,R30
	RCALL _glcd_cleargraphics
	LDI  R26,LOW(1)
	RCALL _glcd_display
	LDI  R30,LOW(1)
	STS  _glcd_state,R30
	LDI  R30,LOW(0)
	__PUTB1MN _glcd_state,1
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,6
	__PUTB1MN _glcd_state,7
	MOV  R0,R16
	OR   R0,R17
	BREQ _0x2000014
	MOVW R26,R16
	LD   R30,X+
	LD   R31,X+
	__PUTW1MN _glcd_state,4
	MOVW R26,R16
	ADIW R26,2
	LD   R30,X+
	LD   R31,X+
	__PUTW1MN _glcd_state,25
	MOVW R26,R16
	ADIW R26,4
	CALL __GETW1P
	RJMP _0x20000A3
_0x2000014:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	__PUTW1MN _glcd_state,4
	__PUTW1MN _glcd_state,25
_0x20000A3:
	__PUTW1MN _glcd_state,27
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,8
	LDI  R30,LOW(255)
	__PUTB1MN _glcd_state,9
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,16
	__POINTW1MN _glcd_state,17
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(255)
	ST   -Y,R30
	LDI  R26,LOW(8)
	LDI  R27,0
	CALL _memset
	LDI  R30,LOW(1)
	RJMP _0x2140012
; .FEND
_st7920_rdbyte_G100:
; .FSTART _st7920_rdbyte_G100
	CALL SUBOPT_0x63
	ST   -Y,R16
	MOV  R26,R17
	RCALL _st7920_setxy_G100
	RCALL _st7920_rddata
	MOV  R30,R16
	ANDI R30,LOW(0xF)
	CPI  R30,LOW(0x8)
	BRLO _0x2000016
	RCALL _st7920_rddata
	STS  _st7920_bits8_15_G100,R30
_0x2000016:
	RCALL _st7920_rddata
	JMP  _0x214000D
; .FEND
_st7920_wrbyte_G100:
; .FSTART _st7920_wrbyte_G100
	CALL SUBOPT_0x67
	MOV  R26,R16
	RCALL _st7920_setxy_G100
	MOV  R30,R19
	ANDI R30,LOW(0xF)
	CPI  R30,LOW(0x8)
	BRLO _0x2000017
	LDS  R26,_st7920_bits8_15_G100
	RCALL _st7920_wrdata
_0x2000017:
	MOV  R26,R17
	RCALL _st7920_wrdata
	JMP  _0x214000E
; .FEND
_glcd_putpixel:
; .FSTART _glcd_putpixel
	CALL __SAVELOCR6
	MOV  R19,R26
	LDD  R18,Y+6
	LDD  R21,Y+7
	CPI  R21,128
	BRSH _0x2000019
	CPI  R18,64
	BRLO _0x2000018
_0x2000019:
	JMP  _0x214000F
_0x2000018:
	CALL SUBOPT_0x65
	ST   -Y,R21
	MOV  R26,R18
	RCALL _st7920_rdbyte_G100
	MOV  R17,R30
	MOV  R30,R21
	CALL SUBOPT_0x68
	MOV  R16,R30
	CPI  R19,0
	BREQ _0x200001B
	OR   R17,R16
	RJMP _0x200001C
_0x200001B:
	MOV  R30,R16
	COM  R30
	AND  R17,R30
_0x200001C:
	ST   -Y,R21
	ST   -Y,R18
	MOV  R26,R17
	RCALL _st7920_wrbyte_G100
	JMP  _0x214000F
; .FEND
_glcd_getpixel:
; .FSTART _glcd_getpixel
	CALL SUBOPT_0x63
	CPI  R16,128
	BRSH _0x200001E
	CPI  R17,64
	BRLO _0x200001D
_0x200001E:
	LDI  R30,LOW(0)
	JMP  _0x214000D
_0x200001D:
	CALL SUBOPT_0x65
	ST   -Y,R16
	MOV  R26,R17
	RCALL _st7920_rdbyte_G100
	MOV  R22,R30
	MOV  R30,R16
	CALL SUBOPT_0x68
	AND  R30,R22
	BREQ _0x2000020
	LDI  R30,LOW(1)
	RJMP _0x2000021
_0x2000020:
	LDI  R30,LOW(0)
_0x2000021:
	JMP  _0x214000D
; .FEND
_st7920_wrmasked_G100:
; .FSTART _st7920_wrmasked_G100
	CALL __SAVELOCR6
	MOV  R16,R26
	LDD  R19,Y+6
	LDD  R18,Y+7
	LDD  R21,Y+8
	LDD  R20,Y+9
	CALL SUBOPT_0x65
	ST   -Y,R20
	MOV  R26,R21
	CALL SUBOPT_0x69
	MOV  R17,R30
	MOV  R30,R16
	CPI  R30,LOW(0x7)
	BREQ _0x2000027
	CPI  R30,LOW(0x8)
	BRNE _0x2000028
_0x2000027:
	ST   -Y,R18
	MOV  R26,R16
	CALL _glcd_mappixcolor1bit
	MOV  R18,R30
	RJMP _0x2000029
_0x2000028:
	CPI  R30,LOW(0x3)
	BRNE _0x200002B
	COM  R18
	RJMP _0x200002C
_0x200002B:
	CPI  R30,0
	BRNE _0x200002D
_0x200002C:
	RJMP _0x200002E
_0x200002D:
	CPI  R30,LOW(0x9)
	BRNE _0x200002F
_0x200002E:
	RJMP _0x2000030
_0x200002F:
	CPI  R30,LOW(0xA)
	BRNE _0x2000031
_0x2000030:
_0x2000029:
	MOV  R30,R19
	COM  R30
	AND  R17,R30
	RJMP _0x2000032
_0x2000031:
	CPI  R30,LOW(0x2)
	BRNE _0x2000033
_0x2000032:
	MOV  R30,R19
	AND  R30,R18
	OR   R17,R30
	RJMP _0x2000025
_0x2000033:
	CPI  R30,LOW(0x1)
	BRNE _0x2000034
	MOV  R30,R19
	AND  R30,R18
	EOR  R17,R30
	RJMP _0x2000025
_0x2000034:
	CPI  R30,LOW(0x4)
	BRNE _0x2000025
	MOV  R30,R19
	COM  R30
	OR   R30,R18
	AND  R17,R30
_0x2000025:
	ST   -Y,R20
	ST   -Y,R21
	MOV  R26,R17
	CALL _glcd_revbits
	MOV  R26,R30
	RCALL _st7920_wrbyte_G100
	JMP  _0x214000B
; .FEND
_glcd_block:
; .FSTART _glcd_block
	ST   -Y,R26
	SBIW R28,7
	CALL __SAVELOCR6
	LDD  R26,Y+20
	CPI  R26,LOW(0x80)
	BRSH _0x2000037
	LDD  R26,Y+19
	CPI  R26,LOW(0x40)
	BRSH _0x2000037
	LDD  R26,Y+18
	CPI  R26,LOW(0x0)
	BREQ _0x2000037
	LDD  R26,Y+17
	CPI  R26,LOW(0x0)
	BRNE _0x2000036
_0x2000037:
	JMP  _0x214000C
_0x2000036:
	LDD  R30,Y+18
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R18,R30
	__PUTBSR 18,8
	LDD  R30,Y+18
	ANDI R30,LOW(0x7)
	STD  Y+11,R30
	CPI  R30,0
	BREQ _0x2000039
	LDD  R30,Y+8
	SUBI R30,-LOW(1)
	STD  Y+8,R30
_0x2000039:
	LDD  R16,Y+18
	LDD  R26,Y+20
	CLR  R27
	LDD  R30,Y+18
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	CPI  R26,LOW(0x81)
	LDI  R30,HIGH(0x81)
	CPC  R27,R30
	BRLO _0x200003A
	LDD  R26,Y+20
	LDI  R30,LOW(128)
	SUB  R30,R26
	STD  Y+18,R30
_0x200003A:
	LDD  R30,Y+17
	STD  Y+10,R30
	LDD  R26,Y+19
	CLR  R27
	LDD  R30,Y+17
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	CPI  R26,LOW(0x41)
	LDI  R30,HIGH(0x41)
	CPC  R27,R30
	BRLO _0x200003B
	LDD  R26,Y+19
	LDI  R30,LOW(64)
	SUB  R30,R26
	STD  Y+17,R30
_0x200003B:
	LDD  R30,Y+13
	CPI  R30,LOW(0x6)
	BREQ PC+2
	RJMP _0x200003F
	LDD  R30,Y+16
	CPI  R30,LOW(0x1)
	BRNE _0x2000043
	JMP  _0x214000C
_0x2000043:
	CPI  R30,LOW(0x3)
	BRNE _0x2000046
	__GETW1MN _glcd_state,27
	SBIW R30,0
	BRNE _0x2000045
	JMP  _0x214000C
_0x2000045:
_0x2000046:
	LDD  R30,Y+11
	CPI  R30,0
	BRNE _0x2000048
	LDD  R26,Y+18
	CP   R16,R26
	BREQ _0x2000047
_0x2000048:
	MOV  R30,R18
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	LDI  R31,0
	CALL SUBOPT_0x6A
	LDD  R17,Y+17
_0x200004A:
	CPI  R17,0
	BREQ _0x200004C
	MOV  R19,R18
_0x200004D:
	PUSH R19
	SUBI R19,-1
	LDD  R30,Y+8
	POP  R26
	CP   R26,R30
	BRSH _0x200004F
	CALL SUBOPT_0x6B
	RJMP _0x200004D
_0x200004F:
	MOV  R30,R18
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDI  R31,0
	CALL SUBOPT_0x6A
	SUBI R17,LOW(1)
	RJMP _0x200004A
_0x200004C:
_0x2000047:
	LDD  R18,Y+17
	LDD  R30,Y+10
	CP   R30,R18
	BREQ _0x2000050
	MOV  R26,R18
	CLR  R27
	LDD  R30,Y+8
	LDI  R31,0
	CALL __MULW12U
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	CALL SUBOPT_0x6A
_0x2000051:
	PUSH R18
	SUBI R18,-1
	LDD  R30,Y+10
	POP  R26
	CP   R26,R30
	BRSH _0x2000053
	LDI  R19,LOW(0)
_0x2000054:
	PUSH R19
	SUBI R19,-1
	LDD  R30,Y+8
	POP  R26
	CP   R26,R30
	BRSH _0x2000056
	CALL SUBOPT_0x6B
	RJMP _0x2000054
_0x2000056:
	RJMP _0x2000051
_0x2000053:
_0x2000050:
	RJMP _0x200003E
_0x200003F:
	CPI  R30,LOW(0x9)
	BRNE _0x2000057
	LDI  R30,LOW(0)
	RJMP _0x20000A4
_0x2000057:
	CPI  R30,LOW(0xA)
	BRNE _0x200003E
	LDI  R30,LOW(255)
_0x20000A4:
	STD  Y+10,R30
	ST   -Y,R30
	LDD  R26,Y+14
	CALL _glcd_mappixcolor1bit
	STD  Y+10,R30
_0x200003E:
	LDD  R30,Y+20
	ANDI R30,LOW(0x7)
	MOV  R19,R30
	LDI  R30,LOW(8)
	SUB  R30,R19
	MOV  R18,R30
	MOV  R21,R18
	LDD  R26,Y+18
	CP   R18,R26
	BRLO _0x200005B
	LDD  R21,Y+18
	RJMP _0x200005C
_0x200005B:
	CPI  R19,0
	BREQ _0x200005D
	MOV  R20,R19
	LDD  R26,Y+18
	CPI  R26,LOW(0x9)
	BRSH _0x200005E
	LDD  R30,Y+18
	SUB  R30,R18
	MOV  R20,R30
_0x200005E:
	MOV  R30,R20
	LDI  R31,0
	SUBI R30,LOW(-__glcd_mask*2)
	SBCI R31,HIGH(-__glcd_mask*2)
	LPM  R20,Z
_0x200005D:
_0x200005C:
	ST   -Y,R19
	MOV  R26,R21
	CALL _glcd_getmask
	MOV  R21,R30
	LDD  R26,Y+11
	CP   R18,R26
	BRSH _0x200005F
	LDD  R30,Y+11
	SUB  R30,R18
	STD  Y+11,R30
_0x200005F:
	LDD  R30,Y+11
	LDI  R31,0
	SUBI R30,LOW(-__glcd_mask*2)
	SBCI R31,HIGH(-__glcd_mask*2)
	LPM  R0,Z
	STD  Y+12,R0
	CALL SUBOPT_0x65
_0x2000060:
	LDD  R30,Y+17
	SUBI R30,LOW(1)
	STD  Y+17,R30
	SUBI R30,-LOW(1)
	BRNE PC+2
	RJMP _0x2000062
	LDI  R17,LOW(0)
	LDD  R16,Y+20
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	STD  Y+6,R30
	STD  Y+6+1,R31
	CPI  R19,0
	BRNE PC+2
	RJMP _0x2000063
	__PUTBSR 20,11
	LDD  R26,Y+13
	CPI  R26,LOW(0x6)
	BREQ PC+2
	RJMP _0x2000064
_0x2000065:
	LDD  R30,Y+18
	CP   R17,R30
	BRLO PC+2
	RJMP _0x2000067
	ST   -Y,R16
	LDD  R26,Y+20
	CALL SUBOPT_0x69
	AND  R30,R21
	MOV  R26,R30
	MOV  R30,R19
	CALL __LSRB12
	STD  Y+9,R30
	CALL SUBOPT_0x6C
	MOV  R1,R30
	MOV  R30,R19
	MOV  R26,R21
	CALL __LSRB12
	COM  R30
	AND  R30,R1
	LDD  R26,Y+9
	OR   R30,R26
	STD  Y+9,R30
	LDD  R26,Y+18
	CP   R18,R26
	BRSH _0x2000069
	MOV  R30,R16
	LSR  R30
	LSR  R30
	LSR  R30
	CPI  R30,LOW(0xF)
	BRLO _0x2000068
_0x2000069:
	CALL SUBOPT_0x6D
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+12
	CALL _glcd_writemem
	RJMP _0x2000067
_0x2000068:
	LDD  R26,Y+18
	SUB  R26,R17
	CPI  R26,LOW(0x8)
	BRSH _0x200006B
	LDD  R30,Y+12
	STD  Y+11,R30
_0x200006B:
	SUBI R16,-LOW(8)
	ST   -Y,R16
	LDD  R26,Y+20
	CALL SUBOPT_0x69
	LDD  R26,Y+11
	AND  R30,R26
	MOV  R26,R30
	MOV  R30,R18
	CALL __LSLB12
	STD  Y+10,R30
	MOV  R30,R18
	LDD  R26,Y+11
	CALL __LSLB12
	COM  R30
	LDD  R26,Y+9
	AND  R30,R26
	LDD  R26,Y+10
	OR   R30,R26
	STD  Y+10,R30
	CALL SUBOPT_0x6D
	ADIW R30,1
	STD  Y+7,R30
	STD  Y+7+1,R31
	SBIW R30,1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+13
	CALL _glcd_writemem
	SUBI R17,-LOW(8)
	RJMP _0x2000065
_0x2000067:
	RJMP _0x200006C
_0x2000064:
_0x200006D:
	LDD  R30,Y+18
	CP   R17,R30
	BRSH _0x200006F
	LDD  R30,Y+13
	CPI  R30,LOW(0x9)
	BREQ _0x2000074
	CPI  R30,LOW(0xA)
	BRNE _0x2000076
_0x2000074:
	RJMP _0x2000072
_0x2000076:
	CALL SUBOPT_0x6D
	ADIW R30,1
	STD  Y+7,R30
	STD  Y+7+1,R31
	SBIW R30,1
	CLR  R22
	CLR  R23
	MOVW R26,R30
	MOVW R24,R22
	CALL _glcd_readmem
	STD  Y+10,R30
_0x2000072:
	ST   -Y,R16
	LDD  R30,Y+20
	ST   -Y,R30
	MOV  R30,R19
	LDD  R26,Y+12
	CALL __LSLB12
	ST   -Y,R30
	ST   -Y,R21
	LDD  R26,Y+17
	RCALL _st7920_wrmasked_G100
	LDD  R26,Y+18
	CP   R18,R26
	BRSH _0x200006F
	MOV  R30,R16
	LSR  R30
	LSR  R30
	LSR  R30
	CPI  R30,LOW(0xF)
	BRSH _0x200006F
	SUB  R26,R17
	CPI  R26,LOW(0x8)
	BRSH _0x2000079
	LDD  R30,Y+12
	STD  Y+11,R30
_0x2000079:
	SUBI R16,-LOW(8)
	ST   -Y,R16
	LDD  R30,Y+20
	ST   -Y,R30
	MOV  R30,R18
	LDD  R26,Y+12
	CALL __LSRB12
	CALL SUBOPT_0x6E
	SUBI R17,-LOW(8)
	RJMP _0x200006D
_0x200006F:
_0x200006C:
	RJMP _0x200007A
_0x2000063:
	__PUTBSR 21,11
_0x200007B:
	LDD  R30,Y+18
	CP   R17,R30
	BRSH _0x200007D
	LDD  R26,Y+18
	SUB  R26,R17
	CPI  R26,LOW(0x8)
	BRSH _0x200007E
	LDD  R30,Y+12
	STD  Y+11,R30
_0x200007E:
	LDD  R30,Y+13
	CPI  R30,LOW(0x9)
	BREQ _0x2000083
	CPI  R30,LOW(0xA)
	BRNE _0x2000085
_0x2000083:
	RJMP _0x2000081
_0x2000085:
	LDD  R26,Y+13
	CPI  R26,LOW(0x6)
	BRNE _0x2000087
	LDD  R26,Y+11
	CPI  R26,LOW(0xFF)
	BREQ _0x2000086
_0x2000087:
	CALL SUBOPT_0x6C
	STD  Y+10,R30
_0x2000086:
_0x2000081:
	LDD  R26,Y+13
	CPI  R26,LOW(0x6)
	BRNE _0x2000089
	CALL SUBOPT_0x6D
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R16
	LDD  R26,Y+23
	CALL SUBOPT_0x69
	LDD  R26,Y+14
	AND  R30,R26
	MOV  R0,R30
	LDD  R30,Y+14
	COM  R30
	LDD  R26,Y+13
	AND  R30,R26
	OR   R30,R0
	MOV  R26,R30
	CALL _glcd_writemem
	RJMP _0x200008A
_0x2000089:
	ST   -Y,R16
	LDD  R30,Y+20
	ST   -Y,R30
	LDD  R30,Y+12
	CALL SUBOPT_0x6E
_0x200008A:
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ADIW R30,1
	STD  Y+6,R30
	STD  Y+6+1,R31
	SUBI R16,-LOW(8)
	SUBI R17,-LOW(8)
	RJMP _0x200007B
_0x200007D:
_0x200007A:
	LDD  R30,Y+19
	SUBI R30,-LOW(1)
	STD  Y+19,R30
	LDD  R30,Y+8
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+14,R30
	STD  Y+14+1,R31
	RJMP _0x2000060
_0x2000062:
	RJMP _0x214000C
; .FEND
_glcd_putcharcg:
; .FSTART _glcd_putcharcg
	CALL __SAVELOCR6
	MOV  R19,R26
	LDD  R18,Y+6
	LDD  R21,Y+7
	CPI  R21,16
	BRLO _0x200008D
	LDI  R21,LOW(15)
_0x200008D:
	CPI  R18,4
	BRLO _0x200008E
	LDI  R18,LOW(3)
_0x200008E:
	MOV  R30,R18
	LDI  R31,0
	SUBI R30,LOW(-_st7920_base_y_G100*2)
	SBCI R31,HIGH(-_st7920_base_y_G100*2)
	LPM  R26,Z
	MOV  R30,R21
	LSR  R30
	OR   R30,R26
	MOV  R17,R30
	CALL SUBOPT_0x64
	MOV  R26,R17
	RCALL _st7920_wrcmd
	RCALL _st7920_rddata
	SBRS R21,0
	RJMP _0x200008F
	RCALL _st7920_rddata
	MOV  R16,R30
_0x200008F:
	MOV  R26,R17
	RCALL _st7920_wrcmd
	SBRS R21,0
	RJMP _0x2000090
	MOV  R26,R16
	RCALL _st7920_wrdata
_0x2000090:
	MOV  R26,R19
	RCALL _st7920_wrdata
	RJMP _0x214000F
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_glcd_clipx:
; .FSTART _glcd_clipx
	CALL SUBOPT_0x6F
	BRLT _0x2020003
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x2140012
_0x2020003:
	__CPWRN 16,17,128
	BRLT _0x2020004
	LDI  R30,LOW(127)
	LDI  R31,HIGH(127)
	RJMP _0x2140012
_0x2020004:
	RJMP _0x2140013
; .FEND
_glcd_clipy:
; .FSTART _glcd_clipy
	CALL SUBOPT_0x6F
	BRLT _0x2020005
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x2140012
_0x2020005:
	__CPWRN 16,17,64
	BRLT _0x2020006
	LDI  R30,LOW(63)
	LDI  R31,HIGH(63)
	RJMP _0x2140012
_0x2020006:
_0x2140013:
	MOVW R30,R16
_0x2140012:
	LD   R16,Y+
	LD   R17,Y+
	RET
; .FEND
_glcd_setpixel:
; .FSTART _glcd_setpixel
	CALL SUBOPT_0x63
	ST   -Y,R16
	ST   -Y,R17
	LDS  R26,_glcd_state
	RCALL _glcd_putpixel
	RJMP _0x214000D
; .FEND
_glcd_imagesize:
; .FSTART _glcd_imagesize
	CALL __SAVELOCR4
	MOV  R16,R26
	LDD  R19,Y+4
	CPI  R19,129
	BRSH _0x2020008
	CPI  R16,65
	BRLO _0x2020007
_0x2020008:
	CALL SUBOPT_0x2
	RJMP _0x2140011
_0x2020007:
	MOV  R30,R19
	ANDI R30,LOW(0x7)
	MOV  R17,R30
	LSR  R19
	LSR  R19
	LSR  R19
	CPI  R17,0
	BREQ _0x202000A
	SUBI R19,-1
_0x202000A:
	MOV  R26,R19
	CLR  R27
	CLR  R24
	CLR  R25
	MOV  R30,R16
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __MULD12U
	__ADDD1N 4
_0x2140011:
	CALL __LOADLOCR4
	ADIW R28,5
	RET
; .FEND
_glcd_getcharw_G101:
; .FSTART _glcd_getcharw_G101
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,3
	CALL SUBOPT_0x70
	MOVW R16,R30
	MOV  R0,R16
	OR   R0,R17
	BRNE _0x202000B
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x2140010
_0x202000B:
	CALL SUBOPT_0x71
	STD  Y+7,R0
	CALL SUBOPT_0x71
	STD  Y+6,R0
	CALL SUBOPT_0x71
	STD  Y+8,R0
	LDD  R30,Y+11
	LDD  R26,Y+8
	CP   R30,R26
	BRSH _0x202000C
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x2140010
_0x202000C:
	MOVW R30,R16
	__ADDWRN 16,17,1
	LPM  R21,Z
	LDD  R26,Y+8
	CLR  R27
	CLR  R30
	ADD  R26,R21
	ADC  R27,R30
	LDD  R30,Y+11
	LDI  R31,0
	CP   R30,R26
	CPC  R31,R27
	BRLO _0x202000D
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x2140010
_0x202000D:
	LDD  R30,Y+7
	CPI  R30,0
	BREQ _0x202000E
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	ST   X,R30
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R20,R30
	LDD  R30,Y+7
	ANDI R30,LOW(0x7)
	BREQ _0x202000F
	SUBI R20,-LOW(1)
_0x202000F:
	LDD  R26,Y+8
	LDD  R30,Y+11
	SUB  R30,R26
	LDI  R31,0
	MOVW R26,R30
	LDD  R30,Y+6
	LDI  R31,0
	CALL __MULW12U
	MOVW R26,R30
	MOV  R30,R20
	LDI  R31,0
	CALL __MULW12U
	ADD  R30,R16
	ADC  R31,R17
	RJMP _0x2140010
_0x202000E:
	MOVW R18,R16
	MOV  R30,R21
	LDI  R31,0
	__ADDWRR 16,17,30,31
_0x2020010:
	LDD  R26,Y+8
	SUBI R26,-LOW(1)
	STD  Y+8,R26
	SUBI R26,LOW(1)
	LDD  R30,Y+11
	CP   R26,R30
	BRSH _0x2020012
	MOVW R30,R18
	LPM  R30,Z
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R20,R30
	MOVW R30,R18
	__ADDWRN 18,19,1
	LPM  R30,Z
	ANDI R30,LOW(0x7)
	BREQ _0x2020013
	SUBI R20,-LOW(1)
_0x2020013:
	LDD  R26,Y+6
	CLR  R27
	MOV  R30,R20
	LDI  R31,0
	CALL __MULW12U
	__ADDWRR 16,17,30,31
	RJMP _0x2020010
_0x2020012:
	MOVW R30,R18
	LPM  R30,Z
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	ST   X,R30
	MOVW R30,R16
_0x2140010:
	CALL __LOADLOCR6
	ADIW R28,12
	RET
; .FEND
_glcd_new_line_G101:
; .FSTART _glcd_new_line_G101
	LDI  R30,LOW(0)
	__PUTB1MN _glcd_state,2
	__GETB2MN _glcd_state,3
	CLR  R27
	CALL SUBOPT_0x72
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	__GETB1MN _glcd_state,7
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	CALL SUBOPT_0x73
	RET
; .FEND
_glcd_putchar:
; .FSTART _glcd_putchar
	ST   -Y,R26
	SBIW R28,1
	CALL SUBOPT_0x70
	SBIW R30,0
	BRNE PC+2
	RJMP _0x202003B
	LDD  R26,Y+7
	CPI  R26,LOW(0xA)
	BRNE _0x202003C
	RJMP _0x202003D
_0x202003C:
	LDD  R30,Y+7
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,7
	RCALL _glcd_getcharw_G101
	MOVW R20,R30
	SBIW R30,0
	BRNE _0x202003E
	RJMP _0x214000F
_0x202003E:
	__GETB1MN _glcd_state,6
	LDD  R26,Y+6
	ADD  R30,R26
	MOV  R19,R30
	__GETB2MN _glcd_state,2
	CLR  R27
	CALL SUBOPT_0x74
	__CPWRN 16,17,129
	BRLO _0x202003F
	MOV  R16,R19
	CLR  R17
	RCALL _glcd_new_line_G101
_0x202003F:
	CALL SUBOPT_0x75
	LDD  R30,Y+8
	ST   -Y,R30
	CALL SUBOPT_0x72
	ST   -Y,R30
	LDI  R30,LOW(1)
	ST   -Y,R30
	ST   -Y,R21
	ST   -Y,R20
	LDI  R26,LOW(7)
	CALL SUBOPT_0x76
	LDD  R26,Y+6
	ADD  R30,R26
	ST   -Y,R30
	__GETB1MN _glcd_state,3
	ST   -Y,R30
	__GETB1MN _glcd_state,6
	ST   -Y,R30
	CALL SUBOPT_0x72
	CALL SUBOPT_0x77
	CALL SUBOPT_0x76
	ST   -Y,R30
	__GETB2MN _glcd_state,3
	CALL SUBOPT_0x72
	ADD  R30,R26
	ST   -Y,R30
	ST   -Y,R19
	__GETB1MN _glcd_state,7
	CALL SUBOPT_0x77
	RCALL _glcd_block
	LDI  R30,LOW(128)
	LDI  R31,HIGH(128)
	CP   R30,R16
	CPC  R31,R17
	BRNE _0x2020040
_0x202003D:
	RCALL _glcd_new_line_G101
	RJMP _0x214000F
_0x2020040:
	RJMP _0x2020041
_0x202003B:
	LDD  R26,Y+7
	CPI  R26,LOW(0xA)
	BREQ _0x2020043
	__GETB1MN _glcd_state,2
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R19,R30
	__GETB1MN _glcd_state,3
	SWAP R30
	ANDI R30,0xF
	MOV  R18,R30
	ST   -Y,R19
	ST   -Y,R18
	LDD  R26,Y+9
	RCALL _glcd_putcharcg
	MOV  R30,R19
	LSL  R30
	LSL  R30
	LSL  R30
	__PUTB1MN _glcd_state,2
	LDI  R26,LOW(16)
	MUL  R18,R26
	MOVW R30,R0
	__PUTB1MN _glcd_state,3
	CALL SUBOPT_0x75
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R30,LOW(16)
	CALL SUBOPT_0x77
	CALL SUBOPT_0x76
	LDI  R31,0
	ADIW R30,8
	MOVW R16,R30
	__CPWRN 16,17,128
	BRLO _0x2020044
_0x2020043:
	__GETWRN 16,17,0
	__GETB1MN _glcd_state,3
	LDI  R31,0
	ADIW R30,16
	MOVW R26,R30
	CALL SUBOPT_0x73
_0x2020044:
_0x2020041:
	__PUTBMRN _glcd_state,2,16
_0x214000F:
	CALL __LOADLOCR6
	ADIW R28,8
	RET
; .FEND
_glcd_putimagef:
; .FSTART _glcd_putimagef
	CALL __SAVELOCR6
	MOV  R21,R26
	LDD  R20,Y+8
	CPI  R21,5
	BRSH _0x2020067
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	LPM  R16,Z+
	CALL SUBOPT_0x78
	LPM  R17,Z+
	CALL SUBOPT_0x78
	LPM  R18,Z+
	CALL SUBOPT_0x78
	LPM  R19,Z+
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R30,Y+9
	ST   -Y,R30
	ST   -Y,R20
	ST   -Y,R16
	ST   -Y,R18
	LDI  R30,LOW(1)
	ST   -Y,R30
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R21
	CALL _glcd_block
	ST   -Y,R16
	MOV  R26,R18
	RCALL _glcd_imagesize
	RJMP _0x214000B
_0x2020067:
	CALL SUBOPT_0x2
	RJMP _0x214000B
; .FEND
_glcd_putpixelm_G101:
; .FSTART _glcd_putpixelm_G101
	CALL SUBOPT_0x67
	ST   -Y,R16
	__GETB1MN _glcd_state,9
	AND  R30,R17
	BREQ _0x202006D
	LDS  R30,_glcd_state
	RJMP _0x202006E
_0x202006D:
	__GETB1MN _glcd_state,1
_0x202006E:
	MOV  R26,R30
	CALL _glcd_putpixel
	LSL  R17
	CPI  R17,0
	BRNE _0x2020070
	LDI  R17,LOW(1)
_0x2020070:
	MOV  R30,R17
_0x214000E:
	CALL __LOADLOCR4
	ADIW R28,6
	RET
; .FEND
_glcd_moveto:
; .FSTART _glcd_moveto
	CALL SUBOPT_0x63
	MOV  R26,R16
	CLR  R27
	RCALL _glcd_clipx
	__PUTB1MN _glcd_state,2
	MOV  R26,R17
	CLR  R27
	CALL SUBOPT_0x73
_0x214000D:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,3
	RET
; .FEND
_glcd_line:
; .FSTART _glcd_line
	ST   -Y,R26
	SBIW R28,11
	CALL __SAVELOCR6
	LDD  R26,Y+20
	CLR  R27
	RCALL _glcd_clipx
	STD  Y+20,R30
	LDD  R26,Y+18
	CLR  R27
	RCALL _glcd_clipx
	STD  Y+18,R30
	LDD  R26,Y+19
	CLR  R27
	RCALL _glcd_clipy
	STD  Y+19,R30
	LDD  R26,Y+17
	CLR  R27
	RCALL _glcd_clipy
	STD  Y+17,R30
	LDD  R30,Y+18
	__PUTB1MN _glcd_state,2
	LDD  R30,Y+17
	__PUTB1MN _glcd_state,3
	LDI  R30,LOW(1)
	STD  Y+8,R30
	LDD  R30,Y+17
	LDD  R26,Y+19
	CP   R30,R26
	BRNE _0x2020071
	LDD  R17,Y+20
	LDD  R26,Y+18
	CP   R17,R26
	BRNE _0x2020072
	ST   -Y,R17
	LDD  R30,Y+20
	ST   -Y,R30
	LDI  R26,LOW(1)
	RCALL _glcd_putpixelm_G101
	RJMP _0x214000C
_0x2020072:
	LDD  R26,Y+18
	CP   R17,R26
	BRSH _0x2020073
	LDD  R30,Y+18
	SUB  R30,R17
	MOV  R16,R30
	__GETWRN 20,21,1
	RJMP _0x2020074
_0x2020073:
	LDD  R26,Y+18
	MOV  R30,R17
	SUB  R30,R26
	MOV  R16,R30
	__GETWRN 20,21,-1
_0x2020074:
_0x2020076:
	LDD  R19,Y+19
	__GETB1MN _glcd_state,8
	STD  Y+6,R30
_0x2020078:
	CALL SUBOPT_0x79
	BREQ _0x202007A
	ST   -Y,R17
	ST   -Y,R19
	INC  R19
	LDD  R26,Y+10
	RCALL _glcd_putpixelm_G101
	STD  Y+7,R30
	RJMP _0x2020078
_0x202007A:
	LDD  R30,Y+7
	STD  Y+8,R30
	ADD  R17,R20
	MOV  R30,R16
	SUBI R16,1
	CPI  R30,0
	BRNE _0x2020076
	RJMP _0x202007B
_0x2020071:
	LDD  R30,Y+18
	LDD  R26,Y+20
	CP   R30,R26
	BRNE _0x202007C
	LDD  R19,Y+19
	LDD  R26,Y+17
	CP   R19,R26
	BRSH _0x202007D
	LDD  R30,Y+17
	SUB  R30,R19
	MOV  R18,R30
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	RJMP _0x202018C
_0x202007D:
	LDD  R26,Y+17
	MOV  R30,R19
	SUB  R30,R26
	MOV  R18,R30
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
_0x202018C:
	STD  Y+13,R30
	STD  Y+13+1,R31
_0x2020080:
	LDD  R17,Y+20
	__GETB1MN _glcd_state,8
	STD  Y+6,R30
_0x2020082:
	CALL SUBOPT_0x79
	BREQ _0x2020084
	ST   -Y,R17
	INC  R17
	CALL SUBOPT_0x7A
	STD  Y+7,R30
	RJMP _0x2020082
_0x2020084:
	LDD  R30,Y+7
	STD  Y+8,R30
	LDD  R30,Y+13
	ADD  R19,R30
	MOV  R30,R18
	SUBI R18,1
	CPI  R30,0
	BRNE _0x2020080
	RJMP _0x2020085
_0x202007C:
	__GETB1MN _glcd_state,8
	STD  Y+6,R30
_0x2020086:
	CALL SUBOPT_0x79
	BRNE PC+2
	RJMP _0x2020088
	LDD  R17,Y+20
	LDD  R19,Y+19
	LDI  R30,LOW(1)
	MOV  R18,R30
	MOV  R16,R30
	LDD  R26,Y+18
	CLR  R27
	LDD  R30,Y+20
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	MOVW R20,R26
	TST  R21
	BRPL _0x2020089
	LDI  R16,LOW(255)
	MOVW R30,R20
	CALL __ANEGW1
	MOVW R20,R30
_0x2020089:
	MOVW R30,R20
	LSL  R30
	ROL  R31
	STD  Y+15,R30
	STD  Y+15+1,R31
	LDD  R26,Y+17
	CLR  R27
	LDD  R30,Y+19
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	STD  Y+13,R26
	STD  Y+13+1,R27
	LDD  R26,Y+14
	TST  R26
	BRPL _0x202008A
	LDI  R18,LOW(255)
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	CALL __ANEGW1
	STD  Y+13,R30
	STD  Y+13+1,R31
_0x202008A:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	LSL  R30
	ROL  R31
	STD  Y+11,R30
	STD  Y+11+1,R31
	ST   -Y,R17
	ST   -Y,R19
	LDI  R26,LOW(1)
	RCALL _glcd_putpixelm_G101
	STD  Y+8,R30
	LDI  R30,LOW(0)
	STD  Y+9,R30
	STD  Y+9+1,R30
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	CP   R20,R26
	CPC  R21,R27
	BRLT _0x202008B
_0x202008D:
	ADD  R17,R16
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	CALL SUBOPT_0x7B
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	CP   R20,R26
	CPC  R21,R27
	BRGE _0x202008F
	ADD  R19,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	CALL SUBOPT_0x7C
_0x202008F:
	ST   -Y,R17
	CALL SUBOPT_0x7A
	STD  Y+8,R30
	LDD  R30,Y+18
	CP   R30,R17
	BRNE _0x202008D
	RJMP _0x2020090
_0x202008B:
_0x2020092:
	ADD  R19,R18
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	CALL SUBOPT_0x7B
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	CP   R30,R26
	CPC  R31,R27
	BRGE _0x2020094
	ADD  R17,R16
	LDD  R26,Y+11
	LDD  R27,Y+11+1
	CALL SUBOPT_0x7C
_0x2020094:
	ST   -Y,R17
	CALL SUBOPT_0x7A
	STD  Y+8,R30
	LDD  R30,Y+17
	CP   R30,R19
	BRNE _0x2020092
_0x2020090:
	LDD  R30,Y+19
	SUBI R30,-LOW(1)
	STD  Y+19,R30
	LDD  R30,Y+17
	SUBI R30,-LOW(1)
	STD  Y+17,R30
	RJMP _0x2020086
_0x2020088:
_0x2020085:
_0x202007B:
_0x214000C:
	CALL __LOADLOCR6
	ADIW R28,21
	RET
; .FEND
_glcd_rectround:
; .FSTART _glcd_rectround
	ST   -Y,R26
	SBIW R28,2
	CALL __SAVELOCR6
	LDD  R26,Y+10
	CPI  R26,LOW(0x1)
	BRNE _0x2020098
	LDD  R26,Y+9
	CPI  R26,LOW(0x1)
	BREQ _0x2020099
_0x2020098:
	RJMP _0x2020097
_0x2020099:
	LDD  R30,Y+12
	ST   -Y,R30
	LDD  R26,Y+12
	RCALL _glcd_setpixel
	RJMP _0x202009A
_0x2020097:
	LDD  R30,Y+10
	CPI  R30,0
	BREQ _0x202009C
	LDD  R30,Y+9
	CPI  R30,0
	BRNE _0x202009D
_0x202009C:
	RJMP _0x202009B
_0x202009D:
	LDD  R30,Y+8
	LDD  R26,Y+12
	ADD  R30,R26
	MOV  R17,R30
	LDD  R30,Y+8
	LDD  R26,Y+11
	ADD  R30,R26
	MOV  R18,R30
	__GETB1MN _glcd_state,8
	SUBI R30,LOW(1)
	STD  Y+7,R30
	LDD  R30,Y+10
	LDD  R26,Y+12
	ADD  R26,R30
	SUBI R26,LOW(1)
	MOV  R19,R26
	LDD  R26,Y+8
	MOV  R30,R19
	SUB  R30,R26
	MOV  R16,R30
	LDD  R26,Y+7
	SUB  R19,R26
	LDD  R30,Y+9
	LDD  R26,Y+11
	ADD  R26,R30
	SUBI R26,LOW(1)
	MOV  R20,R26
	LDD  R26,Y+8
	MOV  R30,R20
	SUB  R30,R26
	MOV  R21,R30
	LDD  R26,Y+7
	SUB  R20,R26
	__GETB1MN _glcd_state,9
	STD  Y+6,R30
	LDI  R30,LOW(255)
	__PUTB1MN _glcd_state,9
	ST   -Y,R17
	LDD  R30,Y+12
	ST   -Y,R30
	MOV  R30,R16
	SUBI R30,LOW(1)
	ST   -Y,R30
	LDD  R26,Y+14
	RCALL _glcd_line
	ST   -Y,R16
	ST   -Y,R18
	LDD  R30,Y+10
	ST   -Y,R30
	LDI  R26,LOW(129)
	RCALL _glcd_quadrant_G101
	ST   -Y,R19
	ST   -Y,R18
	ST   -Y,R19
	MOV  R26,R21
	SUBI R26,LOW(1)
	RCALL _glcd_line
	ST   -Y,R16
	ST   -Y,R21
	LDD  R30,Y+10
	ST   -Y,R30
	LDI  R26,LOW(136)
	RCALL _glcd_quadrant_G101
	ST   -Y,R16
	ST   -Y,R20
	ST   -Y,R17
	MOV  R26,R20
	RCALL _glcd_line
	ST   -Y,R17
	ST   -Y,R21
	LDD  R30,Y+10
	ST   -Y,R30
	LDI  R26,LOW(132)
	RCALL _glcd_quadrant_G101
	LDD  R30,Y+12
	ST   -Y,R30
	ST   -Y,R21
	LDD  R30,Y+14
	ST   -Y,R30
	MOV  R26,R18
	RCALL _glcd_line
	ST   -Y,R17
	ST   -Y,R18
	LDD  R30,Y+10
	ST   -Y,R30
	LDI  R26,LOW(130)
	RCALL _glcd_quadrant_G101
	LDD  R30,Y+6
	__PUTB1MN _glcd_state,9
_0x202009B:
_0x202009A:
	CALL __LOADLOCR6
	ADIW R28,13
	RET
; .FEND
_glcd_fillrectround:
; .FSTART _glcd_fillrectround
	CALL __SAVELOCR6
	MOV  R20,R26
	LDD  R26,Y+7
	CPI  R26,LOW(0x1)
	BRNE _0x202009F
	LDD  R26,Y+6
	CPI  R26,LOW(0x1)
	BREQ _0x20200A0
_0x202009F:
	RJMP _0x202009E
_0x20200A0:
	CALL SUBOPT_0x7D
	__GETB2MN _glcd_state,16
	CALL _glcd_putpixel
	RJMP _0x20200A1
_0x202009E:
	LDD  R30,Y+7
	CPI  R30,0
	BREQ _0x20200A3
	LDD  R30,Y+6
	CPI  R30,0
	BRNE _0x20200A4
_0x20200A3:
	RJMP _0x20200A2
_0x20200A4:
	LDS  R16,_glcd_state
	__GETBRMN 21,_glcd_state,8
	__GETB1MN _glcd_state,16
	STS  _glcd_state,R30
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,8
	CALL SUBOPT_0x7D
	CALL SUBOPT_0x7D
	MOV  R26,R20
	RCALL _glcd_rectround
	LDD  R30,Y+7
	LSR  R30
	LDD  R26,Y+9
	ADD  R30,R26
	MOV  R17,R30
	LDD  R30,Y+6
	SUB  R30,R20
	SUB  R30,R20
	MOV  R18,R30
	CLR  R19
	LDD  R26,Y+7
	CPI  R26,LOW(0x3)
	BRLO _0x20200A6
	CLR  R0
	CP   R0,R18
	CPC  R0,R19
	BRLT _0x20200A7
_0x20200A6:
	RJMP _0x20200A5
_0x20200A7:
	LDD  R30,Y+9
	SUBI R30,-LOW(1)
	ST   -Y,R30
	MOV  R30,R20
	LDD  R26,Y+9
	ADD  R30,R26
	ST   -Y,R30
	LDD  R30,Y+9
	SUBI R30,LOW(2)
	ST   -Y,R30
	MOV  R26,R18
	RCALL _glcd_barrel
	ST   -Y,R17
	LDD  R30,Y+9
	SUBI R30,-LOW(1)
	ST   -Y,R30
	LDS  R26,_glcd_state
	RCALL _glcd_floodfill
_0x20200A5:
	LDD  R30,Y+6
	LDD  R26,Y+8
	ADD  R26,R30
	SUBI R26,LOW(2)
	MOV  R18,R26
	CLR  R19
	CLR  R0
	CP   R0,R18
	CPC  R0,R19
	BRGE _0x20200A8
	ST   -Y,R17
	ST   -Y,R18
	LDS  R26,_glcd_state
	RCALL _glcd_floodfill
_0x20200A8:
	STS  _glcd_state,R16
	__PUTBMRN _glcd_state,8,21
_0x20200A2:
_0x20200A1:
_0x214000B:
	CALL __LOADLOCR6
	ADIW R28,10
	RET
; .FEND
_glcd_plot8_G101:
; .FSTART _glcd_plot8_G101
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,3
	CALL __SAVELOCR6
	LDD  R30,Y+13
	STD  Y+8,R30
	__GETB1MN _glcd_state,8
	STD  Y+7,R30
	LDS  R30,_glcd_state
	STD  Y+6,R30
	LDD  R26,Y+18
	CLR  R27
	LDD  R30,Y+15
	CALL SUBOPT_0x74
	LDD  R26,Y+17
	CLR  R27
	LDD  R30,Y+16
	CALL SUBOPT_0x7E
	LDD  R30,Y+16
	CALL SUBOPT_0x7F
	BREQ _0x20200B0
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200B2
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDI  R30,LOW(90)
	LDI  R31,HIGH(90)
	CALL SUBOPT_0x80
	BRLT _0x20200B4
	CALL SUBOPT_0x81
	BRGE _0x20200B5
_0x20200B4:
	RJMP _0x20200B3
_0x20200B5:
_0x20200B0:
	TST  R19
	BRMI _0x20200B6
	CALL SUBOPT_0x82
_0x20200B6:
	LDD  R26,Y+7
	CPI  R26,LOW(0x2)
	BRLO _0x20200B8
	__CPWRN 18,19,2
	BRGE _0x20200B9
_0x20200B8:
	RJMP _0x20200B7
_0x20200B9:
	CALL SUBOPT_0x83
	BRNE _0x20200BA
	ST   -Y,R16
	MOV  R26,R18
	SUBI R26,LOW(1)
	RCALL _glcd_setpixel
_0x20200BA:
_0x20200B7:
_0x20200B3:
_0x20200B2:
	LDD  R30,Y+8
	ANDI R30,LOW(0x88)
	CPI  R30,LOW(0x88)
	BREQ _0x20200BC
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200BE
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-270)
	SBCI R27,HIGH(-270)
	CALL SUBOPT_0x84
	BRLT _0x20200C0
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-270)
	SBCI R27,HIGH(-270)
	CALL SUBOPT_0x85
	BRGE _0x20200C1
_0x20200C0:
	RJMP _0x20200BF
_0x20200C1:
_0x20200BC:
	CALL SUBOPT_0x86
	BRLO _0x20200C2
	CALL SUBOPT_0x87
	BRNE _0x20200C3
	ST   -Y,R16
	MOV  R26,R20
	SUBI R26,-LOW(1)
	RCALL _glcd_setpixel
_0x20200C3:
_0x20200C2:
_0x20200BF:
_0x20200BE:
	LDD  R26,Y+18
	CLR  R27
	LDD  R30,Y+15
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	MOVW R16,R26
	TST  R17
	BRPL PC+2
	RJMP _0x20200C4
	LDD  R30,Y+8
	ANDI R30,LOW(0x82)
	CPI  R30,LOW(0x82)
	BREQ _0x20200C6
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200C8
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-90)
	SBCI R27,HIGH(-90)
	CALL SUBOPT_0x84
	BRLT _0x20200CA
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-90)
	SBCI R27,HIGH(-90)
	CALL SUBOPT_0x85
	BRGE _0x20200CB
_0x20200CA:
	RJMP _0x20200C9
_0x20200CB:
_0x20200C6:
	TST  R19
	BRMI _0x20200CC
	CALL SUBOPT_0x82
_0x20200CC:
	LDD  R26,Y+7
	CPI  R26,LOW(0x2)
	BRLO _0x20200CE
	__CPWRN 18,19,2
	BRGE _0x20200CF
_0x20200CE:
	RJMP _0x20200CD
_0x20200CF:
	CALL SUBOPT_0x83
	BRNE _0x20200D0
	ST   -Y,R16
	MOV  R26,R18
	SUBI R26,LOW(1)
	RCALL _glcd_setpixel
_0x20200D0:
_0x20200CD:
_0x20200C9:
_0x20200C8:
	LDD  R30,Y+8
	ANDI R30,LOW(0x84)
	CPI  R30,LOW(0x84)
	BREQ _0x20200D2
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200D4
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDI  R30,LOW(270)
	LDI  R31,HIGH(270)
	CALL SUBOPT_0x80
	BRLT _0x20200D6
	CALL SUBOPT_0x81
	BRGE _0x20200D7
_0x20200D6:
	RJMP _0x20200D5
_0x20200D7:
_0x20200D2:
	CALL SUBOPT_0x86
	BRLO _0x20200D8
	CALL SUBOPT_0x87
	BRNE _0x20200D9
	ST   -Y,R16
	MOV  R26,R20
	SUBI R26,-LOW(1)
	RCALL _glcd_setpixel
_0x20200D9:
_0x20200D8:
_0x20200D5:
_0x20200D4:
_0x20200C4:
	LDD  R26,Y+18
	CLR  R27
	LDD  R30,Y+16
	CALL SUBOPT_0x74
	LDD  R26,Y+17
	CLR  R27
	LDD  R30,Y+15
	CALL SUBOPT_0x7E
	LDD  R30,Y+15
	CALL SUBOPT_0x7F
	BREQ _0x20200DB
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200DD
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	CP   R26,R30
	CPC  R27,R31
	BRLT _0x20200DF
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	CP   R30,R26
	CPC  R31,R27
	BRGE _0x20200E0
_0x20200DF:
	RJMP _0x20200DE
_0x20200E0:
_0x20200DB:
	TST  R19
	BRMI _0x20200E1
	CALL SUBOPT_0x82
	LDD  R26,Y+7
	CPI  R26,LOW(0x2)
	BRLO _0x20200E2
	MOV  R30,R16
	SUBI R30,-LOW(2)
	CALL SUBOPT_0x88
	BRNE _0x20200E3
	MOV  R30,R16
	SUBI R30,-LOW(1)
	ST   -Y,R30
	MOV  R26,R18
	RCALL _glcd_setpixel
_0x20200E3:
_0x20200E2:
_0x20200E1:
_0x20200DE:
_0x20200DD:
	LDD  R30,Y+8
	ANDI R30,LOW(0x88)
	CPI  R30,LOW(0x88)
	BREQ _0x20200E5
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200E7
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDI  R30,LOW(360)
	LDI  R31,HIGH(360)
	CALL SUBOPT_0x80
	BRLT _0x20200E9
	CALL SUBOPT_0x81
	BRGE _0x20200EA
_0x20200E9:
	RJMP _0x20200E8
_0x20200EA:
_0x20200E5:
	CALL SUBOPT_0x86
	BRLO _0x20200EB
	MOV  R30,R16
	SUBI R30,-LOW(2)
	CALL SUBOPT_0x89
	BRNE _0x20200EC
	MOV  R30,R16
	SUBI R30,-LOW(1)
	ST   -Y,R30
	MOV  R26,R20
	RCALL _glcd_setpixel
_0x20200EC:
_0x20200EB:
_0x20200E8:
_0x20200E7:
	LDD  R26,Y+18
	CLR  R27
	LDD  R30,Y+16
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	MOVW R16,R26
	TST  R17
	BRPL PC+2
	RJMP _0x20200ED
	LDD  R30,Y+8
	ANDI R30,LOW(0x82)
	CPI  R30,LOW(0x82)
	BREQ _0x20200EF
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200F1
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDI  R30,LOW(180)
	LDI  R31,HIGH(180)
	CALL SUBOPT_0x80
	BRLT _0x20200F3
	CALL SUBOPT_0x81
	BRGE _0x20200F4
_0x20200F3:
	RJMP _0x20200F2
_0x20200F4:
_0x20200EF:
	TST  R19
	BRMI _0x20200F5
	CALL SUBOPT_0x82
	LDD  R26,Y+7
	CPI  R26,LOW(0x2)
	BRLO _0x20200F7
	__CPWRN 16,17,2
	BRGE _0x20200F8
_0x20200F7:
	RJMP _0x20200F6
_0x20200F8:
	MOV  R30,R16
	SUBI R30,LOW(2)
	CALL SUBOPT_0x88
	BRNE _0x20200F9
	MOV  R30,R16
	SUBI R30,LOW(1)
	ST   -Y,R30
	MOV  R26,R18
	RCALL _glcd_setpixel
_0x20200F9:
_0x20200F6:
_0x20200F5:
_0x20200F2:
_0x20200F1:
	LDD  R30,Y+8
	ANDI R30,LOW(0x84)
	CPI  R30,LOW(0x84)
	BREQ _0x20200FB
	LDD  R30,Y+8
	ANDI R30,LOW(0x80)
	BRNE _0x20200FD
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-180)
	SBCI R27,HIGH(-180)
	CALL SUBOPT_0x84
	BRLT _0x20200FF
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	SUBI R26,LOW(-180)
	SBCI R27,HIGH(-180)
	CALL SUBOPT_0x85
	BRGE _0x2020100
_0x20200FF:
	RJMP _0x20200FE
_0x2020100:
_0x20200FB:
	CALL SUBOPT_0x86
	BRLO _0x2020102
	__CPWRN 16,17,2
	BRGE _0x2020103
_0x2020102:
	RJMP _0x2020101
_0x2020103:
	MOV  R30,R16
	SUBI R30,LOW(2)
	CALL SUBOPT_0x89
	BRNE _0x2020104
	MOV  R30,R16
	SUBI R30,LOW(1)
	ST   -Y,R30
	MOV  R26,R20
	RCALL _glcd_setpixel
_0x2020104:
_0x2020101:
_0x20200FE:
_0x20200FD:
_0x20200ED:
	CALL __LOADLOCR6
	ADIW R28,19
	RET
; .FEND
_glcd_line2_G101:
; .FSTART _glcd_line2_G101
	CALL __SAVELOCR6
	MOV  R21,R26
	LDD  R20,Y+6
	LDD  R26,Y+8
	CLR  R27
	MOV  R30,R20
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	RCALL _glcd_clipx
	MOV  R17,R30
	LDD  R26,Y+8
	CLR  R27
	CLR  R30
	ADD  R26,R20
	ADC  R27,R30
	RCALL _glcd_clipx
	MOV  R16,R30
	LDD  R26,Y+7
	CLR  R27
	MOV  R30,R21
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	RCALL _glcd_clipy
	MOV  R19,R30
	LDD  R26,Y+7
	CLR  R27
	CLR  R30
	ADD  R26,R21
	ADC  R27,R30
	RCALL _glcd_clipy
	MOV  R18,R30
	ST   -Y,R17
	ST   -Y,R19
	ST   -Y,R16
	MOV  R26,R19
	RCALL _glcd_line
	ST   -Y,R17
	ST   -Y,R18
	ST   -Y,R16
	MOV  R26,R18
	RCALL _glcd_line
	RJMP _0x214000A
; .FEND
_glcd_quadrant_G101:
; .FSTART _glcd_quadrant_G101
	CALL __SAVELOCR6
	MOV  R20,R26
	LDD  R26,Y+8
	CPI  R26,LOW(0x80)
	BRSH _0x2020106
	LDD  R26,Y+7
	CPI  R26,LOW(0x40)
	BRLO _0x2020105
_0x2020106:
	RJMP _0x214000A
_0x2020105:
	__GETBRMN 21,_glcd_state,8
_0x2020108:
	MOV  R30,R21
	SUBI R21,1
	CPI  R30,0
	BRNE PC+2
	RJMP _0x202010A
	LDD  R30,Y+6
	CPI  R30,0
	BRNE _0x202010B
	RJMP _0x214000A
_0x202010B:
	CALL SUBOPT_0x79
	MOV  R16,R30
	LDI  R31,0
	LDI  R26,LOW(5)
	LDI  R27,HIGH(5)
	SUB  R26,R30
	SBC  R27,R31
	MOVW R30,R26
	CALL __LSLW2
	CALL __ASRW2
	MOVW R18,R30
	LDI  R17,LOW(0)
_0x202010D:
	CPI  R20,64
	BRNE _0x202010F
	CALL SUBOPT_0x8A
	ST   -Y,R17
	MOV  R26,R16
	RCALL _glcd_line2_G101
	CALL SUBOPT_0x8A
	ST   -Y,R16
	MOV  R26,R17
	RCALL _glcd_line2_G101
	RJMP _0x2020110
_0x202010F:
	CALL SUBOPT_0x8A
	ST   -Y,R17
	ST   -Y,R16
	MOV  R30,R20
	LDI  R31,0
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _glcd_plot8_G101
_0x2020110:
	SUBI R17,-1
	TST  R19
	BRPL _0x2020111
	MOV  R30,R17
	LDI  R31,0
	RJMP _0x202018D
_0x2020111:
	SUBI R16,1
	MOV  R26,R17
	CLR  R27
	MOV  R30,R16
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	MOVW R30,R26
_0x202018D:
	LSL  R30
	ROL  R31
	ADIW R30,1
	__ADDWRR 18,19,30,31
	CP   R16,R17
	BRSH _0x202010D
	RJMP _0x2020108
_0x202010A:
	RJMP _0x214000A
; .FEND
_glcd_barrel:
; .FSTART _glcd_barrel
	CALL __SAVELOCR6
	MOV  R21,R26
	LDD  R20,Y+6
	LDD  R26,Y+8
	CPI  R26,LOW(0x80)
	BRSH _0x202012A
	LDD  R26,Y+7
	CPI  R26,LOW(0x40)
	BRLO _0x2020129
_0x202012A:
	RJMP _0x214000A
_0x2020129:
	CPI  R20,0
	BREQ _0x202012D
	CPI  R21,0
	BRNE _0x202012E
_0x202012D:
	RJMP _0x202012C
_0x202012E:
	LDD  R19,Y+7
	ADD  R21,R19
	LDD  R30,Y+8
	ADD  R20,R30
_0x202012F:
	CP   R19,R21
	BRSH _0x2020131
	MOV  R30,R21
	SUB  R30,R19
	MOV  R18,R30
	CPI  R18,9
	BRLO _0x2020132
	LDI  R18,LOW(8)
_0x2020132:
	LDD  R17,Y+8
_0x2020133:
	CP   R17,R20
	BRSH _0x2020135
	MOV  R30,R20
	SUB  R30,R17
	MOV  R16,R30
	CPI  R16,9
	BRLO _0x2020136
	LDI  R16,LOW(8)
_0x2020136:
	ST   -Y,R17
	ST   -Y,R19
	ST   -Y,R16
	ST   -Y,R18
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTW1MN _glcd_state,17
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(8)
	CALL _glcd_block
	ADD  R17,R16
	RJMP _0x2020133
_0x2020135:
	ADD  R19,R18
	RJMP _0x202012F
_0x2020131:
_0x202012C:
_0x214000A:
	CALL __LOADLOCR6
	ADIW R28,9
	RET
; .FEND
_glcd_floodfill:
; .FSTART _glcd_floodfill
	PUSH R15
	ST   -Y,R26
	SBIW R28,48
	CALL __SAVELOCR6
	LDD  R26,Y+56
	CPI  R26,LOW(0x80)
	BRSH _0x2020138
	LDD  R26,Y+55
	CPI  R26,LOW(0x40)
	BRLO _0x2020137
_0x2020138:
	RJMP _0x2140009
_0x2020137:
	__GETB1MN _glcd_state,16
	MOV  R20,R30
	MOV  R26,R30
	LDD  R30,Y+54
	CP   R30,R26
	BREQ _0x202013A
	RJMP _0x2140009
_0x202013A:
	MOVW R30,R28
	ADIW R30,6
	MOVW R16,R30
	LDD  R30,Y+56
	CALL SUBOPT_0x8B
	LDD  R30,Y+55
	CALL SUBOPT_0x8B
_0x202013B:
	MOVW R30,R28
	ADIW R30,6
	CP   R30,R16
	CPC  R31,R17
	BRLO PC+2
	RJMP _0x202013D
	__SUBWRN 16,17,1
	MOVW R26,R16
	LD   R30,X
	STD  Y+55,R30
	__SUBWRN 16,17,1
	MOVW R26,R16
	LD   R30,X
	STD  Y+56,R30
	LDD  R19,Y+56
_0x202013E:
	CPI  R19,1
	BRLO _0x2020140
	CALL SUBOPT_0x8C
	BREQ _0x2020142
	CP   R20,R21
	BRNE _0x2020141
_0x2020142:
	RJMP _0x2020140
_0x2020141:
	SUBI R19,LOW(1)
	RJMP _0x202013E
_0x2020140:
	CLT
	BLD  R15,0
	BLD  R15,1
_0x2020144:
	SUBI R19,-LOW(1)
	CPI  R19,128
	BRLO PC+2
	RJMP _0x2020146
	CALL SUBOPT_0x8C
	BREQ _0x2020148
	CP   R20,R21
	BRNE _0x2020147
_0x2020148:
	RJMP _0x2020146
_0x2020147:
	ST   -Y,R19
	LDD  R30,Y+56
	ST   -Y,R30
	MOV  R26,R20
	CALL _glcd_putpixel
	LDD  R26,Y+55
	CPI  R26,LOW(0x1)
	BRLO _0x202014A
	LDD  R30,Y+55
	SUBI R30,LOW(1)
	CALL SUBOPT_0x8D
	BREQ _0x202014C
	CP   R20,R21
	BRNE _0x202014D
_0x202014C:
	RJMP _0x202014B
_0x202014D:
	SBRC R15,0
	RJMP _0x202014E
	MOVW R30,R28
	ADIW R30,54
	CP   R16,R30
	CPC  R17,R31
	BRSH _0x2140009
	MOV  R30,R19
	CALL SUBOPT_0x8B
	MOV  R30,R18
	CALL SUBOPT_0x8B
	SET
	BLD  R15,0
_0x202014E:
	RJMP _0x2020150
_0x202014B:
	CLT
	BLD  R15,0
_0x2020150:
_0x202014A:
	LDD  R26,Y+55
	CPI  R26,LOW(0x3F)
	BRSH _0x2020151
	LDD  R30,Y+55
	SUBI R30,-LOW(1)
	CALL SUBOPT_0x8D
	BREQ _0x2020153
	CP   R20,R21
	BRNE _0x2020154
_0x2020153:
	RJMP _0x2020152
_0x2020154:
	SBRC R15,1
	RJMP _0x2020155
	MOVW R30,R28
	ADIW R30,54
	CP   R16,R30
	CPC  R17,R31
	BRSH _0x2140009
	MOV  R30,R19
	CALL SUBOPT_0x8B
	MOV  R30,R18
	CALL SUBOPT_0x8B
	SET
	BLD  R15,1
_0x2020155:
	RJMP _0x2020157
_0x2020152:
	CLT
	BLD  R15,1
_0x2020157:
_0x2020151:
	RJMP _0x2020144
_0x2020146:
	RJMP _0x202013B
_0x202013D:
_0x2140009:
	CALL __LOADLOCR6
	ADIW R28,57
	POP  R15
	RET
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
__ftoe_G103:
; .FSTART __ftoe_G103
	SBIW R28,4
	LDI  R30,LOW(0)
	ST   Y,R30
	STD  Y+1,R30
	LDI  R30,LOW(128)
	STD  Y+2,R30
	LDI  R30,LOW(63)
	STD  Y+3,R30
	CALL __SAVELOCR6
	MOVW R20,R26
	LDD  R18,Y+10
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	CPI  R30,LOW(0xFFFF)
	LDI  R26,HIGH(0xFFFF)
	CPC  R31,R26
	BRNE _0x2060019
	ST   -Y,R21
	ST   -Y,R20
	__POINTW2FN _0x2060000,0
	CALL _strcpyf
	RJMP _0x2140008
_0x2060019:
	CPI  R30,LOW(0x7FFF)
	LDI  R26,HIGH(0x7FFF)
	CPC  R31,R26
	BRNE _0x2060018
	ST   -Y,R21
	ST   -Y,R20
	__POINTW2FN _0x2060000,1
	CALL _strcpyf
	RJMP _0x2140008
_0x2060018:
	LDD  R26,Y+11
	CPI  R26,LOW(0x7)
	BRLO _0x206001B
	LDI  R30,LOW(6)
	STD  Y+11,R30
_0x206001B:
	LDD  R17,Y+11
_0x206001C:
	MOV  R30,R17
	SUBI R17,1
	CPI  R30,0
	BREQ _0x206001E
	CALL SUBOPT_0x8E
	RJMP _0x206001C
_0x206001E:
	__GETD1S 12
	CALL __CPD10
	BRNE _0x206001F
	LDI  R19,LOW(0)
	CALL SUBOPT_0x8E
	RJMP _0x2060020
_0x206001F:
	LDD  R19,Y+11
	CALL SUBOPT_0x8F
	BREQ PC+2
	BRCC PC+2
	RJMP _0x2060021
	CALL SUBOPT_0x8E
_0x2060022:
	CALL SUBOPT_0x8F
	BRLO _0x2060024
	CALL SUBOPT_0x90
	RJMP _0x2060022
_0x2060024:
	RJMP _0x2060025
_0x2060021:
_0x2060026:
	CALL SUBOPT_0x8F
	BRSH _0x2060028
	CALL SUBOPT_0x2E
	CALL SUBOPT_0x91
	CALL SUBOPT_0x2C
	SUBI R19,LOW(1)
	RJMP _0x2060026
_0x2060028:
	CALL SUBOPT_0x8E
_0x2060025:
	__GETD1S 12
	CALL SUBOPT_0x92
	CALL SUBOPT_0x2C
	CALL SUBOPT_0x8F
	BRLO _0x2060029
	CALL SUBOPT_0x90
_0x2060029:
_0x2060020:
	LDI  R17,LOW(0)
_0x206002A:
	LDD  R30,Y+11
	CP   R30,R17
	BRLO _0x206002C
	CALL SUBOPT_0x93
	CALL SUBOPT_0x92
	CALL SUBOPT_0x94
	CALL SUBOPT_0x2E
	CALL __DIVF21
	CALL __CFD1U
	MOV  R16,R30
	PUSH R21
	PUSH R20
	__ADDWRN 20,21,1
	SUBI R30,-LOW(48)
	POP  R26
	POP  R27
	ST   X,R30
	MOV  R30,R16
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __CDF1
	CALL SUBOPT_0x95
	CALL SUBOPT_0x2E
	CALL SUBOPT_0x96
	CALL SUBOPT_0x2C
	MOV  R30,R17
	SUBI R17,-1
	CPI  R30,0
	BRNE _0x206002A
	MOVW R26,R20
	__ADDWRN 20,21,1
	LDI  R30,LOW(46)
	ST   X,R30
	RJMP _0x206002A
_0x206002C:
	PUSH R21
	PUSH R20
	__ADDWRN 20,21,1
	MOV  R30,R18
	POP  R26
	POP  R27
	ST   X,R30
	CPI  R19,0
	BRGE _0x206002E
	NEG  R19
	MOVW R26,R20
	LDI  R30,LOW(45)
	RJMP _0x206014C
_0x206002E:
	MOVW R26,R20
	LDI  R30,LOW(43)
_0x206014C:
	ST   X,R30
	__ADDWRN 20,21,1
	PUSH R21
	PUSH R20
	__ADDWRN 20,21,1
	MOV  R26,R19
	LDI  R30,LOW(10)
	CALL __DIVB21
	SUBI R30,-LOW(48)
	POP  R26
	POP  R27
	ST   X,R30
	PUSH R21
	PUSH R20
	__ADDWRN 20,21,1
	MOV  R26,R19
	LDI  R30,LOW(10)
	CALL __MODB21
	SUBI R30,-LOW(48)
	POP  R26
	POP  R27
	ST   X,R30
	MOVW R26,R20
	LDI  R30,LOW(0)
	ST   X,R30
_0x2140008:
	CALL __LOADLOCR6
	ADIW R28,16
	RET
; .FEND
__print_G103:
; .FSTART __print_G103
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,63
	SBIW R28,17
	CALL __SAVELOCR6
	LDI  R17,0
	__GETW1SX 88
	STD  Y+8,R30
	STD  Y+8+1,R31
	__GETW1SX 86
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   X+,R30
	ST   X,R31
_0x2060030:
	MOVW R26,R28
	SUBI R26,LOW(-(92))
	SBCI R27,HIGH(-(92))
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	SBIW R30,1
	LPM  R30,Z
	MOV  R18,R30
	CPI  R30,0
	BRNE PC+2
	RJMP _0x2060032
	MOV  R30,R17
	CPI  R30,0
	BRNE _0x2060036
	CPI  R18,37
	BRNE _0x2060037
	LDI  R17,LOW(1)
	RJMP _0x2060038
_0x2060037:
	CALL SUBOPT_0x97
_0x2060038:
	RJMP _0x2060035
_0x2060036:
	CPI  R30,LOW(0x1)
	BRNE _0x2060039
	CPI  R18,37
	BRNE _0x206003A
	CALL SUBOPT_0x97
	RJMP _0x206014D
_0x206003A:
	LDI  R17,LOW(2)
	LDI  R30,LOW(0)
	STD  Y+21,R30
	LDI  R16,LOW(0)
	CPI  R18,45
	BRNE _0x206003B
	LDI  R16,LOW(1)
	RJMP _0x2060035
_0x206003B:
	CPI  R18,43
	BRNE _0x206003C
	LDI  R30,LOW(43)
	STD  Y+21,R30
	RJMP _0x2060035
_0x206003C:
	CPI  R18,32
	BRNE _0x206003D
	LDI  R30,LOW(32)
	STD  Y+21,R30
	RJMP _0x2060035
_0x206003D:
	RJMP _0x206003E
_0x2060039:
	CPI  R30,LOW(0x2)
	BRNE _0x206003F
_0x206003E:
	LDI  R21,LOW(0)
	LDI  R17,LOW(3)
	CPI  R18,48
	BRNE _0x2060040
	ORI  R16,LOW(128)
	RJMP _0x2060035
_0x2060040:
	RJMP _0x2060041
_0x206003F:
	CPI  R30,LOW(0x3)
	BRNE _0x2060042
_0x2060041:
	CPI  R18,48
	BRLO _0x2060044
	CPI  R18,58
	BRLO _0x2060045
_0x2060044:
	RJMP _0x2060043
_0x2060045:
	LDI  R26,LOW(10)
	MUL  R21,R26
	MOV  R21,R0
	MOV  R30,R18
	SUBI R30,LOW(48)
	ADD  R21,R30
	RJMP _0x2060035
_0x2060043:
	LDI  R20,LOW(0)
	CPI  R18,46
	BRNE _0x2060046
	LDI  R17,LOW(4)
	RJMP _0x2060035
_0x2060046:
	RJMP _0x2060047
_0x2060042:
	CPI  R30,LOW(0x4)
	BRNE _0x2060049
	CPI  R18,48
	BRLO _0x206004B
	CPI  R18,58
	BRLO _0x206004C
_0x206004B:
	RJMP _0x206004A
_0x206004C:
	ORI  R16,LOW(32)
	LDI  R26,LOW(10)
	MUL  R20,R26
	MOV  R20,R0
	MOV  R30,R18
	SUBI R30,LOW(48)
	ADD  R20,R30
	RJMP _0x2060035
_0x206004A:
_0x2060047:
	CPI  R18,108
	BRNE _0x206004D
	ORI  R16,LOW(2)
	LDI  R17,LOW(5)
	RJMP _0x2060035
_0x206004D:
	RJMP _0x206004E
_0x2060049:
	CPI  R30,LOW(0x5)
	BREQ PC+2
	RJMP _0x2060035
_0x206004E:
	MOV  R30,R18
	CPI  R30,LOW(0x63)
	BRNE _0x2060053
	CALL SUBOPT_0x98
	CALL SUBOPT_0x99
	CALL SUBOPT_0x98
	LDD  R26,Z+4
	ST   -Y,R26
	CALL SUBOPT_0x9A
	RJMP _0x2060054
_0x2060053:
	CPI  R30,LOW(0x45)
	BREQ _0x2060057
	CPI  R30,LOW(0x65)
	BRNE _0x2060058
_0x2060057:
	RJMP _0x2060059
_0x2060058:
	CPI  R30,LOW(0x66)
	BREQ PC+2
	RJMP _0x206005A
_0x2060059:
	MOVW R30,R28
	ADIW R30,22
	STD  Y+14,R30
	STD  Y+14+1,R31
	CALL SUBOPT_0x9B
	CALL __GETD1P_INC
	CALL SUBOPT_0x9C
	CALL SUBOPT_0x9D
	LDD  R26,Y+13
	TST  R26
	BRMI _0x206005B
	LDD  R26,Y+21
	CPI  R26,LOW(0x2B)
	BREQ _0x206005D
	CPI  R26,LOW(0x20)
	BREQ _0x206005F
	RJMP _0x2060060
_0x206005B:
	CALL SUBOPT_0x9E
	CALL __ANEGF1
	CALL SUBOPT_0x9C
	LDI  R30,LOW(45)
	STD  Y+21,R30
_0x206005D:
	SBRS R16,7
	RJMP _0x2060061
	LDD  R30,Y+21
	ST   -Y,R30
	CALL SUBOPT_0x9A
	RJMP _0x2060062
_0x2060061:
_0x206005F:
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	ADIW R30,1
	STD  Y+14,R30
	STD  Y+14+1,R31
	SBIW R30,1
	LDD  R26,Y+21
	STD  Z+0,R26
_0x2060062:
_0x2060060:
	SBRS R16,5
	LDI  R20,LOW(6)
	CPI  R18,102
	BRNE _0x2060064
	CALL SUBOPT_0x9E
	CALL __PUTPARD1
	ST   -Y,R20
	LDD  R26,Y+19
	LDD  R27,Y+19+1
	CALL _ftoa
	RJMP _0x2060065
_0x2060064:
	CALL SUBOPT_0x9E
	CALL __PUTPARD1
	ST   -Y,R20
	ST   -Y,R18
	LDD  R26,Y+20
	LDD  R27,Y+20+1
	RCALL __ftoe_G103
_0x2060065:
	MOVW R30,R28
	ADIW R30,22
	CALL SUBOPT_0x9F
	RJMP _0x2060066
_0x206005A:
	CPI  R30,LOW(0x73)
	BRNE _0x2060068
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9B
	ADIW R26,4
	LD   R30,X+
	LD   R31,X+
	CALL SUBOPT_0x9F
	RJMP _0x2060069
_0x2060068:
	CPI  R30,LOW(0x70)
	BRNE _0x206006B
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9B
	ADIW R26,4
	LD   R30,X+
	LD   R31,X+
	STD  Y+14,R30
	STD  Y+14+1,R31
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	CALL _strlenf
	MOV  R17,R30
	ORI  R16,LOW(8)
_0x2060069:
	ANDI R16,LOW(127)
	CPI  R20,0
	BREQ _0x206006D
	CP   R20,R17
	BRLO _0x206006E
_0x206006D:
	RJMP _0x206006C
_0x206006E:
	MOV  R17,R20
_0x206006C:
_0x2060066:
	LDI  R20,LOW(0)
	LDI  R30,LOW(0)
	STD  Y+20,R30
	LDI  R19,LOW(0)
	RJMP _0x206006F
_0x206006B:
	CPI  R30,LOW(0x64)
	BREQ _0x2060072
	CPI  R30,LOW(0x69)
	BRNE _0x2060073
_0x2060072:
	ORI  R16,LOW(4)
	RJMP _0x2060074
_0x2060073:
	CPI  R30,LOW(0x75)
	BRNE _0x2060075
_0x2060074:
	LDI  R30,LOW(10)
	STD  Y+20,R30
	SBRS R16,1
	RJMP _0x2060076
	__GETD1N 0x3B9ACA00
	CALL SUBOPT_0x27
	LDI  R17,LOW(10)
	RJMP _0x2060077
_0x2060076:
	__GETD1N 0x2710
	CALL SUBOPT_0x27
	LDI  R17,LOW(5)
	RJMP _0x2060077
_0x2060075:
	CPI  R30,LOW(0x58)
	BRNE _0x2060079
	ORI  R16,LOW(8)
	RJMP _0x206007A
_0x2060079:
	CPI  R30,LOW(0x78)
	BREQ PC+2
	RJMP _0x20600B8
_0x206007A:
	LDI  R30,LOW(16)
	STD  Y+20,R30
	SBRS R16,1
	RJMP _0x206007C
	__GETD1N 0x10000000
	CALL SUBOPT_0x27
	LDI  R17,LOW(8)
	RJMP _0x2060077
_0x206007C:
	__GETD1N 0x1000
	CALL SUBOPT_0x27
	LDI  R17,LOW(4)
_0x2060077:
	CPI  R20,0
	BREQ _0x206007D
	ANDI R16,LOW(127)
	RJMP _0x206007E
_0x206007D:
	LDI  R20,LOW(1)
_0x206007E:
	SBRS R16,1
	RJMP _0x206007F
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9B
	ADIW R26,4
	CALL __GETD1P
	RJMP _0x206014E
_0x206007F:
	SBRS R16,2
	RJMP _0x2060081
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9B
	ADIW R26,4
	CALL __GETW1P
	CALL __CWD1
	RJMP _0x206014E
_0x2060081:
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9B
	ADIW R26,4
	CALL __GETW1P
	CLR  R22
	CLR  R23
_0x206014E:
	__PUTD1S 10
	SBRS R16,2
	RJMP _0x2060083
	LDD  R26,Y+13
	TST  R26
	BRPL _0x2060084
	CALL SUBOPT_0x9E
	CALL __ANEGD1
	CALL SUBOPT_0x9C
	LDI  R30,LOW(45)
	STD  Y+21,R30
_0x2060084:
	LDD  R30,Y+21
	CPI  R30,0
	BREQ _0x2060085
	SUBI R17,-LOW(1)
	SUBI R20,-LOW(1)
	RJMP _0x2060086
_0x2060085:
	ANDI R16,LOW(251)
_0x2060086:
_0x2060083:
	MOV  R19,R20
_0x206006F:
	SBRC R16,0
	RJMP _0x2060087
_0x2060088:
	CP   R17,R21
	BRSH _0x206008B
	CP   R19,R21
	BRLO _0x206008C
_0x206008B:
	RJMP _0x206008A
_0x206008C:
	SBRS R16,7
	RJMP _0x206008D
	SBRS R16,2
	RJMP _0x206008E
	ANDI R16,LOW(251)
	LDD  R18,Y+21
	SUBI R17,LOW(1)
	RJMP _0x206008F
_0x206008E:
	LDI  R18,LOW(48)
_0x206008F:
	RJMP _0x2060090
_0x206008D:
	LDI  R18,LOW(32)
_0x2060090:
	CALL SUBOPT_0x97
	SUBI R21,LOW(1)
	RJMP _0x2060088
_0x206008A:
_0x2060087:
_0x2060091:
	CP   R17,R20
	BRSH _0x2060093
	ORI  R16,LOW(16)
	SBRS R16,2
	RJMP _0x2060094
	CALL SUBOPT_0xA0
	BREQ _0x2060095
	SUBI R21,LOW(1)
_0x2060095:
	SUBI R17,LOW(1)
	SUBI R20,LOW(1)
_0x2060094:
	LDI  R30,LOW(48)
	ST   -Y,R30
	CALL SUBOPT_0x9A
	CPI  R21,0
	BREQ _0x2060096
	SUBI R21,LOW(1)
_0x2060096:
	SUBI R20,LOW(1)
	RJMP _0x2060091
_0x2060093:
	MOV  R19,R17
	LDD  R30,Y+20
	CPI  R30,0
	BRNE _0x2060097
_0x2060098:
	CPI  R19,0
	BREQ _0x206009A
	SBRS R16,3
	RJMP _0x206009B
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	LPM  R18,Z+
	STD  Y+14,R30
	STD  Y+14+1,R31
	RJMP _0x206009C
_0x206009B:
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	LD   R18,X+
	STD  Y+14,R26
	STD  Y+14+1,R27
_0x206009C:
	CALL SUBOPT_0x97
	CPI  R21,0
	BREQ _0x206009D
	SUBI R21,LOW(1)
_0x206009D:
	SUBI R19,LOW(1)
	RJMP _0x2060098
_0x206009A:
	RJMP _0x206009E
_0x2060097:
_0x20600A0:
	CALL SUBOPT_0x3E
	CALL SUBOPT_0x1C
	CALL __DIVD21U
	MOV  R18,R30
	CPI  R18,10
	BRLO _0x20600A2
	SBRS R16,3
	RJMP _0x20600A3
	SUBI R18,-LOW(55)
	RJMP _0x20600A4
_0x20600A3:
	SUBI R18,-LOW(87)
_0x20600A4:
	RJMP _0x20600A5
_0x20600A2:
	SUBI R18,-LOW(48)
_0x20600A5:
	SBRC R16,4
	RJMP _0x20600A7
	CPI  R18,49
	BRSH _0x20600A9
	CALL SUBOPT_0x2B
	__CPD2N 0x1
	BRNE _0x20600A8
_0x20600A9:
	RJMP _0x20600AB
_0x20600A8:
	CP   R20,R19
	BRSH _0x206014F
	CP   R21,R19
	BRLO _0x20600AE
	SBRS R16,0
	RJMP _0x20600AF
_0x20600AE:
	RJMP _0x20600AD
_0x20600AF:
	LDI  R18,LOW(32)
	SBRS R16,7
	RJMP _0x20600B0
_0x206014F:
	LDI  R18,LOW(48)
_0x20600AB:
	ORI  R16,LOW(16)
	SBRS R16,2
	RJMP _0x20600B1
	CALL SUBOPT_0xA0
	BREQ _0x20600B2
	SUBI R21,LOW(1)
_0x20600B2:
_0x20600B1:
_0x20600B0:
_0x20600A7:
	CALL SUBOPT_0x97
	CPI  R21,0
	BREQ _0x20600B3
	SUBI R21,LOW(1)
_0x20600B3:
_0x20600AD:
	SUBI R19,LOW(1)
	CALL SUBOPT_0x3E
	CALL SUBOPT_0x1C
	CALL __MODD21U
	CALL SUBOPT_0x9C
	LDD  R30,Y+20
	CALL SUBOPT_0x2B
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __DIVD21U
	CALL SUBOPT_0x27
	CALL SUBOPT_0x3E
	CALL __CPD10
	BREQ _0x20600A1
	RJMP _0x20600A0
_0x20600A1:
_0x206009E:
	SBRS R16,0
	RJMP _0x20600B4
_0x20600B5:
	CPI  R21,0
	BREQ _0x20600B7
	SUBI R21,LOW(1)
	LDI  R30,LOW(32)
	ST   -Y,R30
	CALL SUBOPT_0x9A
	RJMP _0x20600B5
_0x20600B7:
_0x20600B4:
_0x20600B8:
_0x2060054:
_0x206014D:
	LDI  R17,LOW(0)
_0x2060035:
	RJMP _0x2060030
_0x2060032:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LD   R30,X+
	LD   R31,X+
	CALL __LOADLOCR6
	ADIW R28,63
	ADIW R28,31
	RET
; .FEND
_put_glcd_G103:
; .FSTART _put_glcd_G103
	CALL __SAVELOCR4
	MOVW R16,R26
	LDD  R19,Y+4
	MOV  R26,R19
	CALL _glcd_putchar
	MOVW R26,R16
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	JMP  _0x2140001
; .FEND
_glcd_printfxy:
; .FSTART _glcd_printfxy
	PUSH R15
	MOV  R15,R24
	SBIW R28,6
	CALL __SAVELOCR4
	MOVW R30,R28
	CALL __ADDW1R15
	LDD  R19,Z+12
	LDD  R18,Z+13
	MOVW R26,R28
	ADIW R26,6
	CALL __ADDW2R15
	MOVW R16,R26
	LDI  R30,LOW(0)
	STD  Y+6,R30
	STD  Y+6+1,R30
	STD  Y+8,R30
	STD  Y+8+1,R30
	ST   -Y,R18
	MOV  R26,R19
	CALL _glcd_moveto
	MOVW R26,R28
	ADIW R26,10
	CALL __ADDW2R15
	LD   R30,X+
	LD   R31,X+
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R17
	ST   -Y,R16
	LDI  R30,LOW(_put_glcd_G103)
	LDI  R31,HIGH(_put_glcd_G103)
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,10
	RCALL __print_G103
	CALL __LOADLOCR4
	ADIW R28,10
	POP  R15
	RET
; .FEND

	.CSEG
_ftoa:
; .FSTART _ftoa
	SBIW R28,4
	LDI  R30,LOW(0)
	ST   Y,R30
	STD  Y+1,R30
	STD  Y+2,R30
	LDI  R30,LOW(63)
	STD  Y+3,R30
	CALL __SAVELOCR6
	MOVW R18,R26
	LDD  R21,Y+10
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	CPI  R30,LOW(0xFFFF)
	LDI  R26,HIGH(0xFFFF)
	CPC  R31,R26
	BRNE _0x208000D
	ST   -Y,R19
	ST   -Y,R18
	__POINTW2FN _0x2080000,0
	CALL _strcpyf
	RJMP _0x2140007
_0x208000D:
	CPI  R30,LOW(0x7FFF)
	LDI  R26,HIGH(0x7FFF)
	CPC  R31,R26
	BRNE _0x208000C
	ST   -Y,R19
	ST   -Y,R18
	__POINTW2FN _0x2080000,1
	CALL _strcpyf
	RJMP _0x2140007
_0x208000C:
	LDD  R26,Y+14
	TST  R26
	BRPL _0x208000F
	__GETD1S 11
	CALL __ANEGF1
	CALL SUBOPT_0xA1
	MOVW R26,R18
	__ADDWRN 18,19,1
	LDI  R30,LOW(45)
	ST   X,R30
_0x208000F:
	CPI  R21,7
	BRLO _0x2080010
	LDI  R21,LOW(6)
_0x2080010:
	MOV  R17,R21
_0x2080011:
	MOV  R30,R17
	SUBI R17,1
	CPI  R30,0
	BREQ _0x2080013
	CALL SUBOPT_0x93
	CALL SUBOPT_0xA2
	RJMP _0x2080011
_0x2080013:
	CALL SUBOPT_0xA3
	CALL __ADDF12
	CALL SUBOPT_0xA1
	LDI  R17,LOW(0)
	__GETD1N 0x3F800000
	CALL SUBOPT_0xA2
_0x2080014:
	CALL SUBOPT_0xA3
	CALL __CMPF12
	BRLO _0x2080016
	CALL SUBOPT_0x8E
	SUBI R17,-LOW(1)
	CPI  R17,39
	BRLO _0x2080017
	ST   -Y,R19
	ST   -Y,R18
	__POINTW2FN _0x2080000,5
	CALL _strcpyf
	RJMP _0x2140007
_0x2080017:
	RJMP _0x2080014
_0x2080016:
	CPI  R17,0
	BRNE _0x2080018
	MOVW R26,R18
	__ADDWRN 18,19,1
	LDI  R30,LOW(48)
	ST   X,R30
	RJMP _0x2080019
_0x2080018:
_0x208001A:
	MOV  R30,R17
	SUBI R17,1
	CPI  R30,0
	BREQ _0x208001C
	CALL SUBOPT_0x93
	CALL SUBOPT_0x92
	CALL SUBOPT_0x94
	CALL SUBOPT_0xA4
	CALL __DIVF21
	CALL __CFD1U
	MOV  R16,R30
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	SUBI R30,-LOW(48)
	POP  R26
	POP  R27
	ST   X,R30
	MOV  R30,R16
	LDI  R31,0
	CALL SUBOPT_0x1D
	CALL SUBOPT_0xA5
	CALL __MULF12
	CALL SUBOPT_0xA4
	CALL SUBOPT_0x96
	CALL SUBOPT_0xA1
	RJMP _0x208001A
_0x208001C:
_0x2080019:
	CPI  R21,0
	BREQ _0x2140006
	MOVW R26,R18
	__ADDWRN 18,19,1
	LDI  R30,LOW(46)
	ST   X,R30
_0x208001E:
	MOV  R30,R21
	SUBI R21,1
	CPI  R30,0
	BREQ _0x2080020
	CALL SUBOPT_0xA4
	CALL SUBOPT_0x91
	CALL SUBOPT_0xA1
	__GETD1S 11
	CALL __CFD1U
	MOV  R16,R30
	PUSH R19
	PUSH R18
	__ADDWRN 18,19,1
	SUBI R30,-LOW(48)
	POP  R26
	POP  R27
	ST   X,R30
	MOV  R30,R16
	LDI  R31,0
	CALL SUBOPT_0xA4
	CALL SUBOPT_0xA5
	CALL SUBOPT_0x96
	CALL SUBOPT_0xA1
	RJMP _0x208001E
_0x2080020:
_0x2140006:
	MOVW R26,R18
	LDI  R30,LOW(0)
	ST   X,R30
_0x2140007:
	CALL __LOADLOCR6
	ADIW R28,15
	RET
; .FEND

	.DSEG

	.CSEG

	.CSEG
_memset:
; .FSTART _memset
	ST   -Y,R27
	ST   -Y,R26
    ldd  r27,y+1
    ld   r26,y
    adiw r26,0
    breq memset1
    ldd  r31,y+4
    ldd  r30,y+3
    ldd  r22,y+2
memset0:
    st   z+,r22
    sbiw r26,1
    brne memset0
memset1:
    ldd  r30,y+3
    ldd  r31,y+4
	JMP  _0x2140002
; .FEND
_strcpyf:
; .FSTART _strcpyf
	ST   -Y,R27
	ST   -Y,R26
    ld   r30,y+
    ld   r31,y+
    ld   r26,y+
    ld   r27,y+
    movw r24,r26
strcpyf0:
	lpm  r0,z+
    st   x+,r0
    tst  r0
    brne strcpyf0
    movw r30,r24
    ret
; .FEND
_strlen:
; .FSTART _strlen
	ST   -Y,R27
	ST   -Y,R26
    ld   r26,y+
    ld   r27,y+
    clr  r30
    clr  r31
strlen0:
    ld   r22,x+
    tst  r22
    breq strlen1
    adiw r30,1
    rjmp strlen0
strlen1:
    ret
; .FEND
_strlenf:
; .FSTART _strlenf
	ST   -Y,R27
	ST   -Y,R26
    clr  r26
    clr  r27
    ld   r30,y+
    ld   r31,y+
strlenf0:
	lpm  r0,z+
    tst  r0
    breq strlenf1
    adiw r26,1
    rjmp strlenf0
strlenf1:
    movw r30,r26
    ret
; .FEND

	.CSEG
_eeprom_read_block:
; .FSTART _eeprom_read_block
	CALL SUBOPT_0x57
	__GETWRS 20,21,8
	__GETWRS 16,17,10
	__GETWRS 18,19,8
_0x20C0003:
	CALL SUBOPT_0xA6
	BREQ _0x20C0005
	PUSH R17
	PUSH R16
	__ADDWRN 16,17,1
	MOVW R26,R18
	__ADDWRN 18,19,1
	CALL __EEPROMRDB
	POP  R26
	POP  R27
	ST   X,R30
	RJMP _0x20C0003
_0x20C0005:
	RJMP _0x2140005
; .FEND
_eeprom_write_block:
; .FSTART _eeprom_write_block
	CALL SUBOPT_0x57
	__GETWRS 20,21,8
	__GETWRS 16,17,8
	__GETWRS 18,19,10
_0x20C0006:
	CALL SUBOPT_0xA6
	BREQ _0x20C0008
	PUSH R17
	PUSH R16
	__ADDWRN 16,17,1
	MOVW R26,R18
	__ADDWRN 18,19,1
	LD   R30,X
	POP  R26
	POP  R27
	CALL __EEPROMWRB
	RJMP _0x20C0006
_0x20C0008:
_0x2140005:
	CALL __LOADLOCR6
	ADIW R28,12
	RET
; .FEND

	.CSEG
_ftrunc:
; .FSTART _ftrunc
	CALL __PUTPARD2
   ldd  r23,y+3
   ldd  r22,y+2
   ldd  r31,y+1
   ld   r30,y
   bst  r23,7
   lsl  r23
   sbrc r22,7
   sbr  r23,1
   mov  r25,r23
   subi r25,0x7e
   breq __ftrunc0
   brcs __ftrunc0
   cpi  r25,24
   brsh __ftrunc1
   clr  r26
   clr  r27
   clr  r24
__ftrunc2:
   sec
   ror  r24
   ror  r27
   ror  r26
   dec  r25
   brne __ftrunc2
   and  r30,r26
   and  r31,r27
   and  r22,r24
   rjmp __ftrunc1
__ftrunc0:
   clt
   clr  r23
   clr  r30
   clr  r31
   clr  r22
__ftrunc1:
   cbr  r22,0x80
   lsr  r23
   brcc __ftrunc3
   sbr  r22,0x80
__ftrunc3:
   bld  r23,7
   ld   r26,y+
   ld   r27,y+
   ld   r24,y+
   ld   r25,y+
   cp   r30,r26
   cpc  r31,r27
   cpc  r22,r24
   cpc  r23,r25
   bst  r25,7
   ret
; .FEND
_floor:
; .FSTART _floor
	CALL __PUTPARD2
	CALL __GETD2S0
	CALL _ftrunc
	CALL __PUTD1S0
    brne __floor1
__floor0:
	CALL __GETD1S0
	RJMP _0x2140004
__floor1:
    brtc __floor0
	CALL __GETD1S0
	CALL SUBOPT_0xA7
_0x2140004:
	ADIW R28,4
	RET
; .FEND
_log:
; .FSTART _log
	CALL __PUTPARD2
	SBIW R28,4
	ST   -Y,R17
	ST   -Y,R16
	CALL SUBOPT_0x1D
	CALL __CPD02
	BRLT _0x20E000C
	__GETD1N 0xFF7FFFFF
	RJMP _0x2140003
_0x20E000C:
	CALL SUBOPT_0xA8
	CALL __PUTPARD1
	IN   R26,SPL
	IN   R27,SPH
	SBIW R26,1
	PUSH R17
	PUSH R16
	CALL _frexp
	POP  R16
	POP  R17
	CALL SUBOPT_0xA2
	CALL SUBOPT_0x1D
	__GETD1N 0x3F3504F3
	CALL __CMPF12
	BRSH _0x20E000D
	CALL SUBOPT_0xA8
	CALL SUBOPT_0x1D
	CALL __ADDF12
	CALL SUBOPT_0xA2
	__SUBWRN 16,17,1
_0x20E000D:
	CALL SUBOPT_0xA8
	CALL SUBOPT_0xA7
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL SUBOPT_0xA8
	CALL SUBOPT_0x50
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __DIVF21
	CALL SUBOPT_0xA2
	CALL SUBOPT_0xA8
	CALL SUBOPT_0x95
	__PUTD1S 2
	__GETD2N 0x3F654226
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x4054114E
	CALL SUBOPT_0x96
	CALL SUBOPT_0x95
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	__GETD1S 2
	__GETD2N 0x3FD4114D
	CALL __SUBF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __DIVF21
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	MOVW R30,R16
	CALL SUBOPT_0xA5
	__GETD2N 0x3F317218
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
_0x2140003:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,10
	RET
; .FEND

	.CSEG
_glcd_getmask:
; .FSTART _glcd_getmask
	CALL SUBOPT_0x63
	MOV  R30,R17
	LDI  R31,0
	SUBI R30,LOW(-__glcd_mask*2)
	SBCI R31,HIGH(-__glcd_mask*2)
	LPM  R26,Z
	MOV  R30,R16
	CALL __LSLB12
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,3
	RET
; .FEND
_glcd_mappixcolor1bit:
; .FSTART _glcd_mappixcolor1bit
	CALL __SAVELOCR4
	MOV  R16,R26
	LDD  R19,Y+4
	MOV  R30,R16
	CPI  R30,LOW(0x7)
	BREQ _0x2100007
	CPI  R30,LOW(0xA)
	BRNE _0x2100008
_0x2100007:
	LDS  R17,_glcd_state
	RJMP _0x2100009
_0x2100008:
	CPI  R30,LOW(0x9)
	BRNE _0x210000B
	__GETBRMN 17,_glcd_state,1
	RJMP _0x2100009
_0x210000B:
	CPI  R30,LOW(0x8)
	BRNE _0x2100005
	__GETBRMN 17,_glcd_state,16
_0x2100009:
	__GETB1MN _glcd_state,1
	CPI  R30,0
	BREQ _0x210000E
	CPI  R17,0
	BREQ _0x210000F
	LDI  R30,LOW(255)
	RJMP _0x2140001
_0x210000F:
	MOV  R30,R19
	COM  R30
	RJMP _0x2140001
_0x210000E:
	CPI  R17,0
	BRNE _0x2100011
	LDI  R30,LOW(0)
	RJMP _0x2140001
_0x2100011:
_0x2100005:
	MOV  R30,R19
	RJMP _0x2140001
; .FEND
_glcd_readmem:
; .FSTART _glcd_readmem
	CALL __SAVELOCR4
	MOVW R16,R26
	LDD  R19,Y+4
	MOV  R30,R19
	CPI  R30,LOW(0x1)
	BRNE _0x2100015
	MOVW R30,R16
	LPM  R30,Z
	RJMP _0x2140001
_0x2100015:
	CPI  R30,LOW(0x2)
	BRNE _0x2100016
	MOVW R26,R16
	CALL __EEPROMRDB
	RJMP _0x2140001
_0x2100016:
	CPI  R30,LOW(0x3)
	BRNE _0x2100018
	MOVW R26,R16
	__CALL1MN _glcd_state,25
	RJMP _0x2140001
_0x2100018:
	MOVW R26,R16
	LD   R30,X
_0x2140001:
	CALL __LOADLOCR4
_0x2140002:
	ADIW R28,5
	RET
; .FEND
_glcd_writemem:
; .FSTART _glcd_writemem
	CALL __SAVELOCR4
	MOV  R17,R26
	__GETWRS 18,19,4
	LDD  R16,Y+6
	MOV  R30,R16
	CPI  R30,0
	BRNE _0x210001C
	MOV  R30,R17
	MOVW R26,R18
	ST   X,R30
	RJMP _0x210001B
_0x210001C:
	CPI  R30,LOW(0x2)
	BRNE _0x210001D
	MOV  R30,R17
	MOVW R26,R18
	CALL __EEPROMWRB
	RJMP _0x210001B
_0x210001D:
	CPI  R30,LOW(0x3)
	BRNE _0x210001B
	ST   -Y,R19
	ST   -Y,R18
	MOV  R26,R17
	__CALL1MN _glcd_state,27
_0x210001B:
	CALL __LOADLOCR4
	ADIW R28,7
	RET
; .FEND
_glcd_revbits:
; .FSTART _glcd_revbits
	ST   -Y,R26
    ld  r26,y+
    bst r26,0
    bld r30,7

    bst r26,1
    bld r30,6

    bst r26,2
    bld r30,5

    bst r26,3
    bld r30,4

    bst r26,4
    bld r30,3

    bst r26,5
    bld r30,2

    bst r26,6
    bld r30,1

    bst r26,7
    bld r30,0
    ret
; .FEND

	.CSEG

	.DSEG
_glcd_state:
	.BYTE 0x1D
_time_zero:
	.BYTE 0x4
_clapan_out_monitor:
	.BYTE 0x1
_boiler_state_str:
	.BYTE 0xC
_start_sequence_stage_str:
	.BYTE 0x16
_boiler_role_str:
	.BYTE 0xE
_weather_dep_str:
	.BYTE 0x6
_errors_str:
	.BYTE 0x14
_boiler:
	.BYTE 0x3C
_main_page:
	.BYTE 0xE
_tick_ms:
	.BYTE 0x4
_DirectVolt:
	.BYTE 0x4
_DirectADC:
	.BYTE 0x2

	.ESEG
_eeinit_data:
	.BYTE 0xC

	.DSEG
_eedefault:
	.BYTE 0xC
_nvm_cache:
	.BYTE 0xC
_oneminute_counter_S0010004000:
	.BYTE 0x4
_air_k1:
	.BYTE 0x4
_air_b1:
	.BYTE 0x4
_air_k2:
	.BYTE 0x4
_air_b2:
	.BYTE 0x4
_air_c:
	.BYTE 0x4
_water_k1:
	.BYTE 0x4
_water_b1:
	.BYTE 0x4
_water_k2:
	.BYTE 0x4
_water_b2:
	.BYTE 0x4
_water_c:
	.BYTE 0x4
_data_S0040003000:
	.BYTE 0x2
_prev_index_S0040003000:
	.BYTE 0x4
_prev_index_1stline_S0040003000:
	.BYTE 0x4
_prev_activePage_S0040003000:
	.BYTE 0x2
_pressed_S0050001000:
	.BYTE 0x1
_time_pressed_S0050001000:
	.BYTE 0x4
_time_emitted_S0050001000:
	.BYTE 0x4
_main_page_list:
	.BYTE 0xCB
_buttonCallbacks:
	.BYTE 0xA
_time_S0070001000:
	.BYTE 0x4
_time_S0070003000:
	.BYTE 0x4
_br_str_S0070003000:
	.BYTE 0x2
_time_S0070004000:
	.BYTE 0x4
_drawn_S0070004000:
	.BYTE 0x1
_time_S0070005000:
	.BYTE 0x4
_j_S0070005000:
	.BYTE 0x4
_time_S0070006000:
	.BYTE 0x4
_drawn_S0070006000:
	.BYTE 0x1
_time_S007000D000:
	.BYTE 0x4
_time_S007000E000:
	.BYTE 0x4
_state_S007000F000:
	.BYTE 0x1
_st7920_graphics_on_G100:
	.BYTE 0x1
_st7920_bits8_15_G100:
	.BYTE 0x1
_xt_G100:
	.BYTE 0x1
_yt_G100:
	.BYTE 0x1
__seed_G104:
	.BYTE 0x4

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x0:
	LDS  R30,_tick_ms
	LDS  R31,_tick_ms+1
	LDS  R22,_tick_ms+2
	LDS  R23,_tick_ms+3
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x1:
	CALL __GETD1P_INC
	__SUBD1N -1
	CALL __PUTDP1_DEC
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x2:
	__GETD1N 0x0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:75 WORDS
SUBOPT_0x3:
	__PUTD1MN _boiler,50
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x4:
	LDI  R30,LOW(_nvm_cache)
	LDI  R31,HIGH(_nvm_cache)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_eeinit_data)
	LDI  R31,HIGH(_eeinit_data)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(12)
	LDI  R27,0
	JMP  _eeprom_read_block

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x5:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_eeinit_data)
	LDI  R31,HIGH(_eeinit_data)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(12)
	LDI  R27,0
	JMP  _eeprom_write_block

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x6:
	__PUTD1MN _boiler,10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x7:
	CALL __DIVF21
	__PUTD1MN _boiler,38
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8:
	__GETD1S 1
	CALL __CPD10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x9:
	CALL __LNEGB1
	CLR  R31
	CLR  R22
	CLR  R23
	MOVW R26,R30
	MOVW R24,R22
	CALL _check_reset_error
	CPI  R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
SUBOPT_0xA:
	__GETD2MN _boiler,18
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0xB:
	__GETB1MN _boiler,57
	LDI  R31,0
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xC:
	__GETB1MN _boiler,58
	LDI  R31,0
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0xD:
	__GETW1MN _boiler,44
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xE:
	__GETW2MN _boiler,42
	SUB  R30,R26
	SBC  R31,R27
	RJMP SUBOPT_0xA

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0xF:
	CALL __CWD1
	CALL __CDF1
	CALL __CMPF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x10:
	CALL _GetTick_ms
	RJMP SUBOPT_0x3

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:81 WORDS
SUBOPT_0x11:
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	__GETD1MN _boiler,50
	CALL __SUBD21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x12:
	__CPD2N 0x4E21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x13:
	__PUTB1MN _boiler,58
	RJMP SUBOPT_0x10

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x14:
	__CPD2N 0xBB8
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x15:
	CBI  0x12,2
	LDI  R30,LOW(0)
	__PUTB1MN _boiler,58
	LDI  R30,LOW(2)
	__PUTB1MN _boiler,55
	RJMP SUBOPT_0x10

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x16:
	__PUTB1MN _boiler,55
	RJMP SUBOPT_0x10

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x17:
	LDI  R30,LOW(0)
	STS  _oneminute_counter_S0010004000,R30
	STS  _oneminute_counter_S0010004000+1,R30
	STS  _oneminute_counter_S0010004000+2,R30
	STS  _oneminute_counter_S0010004000+3,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x18:
	CBI  0x12,2
	CBI  0x12,4
	CBI  0x12,6
	CBI  0x12,7
	RJMP SUBOPT_0x11

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x19:
	__CPD2N 0xBB9
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x1A:
	CLR  R22
	CLR  R23
	CALL __CDF1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x1B:
	CALL __ADDF12
	__GETD2S 24
	CALL __MULF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x1C:
	__GETD2S 10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
SUBOPT_0x1D:
	__GETD2S 6
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x1E:
	__GETD1MN _boiler,10
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x1F:
	__GETD2MN _boiler,10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x20:
	CALL __DIVF21
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x3F800000
	CALL __SWAPD12
	CALL __SUBF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:53 WORDS
SUBOPT_0x21:
	CALL _log
	CALL __PUTD1S0
	__GETD2N 0x340388B7
	CALL __MULF12
	CALL __GETD2S0
	CALL __MULF12
	__GETD2N 0x394D2906
	CALL __ADDF12
	CALL __GETD2S0
	CALL __MULF12
	__GETD2N 0x3A8FD526
	CALL __ADDF12
	__GETD2N 0x3F800000
	CALL __DIVF21
	__GETD2N 0xBE4CCCCD
	CALL __ADDF12
	__GETD2N 0xC3889333
	CALL __ADDF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x22:
	RCALL __SAVELOCR4
	MOV  R17,R26
	__GETWRS 18,19,4
	MOV  R30,R17
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x23:
	MOVW R26,R16
	LD   R30,X
	__PUTB1SNS 2,12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x24:
	MOVW R26,R16
	CALL __GETD1P_INC
	__PUTD1SNS 2,12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x25:
	LDD  R26,Z+27
	LDD  R27,Z+28
	MOVW R30,R26
	ANDI R30,LOW(0x4)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x26:
	MOVW R30,R6
	__GETD2Z 6
	__GETD1N 0x3
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x27:
	__PUTD1S 16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x28:
	LDS  R30,_prev_index_1stline_S0040003000
	LDS  R31,_prev_index_1stline_S0040003000+1
	LDS  R22,_prev_index_1stline_S0040003000+2
	LDS  R23,_prev_index_1stline_S0040003000+3
	__GETD2S 16
	CALL __CPD12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x29:
	LDS  R26,_prev_activePage_S0040003000
	LDS  R27,_prev_activePage_S0040003000+1
	CP   R6,R26
	CPC  R7,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x2A:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	ADD  R30,R26
	ADC  R31,R27
	MOVW R20,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x2B:
	__GETD2S 16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x2C:
	__PUTD1S 12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x2D:
	MOVW R26,R6
	LD   R30,X+
	LD   R31,X+
	MOVW R26,R30
	LDD  R30,Y+12
	LDD  R31,Y+12+1
	MOVW R22,R26
	LDI  R26,LOW(29)
	LDI  R27,HIGH(29)
	CALL __MULW12U
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x2E:
	__GETD2S 12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x2F:
	ST   -Y,R20
	__POINTW1FN _0x80000,0
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
SUBOPT_0x30:
	LD   R30,X+
	LD   R31,X+
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,4
	CALL _glcd_printfxy
	ADIW R28,8
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x31:
	MOVW R26,R22
	ADD  R26,R30
	ADC  R27,R31
	ADIW R26,27
	CALL __GETW1P
	ANDI R30,LOW(0x1)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x32:
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	LDD  R26,Z+24
	LDD  R27,Z+25
	CALL _str_length
	ADIW R30,15
	MOVW R18,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x33:
	LDD  R26,Y+24
	LDD  R27,Y+24+1
	ADIW R26,10
	CALL __GETW1P
	STS  _data_S0040003000,R30
	STS  _data_S0040003000+1,R31
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	LDD  R30,Z+26
	LDI  R31,0
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x34:
	ST   -Y,R18
	ST   -Y,R20
	__POINTW1FN _0x80000,3
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	LD   R30,X
	CLR  R31
	CLR  R22
	CLR  R23
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:69 WORDS
SUBOPT_0x35:
	ST   -Y,R18
	ST   -Y,R20
	__POINTW1FN _0x80000,4
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
SUBOPT_0x36:
	LDD  R30,Y+28
	LDD  R31,Y+28+1
	__GETWRZ 0,1,8
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X
	MOVW R26,R0
	LDI  R31,0
	LSL  R30
	ROL  R31
	ADD  R26,R30
	ADC  R27,R31
	CALL __GETW1P
	CLR  R22
	CLR  R23
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x37:
	ST   -Y,R18
	ST   -Y,R20
	__POINTW1FN _0x80000,4
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+28
	LDD  R31,Y+28+1
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X
	CLR  R31
	CLR  R22
	CLR  R23
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
SUBOPT_0x38:
	LDI  R24,4
	CALL _glcd_printfxy
	ADIW R28,8
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x39:
	ST   -Y,R18
	ST   -Y,R20
	__POINTW1FN _0x80000,8
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x3A:
	__GETD1N 0x1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x3B:
	STS  _prev_index_S0040003000,R30
	STS  _prev_index_S0040003000+1,R31
	STS  _prev_index_S0040003000+2,R22
	STS  _prev_index_S0040003000+3,R23
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x3C:
	LDD  R26,Y+20
	LDD  R27,Y+20+1
	LDI  R30,LOW(8)
	CALL __MULB1W2U
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x3D:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _glcd_printfxy
	ADIW R28,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x3E:
	__GETD1S 16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x3F:
	MOVW R26,R6
	LD   R30,X+
	LD   R31,X+
	MOVW R26,R30
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	MOVW R22,R26
	LDI  R26,LOW(29)
	LDI  R27,HIGH(29)
	CALL __MULW12U
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x40:
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	__GETWRZ 0,1,12
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	LD   R30,X
	MOVW R26,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x41:
	CALL __PUTPARD1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x42:
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	__GETWRZ 0,1,12
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	CALL __GETW1P
	CP   R30,R0
	CPC  R31,R1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x43:
	LDS  R26,_data_S0040003000
	LDS  R27,_data_S0040003000+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x44:
	LDD  R30,Y+24
	LDD  R31,Y+24+1
	__GETD2Z 12
	MOVW R0,R26
	RCALL SUBOPT_0x43
	CALL __GETD1P_INC
	MOVW R26,R0
	CALL __CPD12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x45:
	CALL __GETD1P_INC
	RJMP SUBOPT_0x41

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x46:
	CALL __GETW1P
	CP   R30,R0
	CPC  R31,R1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x47:
	MOVW R30,R6
	__GETD2Z 2
	RCALL SUBOPT_0x3A
	CALL __SWAPD12
	CALL __SUBD12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x48:
	CALL __GETD1P_INC
	SBIW R30,1
	SBCI R22,0
	SBCI R23,0
	CALL __PUTDP1_DEC
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x49:
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
	MOVW R30,R16
	LDD  R30,Z+26
	LDI  R31,0
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x4A:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R26,X
	LDD  R30,Z+20
	CP   R26,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x4B:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X
	SUBI R30,-LOW(1)
	ST   X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x4C:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R0,X+
	LD   R1,X
	MOVW R26,R16
	ADIW R26,20
	CALL __GETW1P
	CP   R0,R30
	CPC  R1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x4D:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
SUBOPT_0x4E:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	CALL __GETD1P_INC
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x4F:
	MOVW R26,R16
	ADIW R26,20
	CALL __GETD1P_INC
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x50:
	__GETD2N 0x3F800000
	CALL __ADDF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x51:
	__GETD2N 0xBF800000
	CALL __ADDF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x52:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R26,X
	LDD  R30,Z+16
	CP   R30,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x53:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X
	SUBI R30,LOW(1)
	ST   X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x54:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R0,X+
	LD   R1,X
	MOVW R26,R16
	ADIW R26,16
	RJMP SUBOPT_0x46

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x55:
	MOVW R30,R16
	LDD  R26,Z+10
	LDD  R27,Z+11
	LD   R30,X+
	LD   R31,X+
	SBIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x56:
	MOVW R26,R16
	ADIW R26,16
	CALL __GETD1P_INC
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x57:
	ST   -Y,R27
	ST   -Y,R26
	RCALL __SAVELOCR6
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x58:
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R17
	JMP  _emit_command

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x59:
	CALL _GetTick_ms
	STS  _time_emitted_S0050001000,R30
	STS  _time_emitted_S0050001000+1,R31
	STS  _time_emitted_S0050001000+2,R22
	STS  _time_emitted_S0050001000+3,R23
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x5A:
	CALL _GetTick_ms
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_time_pressed_S0050001000
	LDS  R31,_time_pressed_S0050001000+1
	LDS  R22,_time_pressed_S0050001000+2
	LDS  R23,_time_pressed_S0050001000+3
	CALL __SUBD21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x5B:
	RCALL __SAVELOCR4
	__GETWRN 16,17,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
SUBOPT_0x5C:
	CALL __SUBD21
	__CPD2N 0x3E9
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x5D:
	__GETB1MN _boiler,57
	LDI  R26,LOW(_boiler_role_str)
	LDI  R27,HIGH(_boiler_role_str)
	LDI  R31,0
	LSL  R30
	ROL  R31
	ADD  R26,R30
	ADC  R27,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x5E:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	JMP  _glcd_putimagef

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x5F:
	CALL __PUTPARD1
	__GETD1N 0x2B
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x60:
	LPM  R30,Z
	LDI  R31,0
	ADIW R30,2
	CALL __CWD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
SUBOPT_0x61:
	RCALL SUBOPT_0x2
	CALL __PUTPARD1
	__GETD1N 0x21
	CALL __PUTPARD1
	__GETD1N 0x7F
	CALL __PUTPARD1
	__GETD2N 0x3F
	JMP  _clear

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x62:
	SBI  0x15,2
	LDI  R30,LOW(0)
	OUT  0x1A,R30
	SBI  0x15,1
	JMP  _st7920_delay_G100

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x63:
	ST   -Y,R17
	ST   -Y,R16
	MOV  R17,R26
	LDD  R16,Y+2
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x64:
	LDS  R30,_st7920_graphics_on_G100
	ORI  R30,LOW(0x30)
	MOV  R26,R30
	JMP  _st7920_wrcmd

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
SUBOPT_0x65:
	LDS  R30,_st7920_graphics_on_G100
	ORI  R30,LOW(0x34)
	MOV  R26,R30
	JMP  _st7920_wrcmd

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x66:
	LDI  R26,LOW(48)
	CALL _st7920_wrbus_G100
	__DELAY_USW 400
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x67:
	RCALL __SAVELOCR4
	MOV  R17,R26
	LDD  R16,Y+4
	LDD  R19,Y+5
	ST   -Y,R19
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x68:
	ANDI R30,LOW(0x7)
	LDI  R26,LOW(7)
	CALL __SWAPB12
	SUB  R30,R26
	LDI  R26,LOW(1)
	CALL __LSLB12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x69:
	CALL _st7920_rdbyte_G100
	MOV  R26,R30
	JMP  _glcd_revbits

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x6A:
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+6,R30
	STD  Y+6+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x6B:
	LDD  R30,Y+16
	ST   -Y,R30
	LDD  R30,Y+7
	LDD  R31,Y+7+1
	ADIW R30,1
	STD  Y+7,R30
	STD  Y+7+1,R31
	SBIW R30,1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	JMP  _glcd_writemem

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x6C:
	LDD  R30,Y+16
	ST   -Y,R30
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	CLR  R24
	CLR  R25
	JMP  _glcd_readmem

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x6D:
	LDD  R30,Y+16
	ST   -Y,R30
	LDD  R30,Y+7
	LDD  R31,Y+7+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x6E:
	ST   -Y,R30
	LDD  R30,Y+14
	ST   -Y,R30
	LDD  R26,Y+17
	JMP  _st7920_wrmasked_G100

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x6F:
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
	CLR  R0
	CP   R0,R16
	CPC  R0,R17
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x70:
	RCALL __SAVELOCR6
	__GETW1MN _glcd_state,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x71:
	MOVW R30,R16
	__ADDWRN 16,17,1
	LPM  R0,Z
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x72:
	__GETW1MN _glcd_state,4
	ADIW R30,1
	LPM  R30,Z
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x73:
	CALL _glcd_clipy
	__PUTB1MN _glcd_state,3
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x74:
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	MOVW R16,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x75:
	__GETB1MN _glcd_state,2
	ST   -Y,R30
	__GETB1MN _glcd_state,3
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x76:
	CALL _glcd_block
	__GETB1MN _glcd_state,2
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x77:
	ST   -Y,R30
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(9)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x78:
	STD  Y+6,R30
	STD  Y+6+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x79:
	LDD  R30,Y+6
	SUBI R30,LOW(1)
	STD  Y+6,R30
	SUBI R30,-LOW(1)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7A:
	ST   -Y,R19
	LDD  R26,Y+10
	JMP  _glcd_putpixelm_G101

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7B:
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+9,R30
	STD  Y+9+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7C:
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+9,R30
	STD  Y+9+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7D:
	LDD  R30,Y+9
	ST   -Y,R30
	LDD  R30,Y+9
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7E:
	LDI  R31,0
	SUB  R26,R30
	SBC  R27,R31
	MOVW R18,R26
	LDD  R26,Y+17
	CLR  R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x7F:
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	MOVW R20,R30
	LDD  R30,Y+8
	ANDI R30,LOW(0x81)
	CPI  R30,LOW(0x81)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x80:
	SUB  R30,R26
	SBC  R31,R27
	MOVW R0,R30
	MOVW R26,R30
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	CP   R26,R30
	CPC  R27,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x81:
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	CP   R30,R0
	CPC  R31,R1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x82:
	ST   -Y,R16
	MOV  R26,R18
	JMP  _glcd_setpixel

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x83:
	ST   -Y,R16
	MOV  R26,R18
	SUBI R26,LOW(2)
	CALL _glcd_getpixel
	MOV  R26,R30
	LDD  R30,Y+6
	CP   R30,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x84:
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	CP   R26,R30
	CPC  R27,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x85:
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	CP   R30,R26
	CPC  R31,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x86:
	ST   -Y,R16
	MOV  R26,R20
	CALL _glcd_setpixel
	LDD  R26,Y+7
	CPI  R26,LOW(0x2)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x87:
	ST   -Y,R16
	MOV  R26,R20
	SUBI R26,-LOW(2)
	CALL _glcd_getpixel
	MOV  R26,R30
	LDD  R30,Y+6
	CP   R30,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x88:
	ST   -Y,R30
	MOV  R26,R18
	CALL _glcd_getpixel
	MOV  R26,R30
	LDD  R30,Y+6
	CP   R30,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x89:
	ST   -Y,R30
	MOV  R26,R20
	CALL _glcd_getpixel
	MOV  R26,R30
	LDD  R30,Y+6
	CP   R30,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8A:
	LDD  R30,Y+8
	ST   -Y,R30
	LDD  R30,Y+8
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x8B:
	MOVW R26,R16
	ST   X,R30
	__ADDWRN 16,17,1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x8C:
	ST   -Y,R19
	LDD  R26,Y+56
	CALL _glcd_getpixel
	MOV  R21,R30
	LDD  R30,Y+54
	CP   R30,R21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x8D:
	MOV  R18,R30
	ST   -Y,R19
	MOV  R26,R18
	CALL _glcd_getpixel
	MOV  R21,R30
	LDD  R30,Y+54
	CP   R30,R21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
SUBOPT_0x8E:
	RCALL SUBOPT_0x1D
	__GETD1N 0x41200000
	CALL __MULF12
	__PUTD1S 6
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x8F:
	__GETD1S 6
	RCALL SUBOPT_0x2E
	CALL __CMPF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x90:
	RCALL SUBOPT_0x2E
	__GETD1N 0x3DCCCCCD
	CALL __MULF12
	RCALL SUBOPT_0x2C
	SUBI R19,-LOW(1)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x91:
	__GETD1N 0x41200000
	CALL __MULF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x92:
	__GETD2N 0x3F000000
	CALL __ADDF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x93:
	RCALL SUBOPT_0x1D
	__GETD1N 0x3DCCCCCD
	CALL __MULF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x94:
	MOVW R26,R30
	MOVW R24,R22
	CALL _floor
	__PUTD1S 6
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x95:
	RCALL SUBOPT_0x1D
	CALL __MULF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x96:
	CALL __SWAPD12
	CALL __SUBF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0x97:
	ST   -Y,R18
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
SUBOPT_0x98:
	__GETW1SX 90
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x99:
	SBIW R30,4
	__PUTW1SX 90
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x9A:
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x9B:
	__GETW2SX 90
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x9C:
	__PUTD1S 10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x9D:
	RCALL SUBOPT_0x98
	RJMP SUBOPT_0x99

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x9E:
	__GETD1S 10
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x9F:
	STD  Y+14,R30
	STD  Y+14+1,R31
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	CALL _strlen
	MOV  R17,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
SUBOPT_0xA0:
	ANDI R16,LOW(251)
	LDD  R30,Y+21
	ST   -Y,R30
	__GETW2SX 87
	__GETW1SX 89
	ICALL
	CPI  R21,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA1:
	__PUTD1S 11
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA2:
	__PUTD1S 6
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xA3:
	__GETD1S 6
	__GETD2S 11
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xA4:
	__GETD2S 11
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA5:
	CALL __CWD1
	CALL __CDF1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA6:
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	SBIW R30,1
	STD  Y+6,R30
	STD  Y+6+1,R31
	ADIW R30,1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA7:
	__GETD2N 0x3F800000
	CALL __SUBF12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA8:
	__GETD1S 6
	RET

;RUNTIME LIBRARY

	.CSEG
__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

__ADDW1R15:
	CLR  R0
	ADD  R30,R15
	ADC  R31,R0
	RET

__ADDW2R15:
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	RET

__ADDD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	ADC  R23,R25
	RET

__SUBD12:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	SBC  R23,R25
	RET

__SUBD21:
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R25,R23
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__ANEGD1:
	COM  R31
	COM  R22
	COM  R23
	NEG  R30
	SBCI R31,-1
	SBCI R22,-1
	SBCI R23,-1
	RET

__LSLB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSLB12R
__LSLB12L:
	LSL  R30
	DEC  R0
	BRNE __LSLB12L
__LSLB12R:
	RET

__LSRB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSRB12R
__LSRB12L:
	LSR  R30
	DEC  R0
	BRNE __LSRB12L
__LSRB12R:
	RET

__LSLW4:
	LSL  R30
	ROL  R31
__LSLW3:
	LSL  R30
	ROL  R31
__LSLW2:
	LSL  R30
	ROL  R31
	LSL  R30
	ROL  R31
	RET

__ASRW2:
	ASR  R31
	ROR  R30
	ASR  R31
	ROR  R30
	RET

__CBD1:
	MOV  R31,R30
	ADD  R31,R31
	SBC  R31,R31
	MOV  R22,R31
	MOV  R23,R31
	RET

__CWD1:
	MOV  R22,R31
	ADD  R22,R22
	SBC  R22,R22
	MOV  R23,R22
	RET

__LNEGB1:
	TST  R30
	LDI  R30,1
	BREQ __LNEGB1F
	CLR  R30
__LNEGB1F:
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULD12U:
	MUL  R23,R26
	MOV  R23,R0
	MUL  R22,R27
	ADD  R23,R0
	MUL  R31,R24
	ADD  R23,R0
	MUL  R30,R25
	ADD  R23,R0
	MUL  R22,R26
	MOV  R22,R0
	ADD  R23,R1
	MUL  R31,R27
	ADD  R22,R0
	ADC  R23,R1
	MUL  R30,R24
	ADD  R22,R0
	ADC  R23,R1
	CLR  R24
	MUL  R31,R26
	MOV  R31,R0
	ADD  R22,R1
	ADC  R23,R24
	MUL  R30,R27
	ADD  R31,R0
	ADC  R22,R1
	ADC  R23,R24
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	ADC  R22,R24
	ADC  R23,R24
	RET

__MULB1W2U:
	MOV  R22,R30
	MUL  R22,R26
	MOVW R30,R0
	MUL  R22,R27
	ADD  R31,R0
	RET

__MULW12:
	RCALL __CHKSIGNW
	RCALL __MULW12U
	BRTC __MULW121
	RCALL __ANEGW1
__MULW121:
	RET

__DIVB21U:
	CLR  R0
	LDI  R25,8
__DIVB21U1:
	LSL  R26
	ROL  R0
	SUB  R0,R30
	BRCC __DIVB21U2
	ADD  R0,R30
	RJMP __DIVB21U3
__DIVB21U2:
	SBR  R26,1
__DIVB21U3:
	DEC  R25
	BRNE __DIVB21U1
	MOV  R30,R26
	MOV  R26,R0
	RET

__DIVB21:
	RCALL __CHKSIGNB
	RCALL __DIVB21U
	BRTC __DIVB211
	NEG  R30
__DIVB211:
	RET

__DIVD21U:
	PUSH R19
	PUSH R20
	PUSH R21
	CLR  R0
	CLR  R1
	MOVW R20,R0
	LDI  R19,32
__DIVD21U1:
	LSL  R26
	ROL  R27
	ROL  R24
	ROL  R25
	ROL  R0
	ROL  R1
	ROL  R20
	ROL  R21
	SUB  R0,R30
	SBC  R1,R31
	SBC  R20,R22
	SBC  R21,R23
	BRCC __DIVD21U2
	ADD  R0,R30
	ADC  R1,R31
	ADC  R20,R22
	ADC  R21,R23
	RJMP __DIVD21U3
__DIVD21U2:
	SBR  R26,1
__DIVD21U3:
	DEC  R19
	BRNE __DIVD21U1
	MOVW R30,R26
	MOVW R22,R24
	MOVW R26,R0
	MOVW R24,R20
	POP  R21
	POP  R20
	POP  R19
	RET

__MODB21:
	CLT
	SBRS R26,7
	RJMP __MODB211
	NEG  R26
	SET
__MODB211:
	SBRC R30,7
	NEG  R30
	RCALL __DIVB21U
	MOV  R30,R26
	BRTC __MODB212
	NEG  R30
__MODB212:
	RET

__MODD21U:
	RCALL __DIVD21U
	MOVW R30,R26
	MOVW R22,R24
	RET

__CHKSIGNB:
	CLT
	SBRS R30,7
	RJMP __CHKSB1
	NEG  R30
	SET
__CHKSB1:
	SBRS R26,7
	RJMP __CHKSB2
	NEG  R26
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSB2:
	RET

__CHKSIGNW:
	CLT
	SBRS R31,7
	RJMP __CHKSW1
	RCALL __ANEGW1
	SET
__CHKSW1:
	SBRS R27,7
	RJMP __CHKSW2
	NEG  R27
	NEG  R26
	SBCI R27,0
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSW2:
	RET

__GETW1P:
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	RET

__GETD1P:
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X
	SBIW R26,3
	RET

__GETD1P_INC:
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X+
	RET

__PUTDP1:
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	RET

__PUTDP1_DEC:
	ST   -X,R23
	ST   -X,R22
	ST   -X,R31
	ST   -X,R30
	RET

__GETW1Z:
	PUSH R0
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	POP  R0
	RET

__GETW2X:
	PUSH R0
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	POP  R0
	RET

__GETD1S0:
	LD   R30,Y
	LDD  R31,Y+1
	LDD  R22,Y+2
	LDD  R23,Y+3
	RET

__GETD2S0:
	LD   R26,Y
	LDD  R27,Y+1
	LDD  R24,Y+2
	LDD  R25,Y+3
	RET

__PUTD1S0:
	ST   Y,R30
	STD  Y+1,R31
	STD  Y+2,R22
	STD  Y+3,R23
	RET

__PUTPARD1:
	ST   -Y,R23
	ST   -Y,R22
	ST   -Y,R31
	ST   -Y,R30
	RET

__PUTPARD2:
	ST   -Y,R25
	ST   -Y,R24
	ST   -Y,R27
	ST   -Y,R26
	RET

__PUTPARL:
	CLR  R27
__PUTPAR:
	ADD  R30,R26
	ADC  R31,R27
__PUTPAR0:
	LD   R0,-Z
	ST   -Y,R0
	SBIW R26,1
	BRNE __PUTPAR0
	RET

__SWAPD12:
	MOV  R1,R24
	MOV  R24,R22
	MOV  R22,R1
	MOV  R1,R25
	MOV  R25,R23
	MOV  R23,R1

__SWAPW12:
	MOV  R1,R27
	MOV  R27,R31
	MOV  R31,R1

__SWAPB12:
	MOV  R1,R26
	MOV  R26,R30
	MOV  R30,R1
	RET

__EEPROMRDB:
	SBIC EECR,EEWE
	RJMP __EEPROMRDB
	PUSH R31
	IN   R31,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R30,EEDR
	OUT  SREG,R31
	POP  R31
	RET

__EEPROMWRB:
	SBIS EECR,EEWE
	RJMP __EEPROMWRB1
	WDR
	RJMP __EEPROMWRB
__EEPROMWRB1:
	IN   R25,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R24,EEDR
	CP   R30,R24
	BREQ __EEPROMWRB0
	OUT  EEDR,R30
	SBI  EECR,EEMWE
	SBI  EECR,EEWE
__EEPROMWRB0:
	OUT  SREG,R25
	RET

__CPD10:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	RET

__CPD02:
	CLR  R0
	CP   R0,R26
	CPC  R0,R27
	CPC  R0,R24
	CPC  R0,R25
	RET

__CPD12:
	CP   R30,R26
	CPC  R31,R27
	CPC  R22,R24
	CPC  R23,R25
	RET

__CPD21:
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	CPC  R25,R23
	RET

_frexp:
	LD   R30,Y+
	LD   R31,Y+
	LD   R22,Y+
	LD   R23,Y+
	BST  R23,7
	LSL  R22
	ROL  R23
	CLR  R24
	SUBI R23,0x7E
	SBC  R24,R24
	ST   X+,R23
	ST   X,R24
	LDI  R23,0x7E
	LSR  R23
	ROR  R22
	BRTS __ANEGF1
	RET

__ANEGF1:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	BREQ __ANEGF10
	SUBI R23,0x80
__ANEGF10:
	RET

__ROUND_REPACK:
	TST  R21
	BRPL __REPACK
	CPI  R21,0x80
	BRNE __ROUND_REPACK0
	SBRS R30,0
	RJMP __REPACK
__ROUND_REPACK0:
	ADIW R30,1
	ADC  R22,R25
	ADC  R23,R25
	BRVS __REPACK1

__REPACK:
	LDI  R21,0x80
	EOR  R21,R23
	BRNE __REPACK0
	PUSH R21
	RJMP __ZERORES
__REPACK0:
	CPI  R21,0xFF
	BREQ __REPACK1
	LSL  R22
	LSL  R0
	ROR  R21
	ROR  R22
	MOV  R23,R21
	RET
__REPACK1:
	PUSH R21
	TST  R0
	BRMI __REPACK2
	RJMP __MAXRES
__REPACK2:
	RJMP __MINRES

__UNPACK:
	LDI  R21,0x80
	MOV  R1,R25
	AND  R1,R21
	LSL  R24
	ROL  R25
	EOR  R25,R21
	LSL  R21
	ROR  R24

__UNPACK1:
	LDI  R21,0x80
	MOV  R0,R23
	AND  R0,R21
	LSL  R22
	ROL  R23
	EOR  R23,R21
	LSL  R21
	ROR  R22
	RET

__CFD1U:
	SET
	RJMP __CFD1U0
__CFD1:
	CLT
__CFD1U0:
	PUSH R21
	RCALL __UNPACK1
	CPI  R23,0x80
	BRLO __CFD10
	CPI  R23,0xFF
	BRCC __CFD10
	RJMP __ZERORES
__CFD10:
	LDI  R21,22
	SUB  R21,R23
	BRPL __CFD11
	NEG  R21
	CPI  R21,8
	BRTC __CFD19
	CPI  R21,9
__CFD19:
	BRLO __CFD17
	SER  R30
	SER  R31
	SER  R22
	LDI  R23,0x7F
	BLD  R23,7
	RJMP __CFD15
__CFD17:
	CLR  R23
	TST  R21
	BREQ __CFD15
__CFD18:
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	DEC  R21
	BRNE __CFD18
	RJMP __CFD15
__CFD11:
	CLR  R23
__CFD12:
	CPI  R21,8
	BRLO __CFD13
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R23
	SUBI R21,8
	RJMP __CFD12
__CFD13:
	TST  R21
	BREQ __CFD15
__CFD14:
	LSR  R23
	ROR  R22
	ROR  R31
	ROR  R30
	DEC  R21
	BRNE __CFD14
__CFD15:
	TST  R0
	BRPL __CFD16
	RCALL __ANEGD1
__CFD16:
	POP  R21
	RET

__CDF1U:
	SET
	RJMP __CDF1U0
__CDF1:
	CLT
__CDF1U0:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	BREQ __CDF10
	CLR  R0
	BRTS __CDF11
	TST  R23
	BRPL __CDF11
	COM  R0
	RCALL __ANEGD1
__CDF11:
	MOV  R1,R23
	LDI  R23,30
	TST  R1
__CDF12:
	BRMI __CDF13
	DEC  R23
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R1
	RJMP __CDF12
__CDF13:
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R1
	PUSH R21
	RCALL __REPACK
	POP  R21
__CDF10:
	RET

__SWAPACC:
	PUSH R20
	MOVW R20,R30
	MOVW R30,R26
	MOVW R26,R20
	MOVW R20,R22
	MOVW R22,R24
	MOVW R24,R20
	MOV  R20,R0
	MOV  R0,R1
	MOV  R1,R20
	POP  R20
	RET

__UADD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	RET

__NEGMAN1:
	COM  R30
	COM  R31
	COM  R22
	SUBI R30,-1
	SBCI R31,-1
	SBCI R22,-1
	RET

__SUBF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R25,0x80
	BREQ __ADDF129
	LDI  R21,0x80
	EOR  R1,R21

	RJMP __ADDF120

__ADDF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R25,0x80
	BREQ __ADDF129

__ADDF120:
	CPI  R23,0x80
	BREQ __ADDF128
__ADDF121:
	MOV  R21,R23
	SUB  R21,R25
	BRVS __ADDF1211
	BRPL __ADDF122
	RCALL __SWAPACC
	RJMP __ADDF121
__ADDF122:
	CPI  R21,24
	BRLO __ADDF123
	CLR  R26
	CLR  R27
	CLR  R24
__ADDF123:
	CPI  R21,8
	BRLO __ADDF124
	MOV  R26,R27
	MOV  R27,R24
	CLR  R24
	SUBI R21,8
	RJMP __ADDF123
__ADDF124:
	TST  R21
	BREQ __ADDF126
__ADDF125:
	LSR  R24
	ROR  R27
	ROR  R26
	DEC  R21
	BRNE __ADDF125
__ADDF126:
	MOV  R21,R0
	EOR  R21,R1
	BRMI __ADDF127
	RCALL __UADD12
	BRCC __ADDF129
	ROR  R22
	ROR  R31
	ROR  R30
	INC  R23
	BRVC __ADDF129
	RJMP __MAXRES
__ADDF128:
	RCALL __SWAPACC
__ADDF129:
	RCALL __REPACK
	POP  R21
	RET
__ADDF1211:
	BRCC __ADDF128
	RJMP __ADDF129
__ADDF127:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	BREQ __ZERORES
	BRCC __ADDF1210
	COM  R0
	RCALL __NEGMAN1
__ADDF1210:
	TST  R22
	BRMI __ADDF129
	LSL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVC __ADDF1210

__ZERORES:
	CLR  R30
	CLR  R31
	MOVW R22,R30
	POP  R21
	RET

__MINRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	SER  R23
	POP  R21
	RET

__MAXRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	LDI  R23,0x7F
	POP  R21
	RET

__MULF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BREQ __ZERORES
	CPI  R25,0x80
	BREQ __ZERORES
	EOR  R0,R1
	SEC
	ADC  R23,R25
	BRVC __MULF124
	BRLT __ZERORES
__MULF125:
	TST  R0
	BRMI __MINRES
	RJMP __MAXRES
__MULF124:
	PUSH R0
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R17
	CLR  R18
	CLR  R25
	MUL  R22,R24
	MOVW R20,R0
	MUL  R24,R31
	MOV  R19,R0
	ADD  R20,R1
	ADC  R21,R25
	MUL  R22,R27
	ADD  R19,R0
	ADC  R20,R1
	ADC  R21,R25
	MUL  R24,R30
	RCALL __MULF126
	MUL  R27,R31
	RCALL __MULF126
	MUL  R22,R26
	RCALL __MULF126
	MUL  R27,R30
	RCALL __MULF127
	MUL  R26,R31
	RCALL __MULF127
	MUL  R26,R30
	ADD  R17,R1
	ADC  R18,R25
	ADC  R19,R25
	ADC  R20,R25
	ADC  R21,R25
	MOV  R30,R19
	MOV  R31,R20
	MOV  R22,R21
	MOV  R21,R18
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	POP  R0
	TST  R22
	BRMI __MULF122
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	RJMP __MULF123
__MULF122:
	INC  R23
	BRVS __MULF125
__MULF123:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__MULF127:
	ADD  R17,R0
	ADC  R18,R1
	ADC  R19,R25
	RJMP __MULF128
__MULF126:
	ADD  R18,R0
	ADC  R19,R1
__MULF128:
	ADC  R20,R25
	ADC  R21,R25
	RET

__DIVF21:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BRNE __DIVF210
	TST  R1
__DIVF211:
	BRPL __DIVF219
	RJMP __MINRES
__DIVF219:
	RJMP __MAXRES
__DIVF210:
	CPI  R25,0x80
	BRNE __DIVF218
__DIVF217:
	RJMP __ZERORES
__DIVF218:
	EOR  R0,R1
	SEC
	SBC  R25,R23
	BRVC __DIVF216
	BRLT __DIVF217
	TST  R0
	RJMP __DIVF211
__DIVF216:
	MOV  R23,R25
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R1
	CLR  R17
	CLR  R18
	CLR  R19
	MOVW R20,R18
	LDI  R25,32
__DIVF212:
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	CPC  R20,R17
	BRLO __DIVF213
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R20,R17
	SEC
	RJMP __DIVF214
__DIVF213:
	CLC
__DIVF214:
	ROL  R21
	ROL  R18
	ROL  R19
	ROL  R1
	ROL  R26
	ROL  R27
	ROL  R24
	ROL  R20
	DEC  R25
	BRNE __DIVF212
	MOVW R30,R18
	MOV  R22,R1
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	TST  R22
	BRMI __DIVF215
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVS __DIVF217
__DIVF215:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__CMPF12:
	TST  R25
	BRMI __CMPF120
	TST  R23
	BRMI __CMPF121
	CP   R25,R23
	BRLO __CMPF122
	BRNE __CMPF121
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	BRLO __CMPF122
	BREQ __CMPF123
__CMPF121:
	CLZ
	CLC
	RET
__CMPF122:
	CLZ
	SEC
	RET
__CMPF123:
	SEZ
	CLC
	RET
__CMPF120:
	TST  R23
	BRPL __CMPF122
	CP   R25,R23
	BRLO __CMPF121
	BRNE __CMPF122
	CP   R30,R26
	CPC  R31,R27
	CPC  R22,R24
	BRLO __CMPF122
	BREQ __CMPF123
	RJMP __CMPF121

_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	wdr
	__DELAY_USW 0x7D0
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

;END OF CODE MARKER
__END_OF_CODE:
