;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){
; 0007 0016 void clear(uint32_t x,uint32_t y,uint32_t w, uint32_t h){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0007 0017 glcd_setfillcolor(0);
;PCODE: $0000000F VOL: 0
;	x -> Y+12
;	y -> Y+8
;	w -> Y+4
;	h -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0007 0018 glcd_fillrectround(x,y,w,h,0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0007 0019 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;void drawAirTemp(void){
; 0007 001C void drawAirTemp(void){
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0007 001D static uint32_t time = 0;
; 0007 001E uint16_t x = 0;
; 0007 001F uint16_t y = 0;
; 0007 0020 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000022 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0007 0021 glcd_printfxy(x,y, "%3.0f", boiler.air_temp);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0007 0022 time = GetTick_ms();
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0007 0023 }
; 0007 0024 }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;void drawWaterTemp(void){
; 0007 0026 void drawWaterTemp(void){
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0007 0027 static uint32_t time = 0;
; 0007 0028 uint16_t x = 127-7*6;
; 0007 0029 uint16_t y = 0;
; 0007 002A if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000042 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0007 002B glcd_printfxy(x,y, "%3.0f->%d", boiler.water_temp, boiler.water_goal_temp);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0007 002C time = GetTick_ms();
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0007 002D }
; 0007 002E 
; 0007 002F }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;void drawModelName(void){
; 0007 0031 void drawModelName(void){
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0007 0032 static uint32_t time = 0;
; 0007 0033 static char* br_str="";

	.DSEG
_0xE0005:
	.BYTE 0x1

	.CSEG
; 0007 0034 uint16_t x = 127/4;
; 0007 0035 uint16_t y = 0;
; 0007 0036 //glcd_printfxy(x,y, "%s",br_str);
; 0007 0037 if(br_str != boiler_role_str[boiler.role]){
;PCODE: $00000066 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0007 0038 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0007 0039 glcd_printfxy(x,y, "%s", boiler_role_str[boiler.role]);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0007 003A br_str=boiler_role_str[boiler.role];
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0007 003B time = GetTick_ms();
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0007 003C }
; 0007 003D 
; 0007 003E }
;PCODE: $00000097 VOL: 0
; 0007 003F 
; 0007 0040 }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;void drawPump(void){
; 0007 0042 void drawPump(void){
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0007 0043 static uint32_t time = 0;
; 0007 0044 static char drawn = 0;
; 0007 0045 uint16_t x = 0;
; 0007 0046 uint16_t y = 56;
; 0007 0047 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $0000009F VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0007 0048 if(isSetevoi_nasos_ON){
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0007 0049 //glcd_printfxy(x,y, "TOPL_ON ");
; 0007 004A if(!drawn){
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0007 004B glcd_putimagef(CIRCULATION_X,DEFAULT_Y ,circulation,0);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0007 004C drawn = 1;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0007 004D }
; 0007 004E }
;PCODE: $000000BA VOL: 0
; 0007 004F else{
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0007 0050 //glcd_printfxy(x,y, "TOPL_OFF");
; 0007 0051 if(drawn){
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0007 0052 clear(CIRCULATION_X-1,DEFAULT_Y-1,circulation[0]+2,circulation[2]+2);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0007 0053 drawn = 0;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0007 0054 }
; 0007 0055 }
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0007 0056 time = GetTick_ms();
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0007 0057 }
; 0007 0058 }
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;void drawBurner(void){
; 0007 005A void drawBurner(void){
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0007 005B static uint32_t time = 0;
; 0007 005C static uint32_t j=0;
; 0007 005D uint16_t x = 0;
; 0007 005E uint16_t y = 48;
; 0007 005F if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $000000DF VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0007 0060 //glcd_printfxy(x,y, "BURNER");
; 0007 0061 glcd_putimagef(BURNER_X,DEFAULT_Y,burner[j%3],0);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0007 0062 if(isVentilaytor_ON){
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0007 0063 j++;// if(isVentilaytor_ON)
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0007 0064 }
; 0007 0065 time = GetTick_ms();
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0007 0066 }
; 0007 0067 }
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;void drawFire(void){
; 0007 0069 void drawFire(void){
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0007 006A static uint32_t time = 0;
; 0007 006B static char drawn = 0;
; 0007 006C uint16_t x = 0;
; 0007 006D uint16_t y = 40;
; 0007 006E if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000108 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0007 006F if(plamya_out ||\
; 0007 0070 Ion_out ||\
; 0007 0071 ((boiler.role == role_UK_303) && clapan_out())){
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0007 0072 //glcd_printfxy(x,y, "FIRE_ON ");
; 0007 0073 if(!drawn){
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0007 0074 glcd_putimagef(FIRE_X,DEFAULT_Y-1,flame,0);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0007 0075 drawn = 1;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0007 0076 }
; 0007 0077 }
;PCODE: $00000131 VOL: 0
; 0007 0078 else{
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0007 0079 //glcd_printfxy(x,y, "FIRE_OFF");
; 0007 007A if(drawn){
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0007 007B clear(FIRE_X-1,DEFAULT_Y-1,flame[0]+2,flame[2]+2);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0007 007C drawn = 0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0007 007D }
; 0007 007E }
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0007 007F time = GetTick_ms();
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0007 0080 }
; 0007 0081 }
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;void drawFan(void){
; 0007 0083 void drawFan(void){
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0007 0084 static uint32_t time = 0;
; 0007 0085 uint16_t x = 0;
; 0007 0086 uint16_t y =  32;
; 0007 0087 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000156 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0007 0088 if(isVentilaytor_ON){
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0007 0089 glcd_printfxy(x,y, "FAN_ON ");
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0007 008A }
; 0007 008B else{
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0007 008C glcd_printfxy(x,y, "FAN_OFF");
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0007 008D }
;PCODE: $00000178 VOL: 0
; 0007 008E 
; 0007 008F time = GetTick_ms();
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0007 0090 }
; 0007 0091 }
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;void drawClapan1(void){
; 0007 0093 void drawClapan1(void){
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0007 0094 static uint32_t time = 0;
; 0007 0095 uint16_t x = 50;
; 0007 0096 uint16_t y = 32;
; 0007 0097 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000182 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0007 0098 if(isKlapan1_ON){
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0007 0099 glcd_printfxy(x,y, "CL1_ON ");
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0007 009A }
; 0007 009B else{
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0007 009C glcd_printfxy(x,y, "CL1_OFF");
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0007 009D }
;PCODE: $000001A4 VOL: 0
; 0007 009E 
; 0007 009F time = GetTick_ms();
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0007 00A0 }
; 0007 00A1 }
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;void drawClapan2(void){
; 0007 00A3 void drawClapan2(void){
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0007 00A4 static uint32_t time = 0;
; 0007 00A5 uint16_t x = 50;
; 0007 00A6 uint16_t y = 40;
; 0007 00A7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $000001AE VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0007 00A8 if(isKlapan2_ON){
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0007 00A9 glcd_printfxy(x,y, "CL2_ON ");
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0007 00AA }
; 0007 00AB else{
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0007 00AC glcd_printfxy(x,y, "CL2_OFF");
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0007 00AD }
;PCODE: $000001D0 VOL: 0
; 0007 00AE 
; 0007 00AF time = GetTick_ms();
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0007 00B0 }
; 0007 00B1 }
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;void drawState(void){
; 0007 00B3 void drawState(void){
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0007 00B4 static uint32_t time = 0;
; 0007 00B5 uint16_t x = 50;
; 0007 00B6 uint16_t y = 48;
; 0007 00B7 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $000001DA VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0007 00B8 glcd_printfxy(x,y, "%s", boiler_state_str[boiler.state]);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0007 00B9 //PRINT("%s\r\n", boiler_state_str[boiler.state]);
; 0007 00BA time = GetTick_ms();
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0007 00BB }
; 0007 00BC }
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;void drawStartState(void){
; 0007 00BE void drawStartState(void){
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0007 00BF static uint32_t time = 0;
; 0007 00C0 uint16_t x = 50;
; 0007 00C1 uint16_t y = 56;
; 0007 00C2 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000200 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0007 00C3 glcd_printfxy(x,y, "%s", start_sequence_stage_str[boiler.start_stage]);
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0007 00C4 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00C5 time = GetTick_ms();
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0007 00C6 }
; 0007 00C7 }
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;void drawCmdState(void){
; 0007 00C9 void drawCmdState(void){
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0007 00CA static uint32_t time = 0;
; 0007 00CB uint16_t x = 0;
; 0007 00CC uint16_t y = 48;
; 0007 00CD if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000226 VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0007 00CE glcd_printfxy(x,y, "%s", boiler_state_str[boiler.command]);
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0007 00CF //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00D0 time = GetTick_ms();
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0007 00D1 }
; 0007 00D2 }
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;void drawError(void){
; 0007 00D4 void drawError(void){
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0007 00D5 static uint32_t time = 0;
; 0007 00D6 uint16_t x = 30;
; 0007 00D7 uint16_t y = 40;
; 0007 00D8 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $0000024C VOL: 0
;	x -> R16,R17
;	y -> R18,R19
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0007 00D9 //glcd_printfxy(x,y, "Error %d", boiler.error);
; 0007 00DA glcd_printfxy(x,y, "\x8F\xB9\xA9\xA2\xAB\xA1 %d", boiler.error);
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0007 00DB glcd_printfxy(x,y+12, "%s", errors_str[boiler.error]);
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0007 00DC glcd_putimagef(BURNER_X,DEFAULT_Y,error_icon,0);
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0007 00DD //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00DE time = GetTick_ms();
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0007 00DF }
; 0007 00E0 }
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;void drawAntiFreeze(void){
; 0007 00E2 void drawAntiFreeze(void){
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0007 00E3 static uint32_t time = 0;
; 0007 00E4 if(GetTick_ms() - time > DRAW_DEFAULT_PERIOD){
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0007 00E5 glcd_putimagef(ANTIFREEZE_X,DEFAULT_Y,snow,0);
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0007 00E6 //PRINT("%s\r\n", start_sequence_stage_str[boiler.start_stage]);
; 0007 00E7 time = GetTick_ms();
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0007 00E8 }
; 0007 00E9 }
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;typedef enum
;drawn_none = 0,
;drawn_pictures,
;drawn_error,
;}drawn_e;
;void widgetsUpdate(void){
; 0007 00F3 void widgetsUpdate(void){
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0007 00F4 static drawn_e state = drawn_none;
; 0007 00F5 //PRINT(">>>widgetsUpdate\r\n");
; 0007 00F6 drawAirTemp();
;PCODE: $0000029E VOL: 0
; 0007 00F7 //drawWaterTemp();
; 0007 00F8 drawModelName();
;PCODE: $0000029F VOL: 0
; 0007 00F9 // drawPump();
; 0007 00FA // //drawCmdState();
; 0007 00FB // drawFire();
; 0007 00FC // drawBurner();
; 0007 00FD // drawAntiFreeze();
; 0007 00FE if(boiler.error == error_None){
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0007 00FF if(state != drawn_pictures){
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0007 0100 clear(0, 33, 127, 63);
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0007 0101 state = drawn_pictures;
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0007 0102 }
; 0007 0103 drawPump();
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0007 0104 //drawCmdState();
; 0007 0105 drawFire();
;PCODE: $000002B3 VOL: 0
; 0007 0106 drawBurner();
;PCODE: $000002B4 VOL: 0
; 0007 0107 drawAntiFreeze();
;PCODE: $000002B5 VOL: 0
; 0007 0108 //drawFan();
; 0007 0109 //drawClapan1();
; 0007 010A //drawClapan2();
; 0007 010B //drawState();
; 0007 010C //drawStartState();
; 0007 010D }
; 0007 010E else{
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0007 010F if(state != drawn_error){
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0007 0110 clear(0, 33, 127, 63);
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0007 0111 drawError();
;PCODE: $000002C3 VOL: 0
; 0007 0112 state = drawn_error;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0007 0113 }
; 0007 0114 }
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0007 0115 //PRINT("<<<widgetsUpdate\r\n");
; 0007 0116 }
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
