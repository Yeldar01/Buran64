;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;	flags -> R17
;volatile uint32_t tick_ms = 0;
;uint32_t time_zero = 0;
;uint8_t clapan_out_monitor;
;void displayInit(GLCDINIT_t glcd_init_data){
; 0000 002F void displayInit(GLCDINIT_t glcd_init_data){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0030 glcd_init_data.font=font5x7;
;	glcd_init_data -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0031 glcd_init_data.readxmem=NULL;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0032 glcd_init_data.writexmem=NULL;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0033 glcd_init(&glcd_init_data);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0034 }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;void PORT_INIT(){
; 0000 0036 void PORT_INIT(){
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0037 DDRA = 0xff;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0038 PORTA = 0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0039 DDRC = 0xdf;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 003A PORTC |= 0x11;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 003B 
; 0000 003C DDRE = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 003D PORTE = 0;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003E 
; 0000 003F DDRD = 0xff;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0040 PORTD = 0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0041 
; 0000 0042 DDRF = 0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0043 PORTF = 0;//0b11011001;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0044 
; 0000 0045 DDRB = 0b00000000;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0046 PORTB = 0b10000000;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0047 
; 0000 0048 DDRG = 0b000000;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0049 PORTG = 0b00011000;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 004A }
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;void timerInit(){
; 0000 004C void timerInit(){
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004D //adc  trig
; 0000 004E TCCR1B |= (1<<WGM21);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004F TIMSK |= (1<<OCIE1A);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0050 OCR1A = 32768;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0051 TCCR1B |= (1<<CS12);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0052 
; 0000 0053 //systick 1ms
; 0000 0054 ASSR=0<<AS0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0055 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01)  ...
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0056 TCNT0=0x06;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0057 OCR0=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0058 TIMSK |= (1<<TOIE0);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0059 }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;void uartInit(){
; 0000 005C void uartInit(){
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005D // USART0 initialization
; 0000 005E // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 005F // USART0 Receiver: On
; 0000 0060 // USART0 Transmitter: On
; 0000 0061 // USART0 Mode: Asynchronous
; 0000 0062 // USART0 Baud Rate: 9600
; 0000 0063 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | ( ...
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0064 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<U ...
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0065 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UC ...
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0066 UBRR0H=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0067 
; 0000 0068 //9600
; 0000 0069 UBRR0L=0x33;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 006A //56000
; 0000 006B UBRR0L=0x08;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 006C }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;uint32_t GetTick_ms(void){
; 0000 006E uint32_t GetTick_ms(void){
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006F return tick_ms;
;PCODE: $00000067 VOL: 1
;PCODE: $00000068 VOL: 0
; 0000 0070 }
;PCODE: $00000069 VOL: 0
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0073 {
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0074 // Reinitialize Timer 0 value
; 0000 0075 TCNT0=0x06;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0076 tick_ms++;
;PCODE: $0000006E VOL: 1
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0077 
; 0000 0078 //PRINT("\r\nTIMER 1 ms\r\n");
; 0000 0079 // Place your code here
; 0000 007A if(CLAPAN_OUT_PIN & CLAPAN_OUT_Pin){
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 007B time_zero = tick_ms;
;PCODE: $00000075 VOL: 1
;PCODE: $00000076 VOL: 0
; 0000 007C clapan_out_monitor = 1;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 007D }
; 0000 007E else{
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 007F if(clapan_out_monitor){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0080 if(tick_ms - time_zero > CLAPAN_MONITOR_TIMEOUT){
;PCODE: $0000007E VOL: 1
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0081 clapan_out_monitor = 0;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0082 }
; 0000 0083 }
;PCODE: $00000085 VOL: 0
; 0000 0084 }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0085 }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;interrupt[TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0088 {
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0089 GetRef();
;PCODE: $0000008D VOL: 0
; 0000 008A SendAirTemp();
;PCODE: $0000008E VOL: 0
; 0000 008B SendWaterTemp();
;PCODE: $0000008F VOL: 0
; 0000 008C //GetDirect();
; 0000 008D }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;void printBoilerInfo(void){
; 0000 008F void printBoilerInfo(void){
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0090 //PRINT("===========================\r\n");
; 0000 0091 //PRINT("INFO: ");
; 0000 0092 /*
; 0000 0093 PRINT("role=%s ", boiler_role_str[boiler.role]);
; 0000 0094 PRINT("vdd=%.1f ", boiler.vdd);
; 0000 0095 PRINT("air_temp=%.2f ", boiler.air_temp);
; 0000 0096 PRINT("air_temp_adc=%d ", boiler.air_temp_adc);
; 0000 0097 PRINT("water_temp=%.2f ", boiler.water_temp);
; 0000 0098 PRINT("water_adc=%d ", boiler.water_temp_adc);
; 0000 0099 PRINT("gisteresis=%d ", boiler.gisteresis);
; 0000 009A PRINT("\r\n");
; 0000 009B PRINT("water_goal_temp=%d ", boiler.water_goal_temp);
; 0000 009C */
; 0000 009D PRINT("timeLastStage=%d ", boiler.time_of_last_stage);
; 0000 009E PRINT("timSinceLastStage=%d ", tick_ms - boiler.time_of_last_stage);
; 0000 009F //PRINT("weather=%s ", weather_dep_str[boiler.weather]);
; 0000 00A0 PRINT("state=%s ", boiler_state_str[boiler.state]);
; 0000 00A1 PRINT("start=%s ", start_sequence_stage_str[boiler.start_stage]);
; 0000 00A2 PRINT("cmd=%s ", boiler_state_str[boiler.command]);
; 0000 00A3 PRINT("err=%s ", errors_str[boiler.error]);
; 0000 00A4 PRINT("weather=%s ", weather_dep_str[boiler.weather]);
; 0000 00A5 //PRINT("\r\n");
; 0000 00A6 PRINT("URVN=%d ", Uroven_out);
; 0000 00A7 PRINT("Ion=%d ", Ion_out);
; 0000 00A8 PRINT("t_max=%d ", t_max_out);
; 0000 00A9 PRINT("plamya=%d ", plamya_out);
; 0000 00AA PRINT("clapan=%d ", clapan_out());
; 0000 00AB PRINT("TransRozg=%d ", isTransRozgiga_ON);
; 0000 00AC PRINT("Ventilaytor=%d ", isVentilaytor_ON);
; 0000 00AD PRINT("ToplNasos=%d ", isTopl_Nasos_ON);
; 0000 00AE PRINT("SetNasos=%d ", isSetevoi_nasos_ON);
; 0000 00AF PRINT("K-n1=%d ", isKlapan1_ON);
; 0000 00B0 PRINT("K-n2=%d ", isKlapan2_ON);
; 0000 00B1 PRINT("TClap=%d ", tick_ms - time_zero);
; 0000 00B2 
; 0000 00B3 PRINT("\r\n");
; 0000 00B4 }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;extern float DirectVolt;
;extern uint16_t DirectADC;
;void main(void){
; 0000 00B9 void main(void){
;PCODE: $00000097 VOL: 0
; 0000 00BA GLCDINIT_t glcd_init_data;
; 0000 00BB 
; 0000 00BC PORT_INIT();
;PCODE: $00000098 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $00000099 VOL: 0
; 0000 00BD #if 0
; 0000 00BE /*
; 0000 00BF TransRozgiga_ON;
; 0000 00C0 Ventilaytor_ON;
; 0000 00C1 Topl_Nasos_ON;
; 0000 00C2 Setevoi_nasos_ON;
; 0000 00C3 Klapan1_ON;
; 0000 00C4 */
; 0000 00C5 while(1){
; 0000 00C6 Klapan1_ON;
; 0000 00C7 Klapan2_ON;
; 0000 00C8 delay_ms(1000);
; 0000 00C9 Klapan1_OFF;
; 0000 00CA Klapan2_OFF;
; 0000 00CB delay_ms(1000);}
; 0000 00CC while(1);
; 0000 00CD #endif
; 0000 00CE 
; 0000 00CF uartInit();
;PCODE: $0000009A VOL: 0
; 0000 00D0 //PRINT("uart ok\r\n");
; 0000 00D1 #asm("sei")
;PCODE: $0000009B VOL: 0
; 0000 00D2 //PRINT("sei\r\n");
; 0000 00D3 ADC_Init();
;PCODE: $0000009C VOL: 0
; 0000 00D4 //PRINT("adc init()\r\n") ;
; 0000 00D5 timerInit();
;PCODE: $0000009D VOL: 0
; 0000 00D6 
; 0000 00D7 delay_ms(200);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00D8 displayInit(glcd_init_data);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00D9 delay_ms(200);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00DA glcd_clear();
;PCODE: $000000A7 VOL: 0
; 0000 00DB 
; 0000 00DC //uartInit();
; 0000 00DD 
; 0000 00DE boiler_init();
;PCODE: $000000A8 VOL: 0
; 0000 00DF menu_buttons_init();
;PCODE: $000000A9 VOL: 0
; 0000 00E0 
; 0000 00E1 
; 0000 00E2 
; 0000 00E3 #if (0)
; 0000 00E4 
; 0000 00E5 ADC_Init();
; 0000 00E6 printf("\r\n\r\n\r\n");
; 0000 00E7 sei();
; 0000 00E8 printf("vdd\t");
; 0000 00E9 printf("water_volt\t");
; 0000 00EA printf("water_adc\t");
; 0000 00EB printf("waterTemp\t");
; 0000 00EC printf("water_R\t");
; 0000 00ED printf("DirectADC\t");
; 0000 00EE printf("DirectVolt\t");
; 0000 00EF printf("\r\n");
; 0000 00F0 while (1){
; 0000 00F1 printf("%.2f\t", boiler.vdd);
; 0000 00F2 printf("%.2f\t", boiler.water_voltage);
; 0000 00F3 printf("%d\t",   boiler.water_temp_adc);
; 0000 00F4 printf("%.2f\t", boiler.water_temp);
; 0000 00F5 printf("%.2f\t", boiler.water_resistance);
; 0000 00F6 printf("%d\t",   DirectADC);
; 0000 00F7 printf("%.2f\t", DirectVolt);
; 0000 00F8 printf("\r\n");
; 0000 00F9 delay_ms(20);
; 0000 00FA }
; 0000 00FB 
; 0000 00FC #endif
; 0000 00FD 
; 0000 00FE 
; 0000 00FF while (1){
;PCODE: $000000AA VOL: 0
; 0000 0100 //PRINT(">>>ITERATION BEGIN\r\n");
; 0000 0101 printBoilerInfo();
;PCODE: $000000AB VOL: 0
; 0000 0102 menu_buttons_update();
;PCODE: $000000AC VOL: 0
; 0000 0103 boiler_update();
;PCODE: $000000AD VOL: 0
; 0000 0104 boiler_update_pump();
;PCODE: $000000AE VOL: 0
; 0000 0105 boiler_update_nvm();
;PCODE: $000000AF VOL: 0
; 0000 0106 widgetsUpdate();
;PCODE: $000000B0 VOL: 0
; 0000 0107 
; 0000 0108 //printBoilerInfo();
; 0000 0109 //delay_ms(100);
; 0000 010A // PRINT("<<<ITERATION END\r\n\r\n\r\n");   */
; 0000 010B }
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 010C }
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
