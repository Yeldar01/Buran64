;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;typedef enum{
;pressed_none = 0,
;pressed_RightButton  = 0x1<<0,
;pressed_LeftButton   = 0x1<<1,
;pressed_TopButton    = 0x1<<2,
;pressed_BottomButton = 0x1<<3,
;pressed_SelButton    = 0x1<<4,
;}button_pressed_e;
;void emit_command(button_callbacks_t* bc, button_pressed_e cmd){
; 0005 001B void emit_command(button_callbacks_t* bc, button_pressed_e cmd){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0005 001C switch (cmd){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	*bc -> R18,R19
;	cmd -> R17
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0005 001D case pressed_none:
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0005 001E break;
;PCODE: $00000017 VOL: 0
; 0005 001F case pressed_RightButton:
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0005 0020 bc->right();
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0005 0021 break;
;PCODE: $00000021 VOL: 0
; 0005 0022 case pressed_LeftButton:
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0005 0023 bc->left();
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0005 0024 break;
;PCODE: $00000029 VOL: 0
; 0005 0025 case pressed_TopButton:
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0005 0026 bc->up();
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0005 0027 break;
;PCODE: $00000033 VOL: 0
; 0005 0028 case pressed_BottomButton:
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0005 0029 bc->down();
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0005 002A break;
;PCODE: $0000003D VOL: 0
; 0005 002B case pressed_SelButton:
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0005 002C bc->select();
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0005 002D break;
;PCODE: $00000047 VOL: 0
; 0005 002E }
;PCODE: $00000048 VOL: 0
; 0005 002F }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;void button_update(button_callbacks_t* bc){
; 0005 0032 void button_update(button_callbacks_t* bc){
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0005 0033 
; 0005 0034 static button_pressed_e pressed = pressed_none;
; 0005 0035 button_pressed_e currently_pressed = pressed_none;
; 0005 0036 uint8_t buttons_pressed = 0;
; 0005 0037 static uint32_t time_pressed = 0;//for repeatedly emitting commands
; 0005 0038 //without button being released
; 0005 0039 //select button needs to be handled differently
; 0005 003A static uint32_t time_emitted = 0;
; 0005 003B uint16_t timeout_repeat = BUTTON_REPEAT_TIMEOUT_1;
; 0005 003C int i = 0;
; 0005 003D PRINT(">>>button_update()\r\n");
; 0005 003E //jump to what was pressed last time, if user press
; 0005 003F // another button while keeping 1st button, we ignore that
; 0005 0040 currently_pressed |= RightButton ? pressed_RightButton : pressed_none;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;	*bc -> Y+6
;	currently_pressed -> R17
;	buttons_pressed -> R16
;	timeout_repeat -> R18,R19
;	i -> R20,R21
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0005 0041 currently_pressed |= LeftButton ? pressed_LeftButton : pressed_none;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0005 0042 currently_pressed |= TopButton ? pressed_TopButton : pressed_none;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0005 0043 currently_pressed |= BottomButton ? pressed_BottomButton : pressed_none;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0005 0044 currently_pressed |= SelButton ? pressed_SelButton : pressed_none;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0005 0045 
; 0005 0046 for (i = 0; i<8; i++){
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0005 0047 buttons_pressed += (currently_pressed >> i) & 0x01;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0005 0048 }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0005 0049 //PRINT("buttons %d\r\n", buttons_pressed);
; 0005 004A if(buttons_pressed == 0 || buttons_pressed > 1 ||
; 0005 004B (!(currently_pressed & pressed) && pressed != pressed_none)){
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0005 004C PRINT("=====RESET buttons_pressed = %d\r\n", buttons_pressed);
; 0005 004D time_pressed = 0;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0005 004E time_emitted = 0;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0005 004F pressed = pressed_none;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0005 0050 PRINT("<<<button_update()\r\n");
; 0005 0051 return;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0005 0052 }
; 0005 0053 
; 0005 0054 //now we have only one unique button pressed
; 0005 0055 if(pressed == pressed_none){//1st press
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0005 0056 PRINT("====BUTTON 0x%d prev = 0x%d==\r\n", currently_pressed, pressed);
; 0005 0057 emit_command(bc, currently_pressed);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0005 0058 pressed = currently_pressed;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0005 0059 time_pressed = GetTick_ms();
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0005 005A time_emitted = GetTick_ms();
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0005 005B }
; 0005 005C //PRINT("tick_ms %d time_emitted %d time_pressed %d\r\n", tick_ms, time_emitted, ...
; 0005 005D PRINT("PRESSED %d\r\n", tick_ms - time_pressed);
;PCODE: $000000CA VOL: 0
; 0005 005E if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_2){
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0005 005F timeout_repeat =  BUTTON_REPEAT_TIMEOUT_2;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0005 0060 }
; 0005 0061 if(GetTick_ms() - time_pressed > BUTTON_REPEAT_TIMEOUT_SWITCH_3){
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0005 0062 timeout_repeat =  BUTTON_REPEAT_TIMEOUT_3;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0005 0063 }
; 0005 0064 if(GetTick_ms() - time_emitted > timeout_repeat){
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0005 0065 //PRINT("timeout_repeat\r\n");
; 0005 0066 if(currently_pressed != pressed_SelButton){
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0005 0067 emit_command(bc, currently_pressed);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0005 0068 PRINT("====continous=============\r\n");
; 0005 0069 }
; 0005 006A time_emitted = GetTick_ms();
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0005 006B }
; 0005 006C 
; 0005 006D 
; 0005 006E PRINT("<<<button_update()\r\n");
;PCODE: $000000EF VOL: 0
; 0005 006F }
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
